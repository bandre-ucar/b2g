<?xml version="1.0" encoding="UTF-8" standalone="yes" ?>
<!DOCTYPE bugzilla SYSTEM "http://bugs.cgd.ucar.edu/page.cgi?id=bugzilla.dtd">

<bugzilla version="5.0.3"
          urlbase="http://bugs.cgd.ucar.edu/"
          
          maintainer="systems@cgd.ucar.edu"
>

    <bug>
          <bug_id>1127</bug_id>
          
          <creation_ts>2010-03-18 11:33:09 -0600</creation_ts>
          <short_desc>init_interp does not work for CNDV or ED, or any future internally-generated land-cover dynamics</short_desc>
          <delta_ts>2016-11-04 13:50:25 -0600</delta_ts>
          <reporter_accessible>1</reporter_accessible>
          <cclist_accessible>1</cclist_accessible>
          <classification_id>1</classification_id>
          <classification>Unclassified</classification>
          <product>CCSM/CESM CLM</product>
          <component>CLM 5.0</component>
          <version>unspecified</version>
          <rep_platform>All</rep_platform>
          <op_sys>All</op_sys>
          <bug_status>ASSIGNED</bug_status>
          <resolution></resolution>
          
          
          <bug_file_loc></bug_file_loc>
          <status_whiteboard></status_whiteboard>
          <keywords></keywords>
          <priority>P3</priority>
          <bug_severity>normal</bug_severity>
          <target_milestone>Future</target_milestone>
          <dependson>1303</dependson>
          
          <everconfirmed>1</everconfirmed>
          <reporter name="Sam Levis">slevis</reporter>
          <assigned_to name="Erik Kluzek">erik</assigned_to>
          <cc>andre</cc>
    
    <cc>dlawren</cc>
    
    <cc>erik</cc>
    
    <cc>rfisher</cc>
    
    <cc>sacks</cc>
          
          <cf_fixedinversion></cf_fixedinversion>

      

      

      

          <comment_sort_order>oldest_to_newest</comment_sort_order>  
          <long_desc isprivate="0" >
    <commentid>3260</commentid>
    <comment_count>0</comment_count>
    <who name="Sam Levis">slevis</who>
    <bug_when>2010-03-18 11:33:09 -0600</bug_when>
    <thetext>Interpinic has not worked for the old dgvm since probably before clm3.5. Interpinic has not been tested, yet, for CNDV. Therefore, we assume that it does not work.

With the clm4 we will supply spun up initial conditions for CNDV for year 2000, 2 degree simulations. Users will need to complete their own spin ups for other CNDV simulations.

We need to convey the above info in the clm4 user&apos;s guide.</thetext>
  </long_desc><long_desc isprivate="0" >
    <commentid>3813</commentid>
    <comment_count>1</comment_count>
    <who name="Erik Kluzek">erik</who>
    <bug_when>2011-03-02 13:01:29 -0700</bug_when>
    <thetext>After discussing this with Sam, we think the issue with interpinic is that it will need to map the pft weights. Whereas the way interpinic works now is to only map that for which the pft weights are non-zero and leave the pft weights as they are. What will need to happen is that the pft weights will need to be mapped as well as the other variables.</thetext>
  </long_desc><long_desc isprivate="0" >
    <commentid>4563</commentid>
    <comment_count>2</comment_count>
    <who name="Erik Kluzek">erik</who>
    <bug_when>2012-06-25 11:01:45 -0600</bug_when>
    <thetext>Bill responds with..


I wonder if some of this argues for using netcdf4-formatted files, at least for certain files (e.g., the cpl hist files that may be used to drive later runs). I ran a test that showed that using netcdf4 avoids the end-of-month cost in datm – presumably there is a different storage order when using netcdf4/hdf format. However, the cost of reading the data variables increased when using netcdf4 format – though the total datm cost was still lower than before. (I saw similar behavior when converting time to a non-unlimited dimension -- your suggestion (4) -- although netcdf4 gave better overall timing than netcdf3 without the unlimited dimension.) (Also note that there are a number of tuneable parameters in netcdf4 format that can be played with to improve performance.) This all means that there would have to be changes made to the output routines (or post-processing done on the output files) -- but I don&apos;t think anything would have to be changed in the input routines.

If memory serves, the example you are describing has monthly precip data, daily radiation data, and 3-hourly state data (eg wind &amp; temperature) -- if that&apos;s the case then three streams are required because there are three different time-axis / time-coordinates.  Assuming the time-axis was unlimited (in the netcdf sense), these three streams couldn&apos;t be in one netcdf file because there can be only one unlimited dimension per file.

There may be some differences in the time axis in the standard CLM forcing, along the lines of what you mention. Part of the complication, though, arises from the fact that in our case we&apos;re using cpl hist data, using a MOAR run (using datm_mode=CPLHIST, or something like that). So in our case, all the fields are on the same file, with the same temporal resolution. I think there is still a need for different streams, though, because of the different time interpolation methods. But maybe there&apos;s some other way to deal with that?

Regarding your possible solutions: 

(1) put the data on a disk with better bandwidth to the running executable


(1) definitely makes sense, if cisl can provide guidance in this respect.

(3) have the netcdf lib read the unlimited dim time coords more efficiently (if this is possible), and maybe


I like (3) in theory, but based on my very limited understanding of large-block file systems, I&apos;m not sure that will be possible (maybe someone else knows differently, though?).

(2) have the shr_stream module not read the entire time axis when it opens the file, but rather read the time coords as needed, and maybe


I agree that (2) isn&apos;t ideal, but it may be the way to get the best performance.</thetext>
  </long_desc><long_desc isprivate="0" >
    <commentid>4564</commentid>
    <comment_count>3</comment_count>
    <who name="Erik Kluzek">erik</who>
    <bug_when>2012-06-25 11:02:46 -0600</bug_when>
    <thetext>(In reply to comment #2)
&gt; Bill responds with..
&gt; 
&gt; 
&gt; I wonder if some of this argues for using netcdf4-formatted files, at least for
&gt; certain files (e.g., the cpl hist files that may be used to drive later runs).
&gt; I ran a test that showed that using netcdf4 avoids the end-of-month cost in
&gt; datm – presumably there is a different storage order when using netcdf4/hdf
&gt; format. However, the cost of reading the data variables increased when using
&gt; netcdf4 format – though the total datm cost was still lower than before. (I saw
&gt; similar behavior when converting time to a non-unlimited dimension -- your
&gt; suggestion (4) -- although netcdf4 gave better overall timing than netcdf3
&gt; without the unlimited dimension.) (Also note that there are a number of
&gt; tuneable parameters in netcdf4 format that can be played with to improve
&gt; performance.) This all means that there would have to be changes made to the
&gt; output routines (or post-processing done on the output files) -- but I don&apos;t
&gt; think anything would have to be changed in the input routines.
&gt; 
&gt; If memory serves, the example you are describing has monthly precip data, daily
&gt; radiation data, and 3-hourly state data (eg wind &amp; temperature) -- if that&apos;s
&gt; the case then three streams are required because there are three different
&gt; time-axis / time-coordinates.  Assuming the time-axis was unlimited (in the
&gt; netcdf sense), these three streams couldn&apos;t be in one netcdf file because there
&gt; can be only one unlimited dimension per file.
&gt; 
&gt; There may be some differences in the time axis in the standard CLM forcing,
&gt; along the lines of what you mention. Part of the complication, though, arises
&gt; from the fact that in our case we&apos;re using cpl hist data, using a MOAR run
&gt; (using datm_mode=CPLHIST, or something like that). So in our case, all the
&gt; fields are on the same file, with the same temporal resolution. I think there
&gt; is still a need for different streams, though, because of the different time
&gt; interpolation methods. But maybe there&apos;s some other way to deal with that?
&gt; 
&gt; Regarding your possible solutions: 
&gt; 
&gt; (1) put the data on a disk with better bandwidth to the running executable
&gt; 
&gt; 
&gt; (1) definitely makes sense, if cisl can provide guidance in this respect.
&gt; 
&gt; (3) have the netcdf lib read the unlimited dim time coords more efficiently (if
&gt; this is possible), and maybe
&gt; 
&gt; 
&gt; I like (3) in theory, but based on my very limited understanding of large-block
&gt; file systems, I&apos;m not sure that will be possible (maybe someone else knows
&gt; differently, though?).
&gt; 
&gt; (2) have the shr_stream module not read the entire time axis when it opens the
&gt; file, but rather read the time coords as needed, and maybe
&gt; 
&gt; 
&gt; I agree that (2) isn&apos;t ideal, but it may be the way to get the best
&gt; performance.

Whoops added to wrong bug!</thetext>
  </long_desc><long_desc isprivate="0" >
    <commentid>4566</commentid>
    <comment_count>4</comment_count>
    <who name="Sam Levis">slevis</who>
    <bug_when>2012-06-25 13:07:59 -0600</bug_when>
    <thetext>I post this info in case we decide that want to pursue this fix.

Guiling Wang (UConn) got interpinic to work with CNDV. She sent me her interpinic.F90 and BiogeophysRestMod.F90 with the following email dated 5/30/2012, which I have filed in my /clm/interpinic email folder:

Hi Sam,

This is the interpinic.F90 I modified. In addition to the changes to make sure that all 17 PFTs at an individual grid cell are from the same grid cell, I also needed to take several variables out of the list of cycled variables.  I therefore need the corresponding change in BiogeophysRestMod.F90 (the segment of the code with &quot;EaSM&quot; labelled). I think it is good to keep these changes in BiogeophysRestMod.F90 for future releases:
(1)  Otherwise the model does not work if PFT_ variables are not cycled in interpinic. In this case the changes are absolutely necessary.
(2) If the PFT_variables are cycled, then the changes I added to BiogeophysRestMod won&apos;t make any difference.
So the added portion works either way.

FYI, most of the changes are indicated with EaSM, either at the end of the line, or at the beginning and end of a segment of code.

Please let me know if you spot any problem.

Thanks,
Guiling</thetext>
  </long_desc><long_desc isprivate="0" >
    <commentid>7137</commentid>
    <comment_count>5</comment_count>
    <who name="Bill Sacks">sacks</who>
    <bug_when>2015-09-18 11:46:50 -0600</bug_when>
    <thetext>In principle, this same problem would apply to any aspect of dynamic landunits / columns / patches that is generated internally by CLM. So far, I believe that would just apply to ED: all other aspects of the dynamics are either read from file (transient crops &amp; PFTs) or come from another component (dynamic glacier area).</thetext>
  </long_desc><long_desc isprivate="0" >
    <commentid>7138</commentid>
    <comment_count>6</comment_count>
    <who name="Bill Sacks">sacks</who>
    <bug_when>2015-09-18 11:48:48 -0600</bug_when>
    <thetext>I also noticed that the allPFTSfromSameGC flag that used to be present in interpinic is no longer present in the clm4.5 and later initInterp. I believe that flag related to the operation of CNDV. So something like that may need to be brought back if we want interpinic to work for CNDV.</thetext>
  </long_desc><long_desc isprivate="0" >
    <commentid>7728</commentid>
    <comment_count>7</comment_count>
    <who name="Bill Sacks">sacks</who>
    <bug_when>2016-11-04 13:49:10 -0600</bug_when>
    <thetext>This is also somewhat of an issue for glaciers, for which the area comes from GLC, since the fields from GLC aren&apos;t available at initialization.

I&apos;m working around that issue with some special-purpose code for glaciers at the start of the driver run loop, like this (in clm_driver.F90):

    ! ========================================================================
    ! In the first time step of a run that used cold start or init_interp, glacier areas
    ! will start at whatever is specified on the surface dataset, because coupling fields
    ! from GLC aren&apos;t received until the run loop. Thus, CLM will see a potentially large,
    ! fictitious glacier area change in the first time step after cold start or
    ! init_interp. We don&apos;t want this fictitious area change to result in any state or
    ! flux adjustments. Thus, we apply this area change here, at the start of the driver
    ! loop, so that in dynSubgrid_driver, it will look like there is no glacier area
    ! change in the first time step.
    !
    ! This needs to happen very early in the run loop, before any balance checks are
    ! initialized, because - by design - this doesn&apos;t conserve mass at the grid cell
    ! level. (The whole point of this code block is that we adjust areas without doing
    ! the typical state or flux adjustments that need to accompany those area changes for
    ! conservation.)
    !
    ! This accomplishes approximately the same effect that we would get if we were able to
    ! update glacier areas in initialization. The one difference - and minor, theoretical
    ! problem - that could arise from this start-of-run-loop update is: If the first time
    ! step of the CESM run loop looked like: (1) GLC runs and updates glacier area (i.e.,
    ! glacier area changes in the first time step compared with what was set in
    ! initialization); (2) coupler passes new glacier area to CLM; (3) CLM runs. Then the
    ! code here would mean that the true change in glacier area between initialization and
    ! the first time step would be ignored as far as state and flux adjustments are
    ! concerned. But this is unlikely to be an issue in practice: Currently GLC doesn&apos;t
    ! update this frequently, and even if it did, the change in glacier area in a single
    ! time step would typically be very small.
    !
    ! If we are ever able to change the CESM initialization sequence so that GLC fields
    ! are passed to CLM in initialization, then this code block can be removed.
    ! ========================================================================

    need_glacier_initialization = (is_first_step() .and. &amp;
         (is_cold_start .or. is_interpolated_start))

    if (create_glacier_mec_landunit .and. need_glacier_initialization) then
       !$OMP PARALLEL DO PRIVATE (nc, bounds_clump)
       do nc = 1, nclumps
          call get_clump_bounds(nc, bounds_clump)

          call glc2lnd_inst%update_glc2lnd_non_topo( &amp;
               bounds = bounds_clump, &amp;
               glc_behavior = glc_behavior)

          call dynSubgrid_wrapup_weight_changes(bounds_clump, glc_behavior)

       end do
       !$OMP END PARALLEL DO
    end if



Ideally, though, we&apos;d either (a) get glacier areas from GLC -&gt; CLM in initialization, or (b) (relevant to this bug report) interpolate these glacier areas in init_interp. If we did (b) then I could probably remove the check for is_interpolated_start in the above code.</thetext>
  </long_desc><long_desc isprivate="0" >
    <commentid>7729</commentid>
    <comment_count>8</comment_count>
    <who name="Bill Sacks">sacks</who>
    <bug_when>2016-11-04 13:50:25 -0600</bug_when>
    <thetext>However, regarding comment 7: It&apos;s still possible that we&apos;d want to avoid doing the state / flux adjustments in the first time step after init_interp, because it may be the case that we often still have a large (fictitious) change in glacier area in that first time step. This would need more thought.</thetext>
  </long_desc>
      
      

    </bug>
    <bug>
          <bug_id>1139</bug_id>
          
          <creation_ts>2010-03-31 17:03:18 -0600</creation_ts>
          <short_desc>(CLM-only) LAND and PFTS 1D vector history averaging blows up...</short_desc>
          <delta_ts>2017-11-13 13:08:39 -0700</delta_ts>
          <reporter_accessible>1</reporter_accessible>
          <cclist_accessible>1</cclist_accessible>
          <classification_id>1</classification_id>
          <classification>Unclassified</classification>
          <product>CCSM/CESM CLM</product>
          <component>clm3.7</component>
          <version>unspecified</version>
          <rep_platform>IBM SP</rep_platform>
          <op_sys>AIX</op_sys>
          <bug_status>REOPENED</bug_status>
          <resolution></resolution>
          
          
          <bug_file_loc></bug_file_loc>
          <status_whiteboard></status_whiteboard>
          <keywords></keywords>
          <priority>P3</priority>
          <bug_severity>major</bug_severity>
          <target_milestone>CLM5</target_milestone>
          
          
          <everconfirmed>1</everconfirmed>
          <reporter name="Erik Kluzek">erik</reporter>
          <assigned_to name="Erik Kluzek">erik</assigned_to>
          <cc>dlawren</cc>
    
    <cc>jedwards</cc>
    
    <cc>mvertens</cc>
    
    <cc>oleson</cc>
    
    <cc>thoar</cc>
          
          <cf_fixedinversion></cf_fixedinversion>

      

      

      

          <comment_sort_order>oldest_to_newest</comment_sort_order>  
          <long_desc isprivate="0" >
    <commentid>3283</commentid>
    <comment_count>0</comment_count>
    <who name="Erik Kluzek">erik</who>
    <bug_when>2010-03-31 17:03:18 -0600</bug_when>
    <thetext>Keith found that doing 1D vector history averaging for LAND and PFTS blow up...

so both this...

 hist_dov2xy            = .true.,.false.
 hist_fincl2            = &apos;TG&apos;
 hist_mfilt             = 1
 hist_nhtfrq            = 0,-24
 hist_type1d_pertape            = &apos; &apos;,&apos;LAND&apos;

and this...

 hist_dov2xy            = .true.,.false.
 hist_fincl2            = &apos;TG&apos;
 hist_mfilt             = 1
 hist_nhtfrq            = 0,-24
 hist_type1d_pertape            = &apos; &apos;,&apos;PFTS&apos;

FAIL, while setting that second field to &apos; &apos;, &apos;GRID&apos;, or &apos;COLS&apos; works.

Errors look like this for &apos;LAND&apos; averaging...

 127:(seq_frac_check) [atm init] sum ncnt/maxerr =        0   0.00000000000000000
 116: WARNING:  Total sensible heat does not equal sum of scaled heat fluxes for urban columns  nstep =  1  indexl=  25509  eflx_err=  -33.807991
3847853817
 116: clm model is stopping - error is greater than .01 W/m**2
 116: eflx_scale    =  28.7937518604499623
 116: eflx_sh_grnd_scale:  0.000000000000000000E+00 8.07671583705406526 5.25253898785417661 5.28264211229122260 10.1818549232504978
 116: eflx          =  62.6017432452353404
 116: ENDRUN: called without a message string
  51: Error: Forcing height is below canopy height for pft index  112310
  51: ENDRUN: called without a message string
 116:
 116:  Traceback:
 119: WARNING:  Total sensible heat does not equal sum of scaled heat fluxes for urban columns  nstep =  1  indexl=  26187  eflx_err=  -2.9487524
4007795345
 119: clm model is stopping - error is greater than .01 W/m**2
 119: eflx_scale    =  124.686394135918988
 119: eflx_sh_grnd_scale:  9.52250025157385593 12.5780280802565674 8.75716782178573538 29.2372776613224765 64.5914203209803475
 119: eflx          =  127.635146575996941
 119: ENDRUN: called without a message string
 119:
 119:  Traceback:
  51:
  51:  Traceback:
  49: energy balance in canopy  106865 , err= 0.171669314575057796
  49: energy balance in canopy  106865 , err= 0.171669314575057796
  33:Communication statistics of task 33 is associated with task key: 2071308156_33
  79: WARNING:  water balance error  nstep =  1  indexc=  28915  errh2o=  48.7947716632332060
  79: BalanceCheck: soil balance error nstep =         1 point = 28915 imbalance =************ W/m2
  47: WARNING:  water balance error  nstep =  1  indexc=  17210  errh2o=  -0.211449793149122363E-03


And for &apos;PFTS&apos; averaging...

 127:(seq_frac_check) [atm init] sum ncnt/maxerr =        0   0.00000000000000000
 101: urban incident atmospheric longwave radiation balance error -52852.6710421718963
 101: clm model is stopping
 101: ENDRUN: called without a message string
 101:</thetext>
  </long_desc><long_desc isprivate="0" >
    <commentid>7949</commentid>
    <comment_count>1</comment_count>
    <who name="Erik Kluzek">erik</who>
    <bug_when>2017-04-25 14:09:10 -0600</bug_when>
    <thetext>We are opening this up again as we want to be able to do this with the latest model. We are currently outputting in vector format for all PFT&apos;s and it&apos;s costly both in terms of postprocessing and disc space for something that we don&apos;t need. I thought there might be a chance that the fix from Jim for 2184 might have fixed this issue, but Keith showed that wasn&apos;t the case.</thetext>
  </long_desc><long_desc isprivate="0" >
    <commentid>7950</commentid>
    <comment_count>2</comment_count>
    <who name="Jim Edwards">jedwards</who>
    <bug_when>2017-04-25 14:17:40 -0600</bug_when>
    <thetext>This report does not provide adequate information to reproduce the problem.  
Please provide a clm tag and testcase.</thetext>
  </long_desc><long_desc isprivate="0" >
    <commentid>7951</commentid>
    <comment_count>3</comment_count>
    <who name="Erik Kluzek">erik</who>
    <bug_when>2017-04-25 14:18:51 -0600</bug_when>
    <thetext>(In reply to Jim Edwards from comment #2)
&gt; This report does not provide adequate information to reproduce the problem.  
&gt; Please provide a clm tag and testcase.

Yes, I am setting that test case up right now.</thetext>
  </long_desc><long_desc isprivate="0" >
    <commentid>7953</commentid>
    <comment_count>4</comment_count>
    <who name="Erik Kluzek">erik</who>
    <bug_when>2017-04-26 00:11:32 -0600</bug_when>
    <thetext>I setup a test case to demonstrate the problem, and Intel immediately showed a subscript overflow. So I figured I could probably figure the problem out fairly quickly. I boiled it down to the size of a single point problem, and have it running in DDT. I see the problems and also see that the code was never constructed in such a way that these cases would work. So it needs some work to enable them, but then should work as advertised.</thetext>
  </long_desc><long_desc isprivate="0" >
    <commentid>7954</commentid>
    <comment_count>5</comment_count>
    <who name="Erik Kluzek">erik</who>
    <bug_when>2017-04-26 11:31:49 -0600</bug_when>
    <thetext>OK, so averaging up to landunit or column just wasn&apos;t implemented, even though the code claimed it was. Looking at the code the code allowed variables to be output on the native format or mapped up to gridcell level. And there&apos;s some hardwiring going on to assuming any mapping done is at the gridcell level. However, there is also some generality in place that allow if mapping is done for the mapping to be done to the landunit level or the column level by doing what is done for gridcell.

So in the example below I&apos;m showing what needs to be done to coopt the gridcell averaging part to also allow mapping to landunit or column. In the end a more general name should be used for this. Also I&apos;m just showing what needs to be done for the 1d arrays in hist_update_hbuf_field_1d, the same sort of thing needs to happen for 2D arrays in hist_update_hbuf_field_2d. But the code changes look almost identical other than the use of 2D arrays rather than 1D.

[yongi:clm/src/main] erik% svn diff histFileMod.F90
Index: histFileMod.F90
===================================================================
--- histFileMod.F90	(revision 84583)
+++ histFileMod.F90	(working copy)
@@ -1012,6 +1012,7 @@
     integer  :: hpindex                 ! history pointer index
     integer  :: k                       ! gridcell, landunit, column or patch index
     integer  :: beg1d,end1d             ! beginning and ending indices
+    integer  :: beg1d_out,end1d_out     ! beginning and ending indices on output grid
     logical  :: check_active            ! true =&gt; check &apos;active&apos; flag of each point (this refers to a point being active, NOT a history field being active)
     logical  :: valid                   ! true =&gt; history operation is valid
     logical  :: map2gcell               ! true =&gt; map clm pointer field to gridcell
@@ -1025,7 +1026,7 @@
     integer , pointer :: nacs(:,:)      ! accumulation counter
     real(r8), pointer :: field(:)       ! clm 1d pointer field
     logical , pointer :: active(:)      ! flag saying whether each point is active (used for type1d = landunit/column/pft) (this refers to a point being active, NOT a history field being active)
-    real(r8) :: field_gcell(bounds%begg:bounds%endg)  ! gricell level field (used if mapping to gridcell is done)
+    real(r8), allocatable :: field_gcell(:)  ! gricell level field (used if mapping to gridcell is done)
     integer j
     character(len=*),parameter :: subname = &apos;hist_update_hbuf_field_1d&apos;
     integer k_offset                    ! offset for mapping sliced subarray pointers when outputting variables in PFT/col vector form
@@ -1038,6 +1039,8 @@
     hbuf           =&gt; tape(t)%hlist(f)%hbuf
     beg1d          =  tape(t)%hlist(f)%field%beg1d
     end1d          =  tape(t)%hlist(f)%field%end1d
+    beg1d_out      =  tape(t)%hlist(f)%field%beg1d_out
+    end1d_out      =  tape(t)%hlist(f)%field%end1d_out
     type1d         =  tape(t)%hlist(f)%field%type1d
     type1d_out     =  tape(t)%hlist(f)%field%type1d_out
     p2c_scale_type =  tape(t)%hlist(f)%field%p2c_scale_type
@@ -1075,13 +1078,48 @@
           map2gcell = .true.
        end if
     end if
+    if (type1d_out == namel ) then
+       if (type1d == namep) then
+          ! In this and the following calls, we do NOT explicitly subset field using
+          ! bounds (e.g., we do NOT do field(bounds%begp:bounds%endp). This is because,
+          ! for some fields, the lower bound has been reset to 1 due to taking a pointer
+          ! to an array slice. Thus, this code will NOT work properly if done within a
+          ! threaded region! (See also bug 1786)
+          call p2l(bounds, &amp;
+               field, &amp;
+               field_gcell(beg1d_out:end1d_out), &amp;
+               p2c_scale_type, c2l_scale_type, l2g_scale_type)
+          map2gcell = .true.
+       else if (type1d == namec) then
+          call c2l(bounds, &amp;
+               field, &amp;
+               field_gcell(beg1d_out:end1d_out), &amp;
+               c2l_scale_type, l2g_scale_type)
+          map2gcell = .true.
+       end if
+    end if
+    if (type1d_out == namec ) then
+       if (type1d == namep) then
+          ! In this and the following calls, we do NOT explicitly subset field using
+          ! bounds (e.g., we do NOT do field(bounds%begp:bounds%endp). This is because,
+          ! for some fields, the lower bound has been reset to 1 due to taking a pointer
+          ! to an array slice. Thus, this code will NOT work properly if done within a
+          ! threaded region! (See also bug 1786)
+          call p2c(bounds, &amp;
+               field, &amp;
+               field_gcell(beg1d_out:end1d_out), &amp;
+               p2c_scale_type, c2l_scale_type, l2g_scale_type)
+          map2gcell = .true.
+       end if
+    end if
 
     if (map2gcell) then  ! Map to gridcell
+       allocate( field_gcell(beg1d_out:end1d_out) )
 
        ! note that in this case beg1d = begg and end1d=endg
        select case (avgflag)
        case (&apos;I&apos;) ! Instantaneous
-          do k = bounds%begg,bounds%endg
+          do k = beg1d_out, end1d_out
              if (field_gcell(k) /= spval) then
                 hbuf(k,1) = field_gcell(k)
              else
@@ -1090,7 +1128,7 @@
              nacs(k,1) = 1
           end do
        case (&apos;A&apos;, &apos;SUM&apos;) ! Time average / sum
-          do k = bounds%begg,bounds%endg
+          do k = beg1d_out, end1d_out
              if (field_gcell(k) /= spval) then
                 if (nacs(k,1) == 0) hbuf(k,1) = 0._r8
                 hbuf(k,1) = hbuf(k,1) + field_gcell(k)
@@ -1100,7 +1138,7 @@
              end if
           end do
        case (&apos;X&apos;) ! Maximum over time
-          do k = bounds%begg,bounds%endg
+          do k = beg1d_out, end1d_out
              if (field_gcell(k) /= spval) then
                 if (nacs(k,1) == 0) hbuf(k,1) = -1.e50_r8
                 hbuf(k,1) = max( hbuf(k,1), field_gcell(k) )
@@ -1110,7 +1148,7 @@
              nacs(k,1) = 1
           end do
        case (&apos;M&apos;) ! Minimum over time
-          do k = bounds%begg,bounds%endg
+          do k = beg1d_out, end1d_out
              if (field_gcell(k) /= spval) then
                 if (nacs(k,1) == 0) hbuf(k,1) = +1.e50_r8
                 hbuf(k,1) = min( hbuf(k,1), field_gcell(k) )
@@ -1123,6 +1161,7 @@
           write(iulog,*) trim(subname),&apos; ERROR: invalid time averaging flag &apos;, avgflag
           call endrun(msg=errMsg(sourcefile, __LINE__))
        end select
+       deallocate( field_gcell )
 
     else  ! Do not map to gridcell</thetext>
  </long_desc><long_desc isprivate="0" >
    <commentid>7955</commentid>
    <comment_count>6</comment_count>
    <who name="Erik Kluzek">erik</who>
    <bug_when>2017-04-26 14:26:00 -0600</bug_when>
    <thetext>There&apos;s also a bug in a dimension for p2l, which doesn&apos;t seem to be used anywhere else.

Index: subgridAveMod.F90
===================================================================
--- subgridAveMod.F90	(revision 84625)
+++ subgridAveMod.F90	(working copy)
@@ -301,7 +301,7 @@
     integer  :: p,c,l,index                     ! indices
     logical  :: found                              ! temporary for error check
     real(r8) :: sumwt(bounds%begl:bounds%endl)     ! sum of weights
-    real(r8) :: scale_p2c(bounds%begc:bounds%endc) ! scale factor for patch-&gt;column mapping
+    real(r8) :: scale_p2c(bounds%begp:bounds%endp) ! scale factor for patch-&gt;column mapping
     real(r8) :: scale_c2l(bounds%begc:bounds%endc) ! scale factor for column-&gt;landunit mapping
     !------------------------------------------------------------------------</thetext>
  </long_desc><long_desc isprivate="0" >
    <commentid>7960</commentid>
    <comment_count>7</comment_count>
    <who name="Erik Kluzek">erik</who>
    <bug_when>2017-04-28 11:37:47 -0600</bug_when>
    <thetext>I have this working for a single point case. There are additional changes I need to do to get a global case to work. But, I can see that those can be resolved so I&apos;m now confident I can finish this out.</thetext>
  </long_desc><long_desc isprivate="0" >
    <commentid>8039</commentid>
    <comment_count>8</comment_count>
    <who name="Erik Kluzek">erik</who>
    <bug_when>2017-05-20 16:41:13 -0600</bug_when>
    <thetext>OK, so the remaining issue is that it has trouble when you say you want to output averaging up to a level lower than the native grid. For example you ask for COLS on a field that is native on the landunit. As it is this dies with an error, because the subscripts aren&apos;t dimensioned properly.

We decided that this is OK, we just want it to die with an error if you ask for such a thing. To do this cleanly, I think we just need to add an endrun call in the new subroutine I added: is_mapping_upto_subgrid. The call to it in htape_addfld, should have an additional optional field added to send a nice message for this.

We also thought we should change PFTS to PATCH. And I think we should change &apos; &apos; to &apos;NATIVE&apos;.</thetext>
  </long_desc><long_desc isprivate="0" >
    <commentid>8348</commentid>
    <comment_count>9</comment_count>
    <who name="Erik Kluzek">erik</who>
    <bug_when>2017-11-13 13:08:39 -0700</bug_when>
    <thetext>This was partially fixed in clm4_5_16_r243</thetext>
  </long_desc>
      
      

    </bug>
    <bug>
          <bug_id>1205</bug_id>
          
          <creation_ts>2010-08-24 11:09:10 -0600</creation_ts>
          <short_desc>(CLM-only) Don&apos;t set h2osoi_vol for lake or urban</short_desc>
          <delta_ts>2016-05-05 14:14:23 -0600</delta_ts>
          <reporter_accessible>1</reporter_accessible>
          <cclist_accessible>1</cclist_accessible>
          <classification_id>1</classification_id>
          <classification>Unclassified</classification>
          <product>CCSM/CESM CLM</product>
          <component>CLM 5.0</component>
          <version>unspecified</version>
          <rep_platform>All</rep_platform>
          <op_sys>All</op_sys>
          <bug_status>ASSIGNED</bug_status>
          <resolution></resolution>
          
          
          <bug_file_loc></bug_file_loc>
          <status_whiteboard></status_whiteboard>
          <keywords></keywords>
          <priority>P5</priority>
          <bug_severity>minor</bug_severity>
          <target_milestone>Future</target_milestone>
          
          
          <everconfirmed>1</everconfirmed>
          <reporter name="Erik Kluzek">erik</reporter>
          <assigned_to name="Erik Kluzek">erik</assigned_to>
          <cc>dlawren</cc>
    
    <cc>rfisher</cc>
    
    <cc>sacks</cc>
    
    <cc>subin</cc>
          
          <cf_fixedinversion></cf_fixedinversion>

      

      

      

          <comment_sort_order>oldest_to_newest</comment_sort_order>  
          <long_desc isprivate="0" >
    <commentid>3462</commentid>
    <comment_count>0</comment_count>
    <who name="Erik Kluzek">erik</who>
    <bug_when>2010-08-24 11:09:10 -0600</bug_when>
    <thetext>BiogeophysRest has the following...

       do c = begc,endc
          l = clandunit(c)
          if ( ltype(l) == istdlak .or. ltype(l) == istslak )then
             nlevs = nlevlak
          else if ( ltype(l) == isturb )then
             nlevs = nlevurb
          else
             nlevs = nlevgrnd
          end if
          ! NOTE: THIS IS A MEMORY INEFFICIENT COPY
          do j = 1,nlevs
             cptr%cws%h2osoi_vol(c,j) = cptr%cws%h2osoi_liq(c,j)/(cptr%cps%dz(c,j)*denh2o) &amp;
                                      + cptr%cws%h2osoi_ice(c,j)/(cptr%cps%dz(c,j)*denice)
          end do
       end do

It really should always run over nlevgrnd, and NOT do this step if it&apos;s a lake or urban land unit. We&apos;ll need to initialize h2osoi_vol to spval to do this, so that it will work for history output. But, I think that everything now has appropriate filtering so that it isn&apos;t needed by anything else later on.

Here&apos;s email from Zack Subin on this...

Hi Erik,

Yes, I think that h2osoi_vol shouldn&apos;t be set at all for the (current
unimproved) lakes; I&apos;m not sure about urban.

--Zack

On Mon, 23 Aug 2010 17:59 -0600, &quot;Erik Kluzek&quot; &lt;erik@ucar.edu&gt; wrote:
Hey Zack

Yes, if you ran with nlevlak&gt;nlevgrnd you would have subscript overflow,
and mess up memory. Whether that would screw up your results depends on
exactly what part of memory gets corrupted, and if it&apos;s critical or not.

I think the issue is that for urban and lake, dz and h2osoi_liq/ice are
only set to something reasonable up to nlevurb or nlevlak, but are set to
NaN after that, so if floating-point-trapping is on, it will die with an
error.

So possibly what should be done is that maybe these shouldn&apos;t be set at
all for urban and lake in BiogeoRestMod?

On Aug 5, 2010, at 9:21 PM, Zack Subin wrote:

Hi,

The code below doesn&apos;t make any sense to me.  For the current lake
model, h2osoi_vol is meaningless (so it&apos;s at best redundant), but
moreover should have dimensions 1:nlevgrnd, not 1:nlevlak.  This doesn&apos;t
mess up the history because h2osoi_vol is reset to spval in
HydrologyLake.  However, if someone ran with nlevlak &gt; nlevsoi, then
this could cause a seg fault or memory corruption, yes?  Not sure why
that hasn&apos;t happened to me when running with 25 lake layers (or it
didn&apos;t change another variable egregiously enough for me to notice it if
it did...), and I must not have used restarts with debugging on.

--Zack

     do c = begc,endc
        l = clandunit(c)
        if ( ltype(l) == istdlak .or. ltype(l) == istslak )then
           nlevs = nlevlak
        else if ( ltype(l) == isturb )then
           nlevs = nlevurb
        else
           nlevs = nlevgrnd
        end if
        ! NOTE: THIS IS A MEMORY INEFFICIENT COPY
        do j = 1,nlevs
           cptr%cws%h2osoi_vol(c,j) =
           cptr%cws%h2osoi_liq(c,j)/(cptr%cps%dz(c,j)*denh2o) &amp;
                                    +
                                    cptr%cws%h2osoi_ice(c,j)/(cptr%cps%dz(c,j)*denice)
        end do
     end do
___________________________________________________
Zack Subin
PhD Student, UC Berkeley Energy &amp; Resources Group /
Lawrence Berkeley Lab Earth Sciences Division

subin@berkeley.edu | subin@post.harvard.edu
zack.subin@fastmail.fm | zmsubin@lbl.gov


Erik Kluzek, (CGD at NCAR)
National Center for Atmospheric Research
Boulder CO, (off) (303)497-1326 (fax) (303)497-1348
------------------ Home page ------------------------
         http://www.cgd.ucar.edu/~erik
!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!




___________________________________________________
Zack Subin
PhD Student, UC Berkeley Energy &amp; Resources Group /
Lawrence Berkeley Lab Earth Sciences Division

subin@berkeley.edu | subin@post.harvard.edu
zack.subin@fastmail.fm | zmsubin@lbl.gov</thetext>
  </long_desc><long_desc isprivate="0" >
    <commentid>3485</commentid>
    <comment_count>1</comment_count>
    <who name="Erik Kluzek">erik</who>
    <bug_when>2010-08-31 14:21:50 -0600</bug_when>
    <thetext>So I tried making this change, but I ended up with an exact restart problem. The restart problem makes me think that an incorrect usage of h2osoi_vol is being done for possibly urban points.

Here&apos;s the code change I put in...

&gt; diff -c BiogeophysRestMod.F90 BiogeophysRestMod.F90.new
*** BiogeophysRestMod.F90       Tue Aug 31 13:52:10 2010
--- BiogeophysRestMod.F90.new   Tue Aug 31 13:50:36 2010
***************
*** 1551,1577 ****
      if (flag == &apos;read&apos; ) then
         do c = begc,endc
            l = clandunit(c)
!           if ( ltype(l) == istdlak .or. ltype(l) == istslak )then
!              nlevs = nlevlak
!           else if ( ltype(l) == isturb )then
!              nlevs = nlevurb
!           else
!              nlevs = nlevgrnd
            end if
-           ! NOTE: THIS IS A MEMORY INEFFICIENT COPY
-           do j = 1,nlevs
-              cptr%cws%h2osoi_vol(c,j) = cptr%cws%h2osoi_liq(c,j)/(cptr%cps%dz(c,j)*denh2o) &amp;
-                                       + cptr%cws%h2osoi_ice(c,j)/(cptr%cps%dz(c,j)*denice)
-           end do
         end do
-

         ! ------------------------------------------------------------
         ! If initial run -- ensure that water is properly bounded
--- 1551,1564 ----
      if (flag == &apos;read&apos; ) then
         do c = begc,endc
            l = clandunit(c)
!           if ( ltype(l) /= istdlak .and. ltype(l) /= istslak .and. ltype(l) /= isturb )then
!              ! NOTE: THIS IS A MEMORY INEFFICIENT COPY
!              do j = 1,nlevgrnd
!                 cptr%cws%h2osoi_vol(c,j) = cptr%cws%h2osoi_liq(c,j)/(cptr%cps%dz(c,j)*denh2o) &amp;
!                                          + cptr%cws%h2osoi_ice(c,j)/(cptr%cps%dz(c,j)*denice)
!              end do
            end if
         end do

         ! ------------------------------------------------------------
         ! If initial run -- ensure that water is properly bounded
</thetext>
  </long_desc><long_desc isprivate="0" >
    <commentid>3486</commentid>
    <comment_count>2</comment_count>
    <who name="Erik Kluzek">erik</who>
    <bug_when>2010-08-31 14:27:47 -0600</bug_when>
    <thetext>Here&apos;s a list of restart tests that both PASS and fail with the change in it...

grep FAIL td.795346.status | grep TER
007 erHS3 TER.sh _nrcnsc_do clm_usrdat 20030101:NONE:1800 13x12pt_f19_alaskaUSA gx1v6 -3+-3 arb_ic FAIL! rc= 13
011 erCA4 TER.sh _nrsc_ds clm_std^nl_urb 20021001:NONE:3600 1x1_camdenNJ navy -45+-45 arb_ic ....FAIL! rc= 13
015 erNB4 TER.sh _nrmexsc_ds clm_urb1pt^nl_urb 19931201:NONE:3600 1x1_mexicocityMEX navy 57+100 arb_FAIL! rc= 13
025 erAK4 TER.sh _sc_ds clm_std^nl_ptsmode 20030101:NONE:1800 1.9x2.5 gx1v6 -5+-5 cold ..........FAIL! rc= 7
034 erF93 TER.sh 17p_vodsrsc_do clm_std^nl_urb 20021230:NONE:1800 4x5 gx3v7 10+38 cold ..........FAIL! rc= 13
038 erL83 TER.sh _nrsc_do clm_std^nl_urb 20020115:NONE:3600 5x5_amazon navy -5+-5 arb_ic ........FAIL! rc= 13
&gt; !124
grep PASS td.411417.status | grep TER
051 erV61 TER.sh _mec10sc_dh clm_glcmec 19980115:NONE:1800 1.9x2.5 gx1v6 10+38 arb_ic ...........PASS
&gt; grep FAIL td.411417.status | grep TER
002 erA91 TER.sh _sc_dh clm_std^nl_urb 20030101:NONE:3600 4x5 gx3v7 -3+-3 arb_ic ................FAIL! rc= 13
006 erD91 TER.sh _persc_dh clm_per^nl_urb 20021231:NONE:1200 4x5 gx3v7 72+72 cold ...............FAIL! rc= 5
009 erE91 TER.sh 4p_vodsrsc_dh clm_std^nl_urb 20021230:NONE:1800 4x5 gx3v7 10+38 arb_ic .........FAIL! rc= 13
014 erF92 TER.sh 17p_vodsrsc_dm clm_std^nl_urb 20021230:NONE:1800 4x5 gx3v7 10+38 cold ..........FAIL! rc= 13
018 erEH1 TER.sh 4p_vodsrsc_dh clm_std^nl_urb 20021231:NONE:3600 1.9x2.5^0.9x1.25 gx1v6 10+38 arb_icFAIL! rc= 13
022 erHN1 TER.sh 17p_cnsc_dh clm_transient_rcp8.5 20051220:NONE:1800 1.9x2.5 gx1v6@1850-2100 -3+-7 cFAIL! rc= 5
026 erHO2 TER.sh 17p_cnsc_dm clm_drydep 20000704:NONE:1800 10x15 USGS@2000 -3+-7 cold ...........FAIL! rc= 13
030 erG41 TER.sh 17p_sc_dh clm_pftdyn 10001230:NONE:1800 10x15 USGS@1000-1002 72+72 arb_ic ......FAIL! rc= 5
035 erH41 TER.sh 17p_cnsc_dh clm_std^nl_noicertm_sclharv 20021230:NONE:1800 10x15 USGS@2000 10+38 coFAIL! rc= 13
039 erC45 TER.sh 17p_sc_m clm_pftdyn 18501230:NONE:3600 10x15 USGS@1850-2000 -3+-7 arb_ic .......FAIL! rc= 13
043 erC61 TER.sh _scnv_dh clm_std^nl_urb 20020101:NONE:1800 1.9x2.5 gx1v6 10+38 startup .........FAIL! rc= 13
047 erH52 TER.sh 17p_cnsc_dm clm_std^nl_urb 20020115:NONE:1800 10x15 USGS@2000 10+38 cold .......FAIL! rc= 13
056 erLI1 TER.sh _sc_dh clm_std 20020101:NONE:1800 94x192 T62 -5+-5 arb_ic ......................FAIL! rc= 5
060 erL58 TER.sh _sc_dh clm_std^nl_crcrop 20020115:NONE:1800 10x15 USGS 72+72 arb_ic ............FAIL! rc= 13
064 erJ61 TER.sh 4p_casasc_dh clm_std^nl_urb 20021230:NONE:1800 1.9x2.5 gx1v6 10+38 cold ........FAIL! rc= 13
&gt; grep PASS td.795346.status | grep TER
002 erA74 TER.sh _nrsc_ds clm_std^nl_urb 20030101:NONE:1800 1x1_brazil navy -5+-5 arb_ic ........PASS
019 erJ74 TER.sh 4p_nrcasasc_ds clm_std^nl_urb 10001230:NONE:3600 1x1_tropicAtl test -10+-10 arb_ic PASS
029 erAK8 TER.sh _sc_ds clm_std^nl_ptsmode_ocn 20030101:NONE:1800 1.9x2.5 gx1v6 -5+-5 cold ......PASS
042 erK74 TER.sh 17p_cndvsc_s clm_std 19971231:NONE:1800 1x1_brazil navy -334+-336 arb_ic .......PASS
046 erV63 TER.sh _mec10sc_do clm_glcmec 19980115:NONE:1800 1.9x2.5 gx1v6 10+38 arb_ic ...........PASS
050 erHQ4 TER.sh _nrcnsc_ds clm_drydep 20000214:NONE:1800 1x1_brazil navy@2000 -3+-7 cold .......PASS
</thetext>
  </long_desc><long_desc isprivate="0" >
    <commentid>3501</commentid>
    <comment_count>3</comment_count>
    <who name="Erik Kluzek">erik</who>
    <bug_when>2010-09-09 15:10:07 -0600</bug_when>
    <thetext>I tried adding the &quot;-lastmonth&quot; option to the build_streams call in datm.cpl7.template and it now works correctly. The template change is as follows...

***************
*** 992,998 ****

  EOF

! set bs0opts = &quot;$bsopts -b $year_start -e $year_end -lastmonth&quot;

  cat &gt;&gt; $CASEBUILD/datm.buildnml.csh &lt;&lt; EOF
  cat &gt;! $STREAM1TXT &lt;&lt; EOF1
--- 992,998 ----

  EOF

! set bs0opts = &quot;$bsopts -b $year_start -e $year_end &quot;

  cat &gt;&gt; $CASEBUILD/datm.buildnml.csh &lt;&lt; EOF
  cat &gt;! $STREAM1TXT &lt;&lt; EOF1

(To test running over a single year, I also had to set the year_start=year_end=2).</thetext>
  </long_desc>
      
      

    </bug>
    <bug>
          <bug_id>1264</bug_id>
          
          <creation_ts>2011-01-04 16:14:23 -0700</creation_ts>
          <short_desc>[CLM-only] Incorrect documentation on the qflx_evap_tot variable in the code</short_desc>
          <delta_ts>2016-04-25 14:35:22 -0600</delta_ts>
          <reporter_accessible>1</reporter_accessible>
          <cclist_accessible>1</cclist_accessible>
          <classification_id>1</classification_id>
          <classification>Unclassified</classification>
          <product>CCSM/CESM CLM</product>
          <component>CLM 5.0</component>
          <version>unspecified</version>
          <rep_platform>All</rep_platform>
          <op_sys>All</op_sys>
          <bug_status>REOPENED</bug_status>
          <resolution></resolution>
          
          
          <bug_file_loc></bug_file_loc>
          <status_whiteboard></status_whiteboard>
          <keywords></keywords>
          <priority>P3</priority>
          <bug_severity>trivial</bug_severity>
          <target_milestone>CLM5</target_milestone>
          
          
          <everconfirmed>1</everconfirmed>
          <reporter name="Erik Kluzek">erik</reporter>
          <assigned_to name="Erik Kluzek">erik</assigned_to>
          <cc>gbisht</cc>
    
    <cc>oleson</cc>
    
    <cc>rfisher</cc>
    
    <cc>sacks</cc>
          
          <cf_fixedinversion></cf_fixedinversion>

      

      

      

          <comment_sort_order>oldest_to_newest</comment_sort_order>  
          <long_desc isprivate="0" >
    <commentid>3716</commentid>
    <comment_count>0</comment_count>
    <who name="Erik Kluzek">erik</who>
    <bug_when>2011-01-04 16:14:23 -0700</bug_when>
    <thetext>Hello Erik,

While trying to understanding the CLM code for some of my work, I came across a comment in the CLM, which I believe is incorrect. The incorrect comment is present in clm4_0_16 tag. Forrest Hoffmann suggested, I should contact you regarding it.

For the data structure &apos;pft_wflux_type&apos;, the variable qflx_evap_tot(:) has a comment that
qflx_evap_tot = qflx_evap_soi + qflx_evap_veg + qflx_tran_veg;

though it is only
qflx_evap_tot = qflx_evap_soi + qflx_evap_veg (in biogeophys/Biogeophysics2Mod.F90 line 394)

The incorrect comment appears in a couple of files. Since this is a comment only, it isn&apos;t that a big issue; but the correction would help in documenting what the variable qflx_evap_tot actually stores.

cheers,
Gautam.</thetext>
  </long_desc><long_desc isprivate="0" >
    <commentid>3717</commentid>
    <comment_count>1</comment_count>
    <who name="Erik Kluzek">erik</who>
    <bug_when>2011-01-04 16:15:43 -0700</bug_when>
    <thetext>The same problem is in:

BalanceCheckMod
BioPhysics1Mod
BioPhysicsLakeMod

as well.</thetext>
  </long_desc><long_desc isprivate="0" >
    <commentid>3718</commentid>
    <comment_count>2</comment_count>
    <who name="Erik Kluzek">erik</who>
    <bug_when>2011-01-04 16:24:09 -0700</bug_when>
    <thetext>Also in UrbanMod and BareGroundFluxesMod.</thetext>
  </long_desc><long_desc isprivate="0" >
    <commentid>3719</commentid>
    <comment_count>3</comment_count>
    <who name="Erik Kluzek">erik</who>
    <bug_when>2011-01-04 17:42:44 -0700</bug_when>
    <thetext>Comment from Keith...

Yes, looks like the comment(s) is wrong.
The comment in clm_atmlnd.F90 is also wrong:
    real(r8), pointer :: qflx_evap_tot(:)!qflx_evap(_soi + _veg) +
qflx_tran_veg
The long_name(s) for QFLX_EVAP_TOT in histFldsMod.F90 is wrong as well.


qflx_evap_veg is the sum of evaporation of canopy intercepted water
(qflx_evap_can) and transpiration (qflx_tran_veg).

So, could change it to:

qflx_evap_tot = qflx_evap_soi + qflx_evap_can + qflx_tran_veg

or:

qflx_evap_tot = qflx_evap_soi + qflx_evap_veg

I would prefer the first definition.

Keith</thetext>
  </long_desc><long_desc isprivate="0" >
    <commentid>3727</commentid>
    <comment_count>4</comment_count>
    <who name="Erik Kluzek">erik</who>
    <bug_when>2011-01-07 16:48:23 -0700</bug_when>
    <thetext>OK, so here are the changes in the documentation for qflx_evap_tot to go in...

[yong:lnd/clm/src] erik% svn diff
Index: main/clm_atmlnd.F90
===================================================================
--- main/clm_atmlnd.F90	(revision 26281)
+++ main/clm_atmlnd.F90	(working copy)
@@ -74,7 +74,7 @@
      real(r8), pointer :: eflx_lh_tot(:)  !total latent HF (W/m**2)  [+ to atm]
      real(r8), pointer :: eflx_sh_tot(:)  !total sensible HF (W/m**2) [+ to atm]
      real(r8), pointer :: eflx_lwrad_out(:) !IR (longwave) radiation (W/m**2)
-     real(r8), pointer :: qflx_evap_tot(:)!qflx_evap(_soi + _veg) + qflx_tran_veg
+     real(r8), pointer :: qflx_evap_tot(:)!qflx_evap_soi + qflx_evap_can + qflx_tran_veg
      real(r8), pointer :: fsa(:)          !solar rad absorbed (total) (W/m**2)
      real(r8), pointer :: nee(:)          !net CO2 flux (kg CO2/m**2/s) [+ to atm]
      real(r8), pointer :: ram1(:)         !aerodynamical resistance (s/m)
Index: main/clmtype.F90
===================================================================
--- main/clmtype.F90	(revision 26281)
+++ main/clmtype.F90	(working copy)
@@ -669,7 +669,7 @@
    real(r8), pointer :: qflx_tran_veg(:)  !vegetation transpiration (mm H2O/s) (+ = to atm)
    real(r8), pointer :: qflx_evap_can(:)  !evaporation from leaves and stems 
    real(r8), pointer :: qflx_evap_soi(:)  !soil evaporation (mm H2O/s) (+ = to atm)
-   real(r8), pointer :: qflx_evap_tot(:)  !qflx_evap_soi + qflx_evap_veg + qflx_tran_veg
+   real(r8), pointer :: qflx_evap_tot(:)  !qflx_evap_soi + qflx_evap_can + qflx_tran_veg
    real(r8), pointer :: qflx_evap_grnd(:) !ground surface evaporation rate (mm H2O/s) [+]
    real(r8), pointer :: qflx_dew_grnd(:)  !ground surface dew formation (mm H2O /s) [+]
    real(r8), pointer :: qflx_sub_snow(:)  !sublimation rate from snow pack (mm H2O /s) [+]
Index: main/histFldsMod.F90
===================================================================
--- main/histFldsMod.F90	(revision 26281)
+++ main/histFldsMod.F90	(working copy)
@@ -4416,7 +4416,7 @@
          ptr_pft=clm3%g%l%c%p%pwf%qflx_evap_veg, default=&apos;inactive&apos;)
 
     call hist_addfld1d (fname=&apos;QFLX_EVAP_TOT&apos;, units=&apos;mm H2O/s&apos;, &amp;
-         avgflag=&apos;A&apos;, long_name=&apos;qflx_evap_soi + qflx_evap_veg + qflx_tran_veg&apos;, &amp;
+         avgflag=&apos;A&apos;, long_name=&apos;qflx_evap_soi + qflx_evap_can + qflx_tran_veg&apos;, &amp;
          ptr_pft=clm3%g%l%c%p%pwf%qflx_evap_tot, default=&apos;inactive&apos;, c2l_scale_type=&apos;urbanf&apos;)
 
     call hist_addfld1d (fname=&apos;QFLX_DEW_GRND&apos;, units=&apos;mm H2O/s&apos;, &amp;
Index: biogeophys/BalanceCheckMod.F90
===================================================================
--- biogeophys/BalanceCheckMod.F90	(revision 26281)
+++ biogeophys/BalanceCheckMod.F90	(working copy)
@@ -218,7 +218,7 @@
     real(r8), pointer :: eflx_dynbal(:)     ! energy conversion flux due to dynamic land cover change(W/m**2) [+ to atm]
     real(r8), pointer :: eflx_lh_tot(:)     ! total latent heat flux (W/m8*2)  [+ to atm]
     real(r8), pointer :: eflx_soil_grnd(:)  ! soil heat flux (W/m**2) [+ = into soil]
-    real(r8), pointer :: qflx_evap_tot(:)   ! qflx_evap_soi + qflx_evap_veg + qflx_tran_veg
+    real(r8), pointer :: qflx_evap_tot(:)   ! qflx_evap_soi + qflx_evap_can + qflx_tran_veg
     real(r8), pointer :: qflx_irrig(:)      ! irrigation flux (mm H2O /s)
     real(r8), pointer :: qflx_surf(:)       ! surface runoff (mm H2O /s)
     real(r8), pointer :: qflx_qrgwl(:)      ! qflx_surf at glaciers, wetlands, lakes
Index: biogeophys/Biogeophysics1Mod.F90
===================================================================
--- biogeophys/Biogeophysics1Mod.F90	(revision 26281)
+++ biogeophys/Biogeophysics1Mod.F90	(working copy)
@@ -174,7 +174,7 @@
     real(r8), pointer :: eflx_lh_tot_u(:) !urban total latent heat flux (W/m**2)  [+ to atm]
     real(r8), pointer :: eflx_lh_tot_r(:) !rural total latent heat flux (W/m**2)  [+ to atm]
     real(r8), pointer :: eflx_sh_veg(:)   !sensible heat flux from leaves (W/m**2) [+ to atm]
-    real(r8), pointer :: qflx_evap_tot(:) !qflx_evap_soi + qflx_evap_veg + qflx_tran_veg
+    real(r8), pointer :: qflx_evap_tot(:) !qflx_evap_soi + qflx_evap_can + qflx_tran_veg
     real(r8), pointer :: qflx_evap_veg(:) !vegetation evaporation (mm H2O/s) (+ = to atm)
     real(r8), pointer :: qflx_tran_veg(:) !vegetation transpiration (mm H2O/s) (+ = to atm)
     real(r8), pointer :: cgrnd(:)         !deriv. of soil energy flux wrt to soil temp [w/m2/k]
Index: biogeophys/Biogeophysics2Mod.F90
===================================================================
--- biogeophys/Biogeophysics2Mod.F90	(revision 26281)
+++ biogeophys/Biogeophysics2Mod.F90	(working copy)
@@ -158,7 +158,7 @@
     real(r8), pointer :: eflx_sh_tot(:)     ! total sensible heat flux (W/m**2) [+ to atm]
     real(r8), pointer :: eflx_sh_tot_u(:)   ! urban total sensible heat flux (W/m**2) [+ to atm]
     real(r8), pointer :: eflx_sh_tot_r(:)   ! rural total sensible heat flux (W/m**2) [+ to atm]
-    real(r8), pointer :: qflx_evap_tot(:)   ! qflx_evap_soi + qflx_evap_veg + qflx_tran_veg
+    real(r8), pointer :: qflx_evap_tot(:)   ! qflx_evap_soi + qflx_evap_can + qflx_tran_veg
     real(r8), pointer :: eflx_lh_tot(:)     ! total latent heat flux (W/m**2)  [+ to atm]
     real(r8), pointer :: eflx_lh_tot_u(:)   ! urban total latent heat flux (W/m**2)  [+ to atm]
     real(r8), pointer :: eflx_lh_tot_r(:)   ! rural total latent heat flux (W/m**2)  [+ to atm]
Index: biogeophys/Hydrology2Mod.F90
===================================================================
--- biogeophys/Hydrology2Mod.F90	(revision 26281)
+++ biogeophys/Hydrology2Mod.F90	(working copy)
@@ -114,7 +114,7 @@
     real(r8), pointer :: forc_rain(:)     ! rain rate [mm/s]
     real(r8), pointer :: forc_snow(:)     ! snow rate [mm/s]
     real(r8), pointer :: begwb(:)         ! water mass begining of the time step
-    real(r8), pointer :: qflx_evap_tot(:) ! qflx_evap_soi + qflx_evap_veg + qflx_tran_veg
+    real(r8), pointer :: qflx_evap_tot(:) ! qflx_evap_soi + qflx_evap_can + qflx_tran_veg
     real(r8), pointer :: bsw2(:,:)        ! Clapp and Hornberger &quot;b&quot; for CN code
     real(r8), pointer :: psisat(:,:)      ! soil water potential at saturation for CN code (MPa)
     real(r8), pointer :: vwcsat(:,:)      ! volumetric water content at saturation for CN code (m3/m3)
Index: biogeophys/BiogeophysicsLakeMod.F90
===================================================================
--- biogeophys/BiogeophysicsLakeMod.F90	(revision 26281)
+++ biogeophys/BiogeophysicsLakeMod.F90	(working copy)
@@ -138,7 +138,7 @@
 !
     real(r8), pointer :: qflx_prec_grnd(:)  ! water onto ground including canopy runoff [kg/(m2 s)]
     real(r8), pointer :: qflx_evap_soi(:)   ! soil evaporation (mm H2O/s) (+ = to atm)
-    real(r8), pointer :: qflx_evap_tot(:)   ! qflx_evap_soi + qflx_evap_veg + qflx_tran_veg
+    real(r8), pointer :: qflx_evap_tot(:)   ! qflx_evap_soi + qflx_evap_can + qflx_tran_veg
     real(r8), pointer :: qflx_snwcp_liq(:)  ! excess rainfall due to snow capping (mm H2O /s) [+]`
     real(r8), pointer :: qflx_snwcp_ice(:)  ! excess snowfall due to snow capping (mm H2O /s) [+]`
     real(r8), pointer :: eflx_sh_grnd(:)    ! sensible heat flux from ground (W/m**2) [+ to atm]
Index: biogeophys/UrbanMod.F90
===================================================================
--- biogeophys/UrbanMod.F90	(revision 26281)
+++ biogeophys/UrbanMod.F90	(working copy)
@@ -2620,7 +2620,7 @@
     real(r8), pointer :: qflx_evap_soi(:) ! soil evaporation (mm H2O/s) (+ = to atm)
     real(r8), pointer :: qflx_tran_veg(:) ! vegetation transpiration (mm H2O/s) (+ = to atm)
     real(r8), pointer :: qflx_evap_veg(:) ! vegetation evaporation (mm H2O/s) (+ = to atm)
-    real(r8), pointer :: qflx_evap_tot(:) ! qflx_evap_soi + qflx_evap_veg + qflx_tran_veg
+    real(r8), pointer :: qflx_evap_tot(:) ! qflx_evap_soi + qflx_evap_can + qflx_tran_veg
     real(r8), pointer :: t_ref2m(:)       ! 2 m height surface air temperature (K)
     real(r8), pointer :: q_ref2m(:)       ! 2 m height surface specific humidity (kg/kg)
     real(r8), pointer :: t_ref2m_u(:)     ! Urban 2 m height surface air temperature (K)
Index: biogeophys/HydrologyLakeMod.F90
===================================================================
--- biogeophys/HydrologyLakeMod.F90	(revision 26281)
+++ biogeophys/HydrologyLakeMod.F90	(working copy)
@@ -71,7 +71,7 @@
     real(r8), pointer :: t_grnd(:)        !ground temperature (Kelvin)
     real(r8), pointer :: qmelt(:)         !snow melt [mm/s]
     real(r8), pointer :: qflx_evap_soi(:) !soil evaporation (mm H2O/s) (+ = to atm)
-    real(r8), pointer :: qflx_evap_tot(:) !qflx_evap_soi + qflx_evap_veg + qflx_tran_veg
+    real(r8), pointer :: qflx_evap_tot(:) !qflx_evap_soi + qflx_evap_can + qflx_tran_veg
 !
 ! local pointers to implicit inout arrays
 !
Index: biogeophys/BareGroundFluxesMod.F90
===================================================================
--- biogeophys/BareGroundFluxesMod.F90	(revision 26281)
+++ biogeophys/BareGroundFluxesMod.F90	(working copy)
@@ -126,7 +126,7 @@
     real(r8), pointer :: eflx_sh_grnd(:)  ! sensible heat flux from ground (W/m**2) [+ to atm]
     real(r8), pointer :: eflx_sh_tot(:)   ! total sensible heat flux (W/m**2) [+ to atm]
     real(r8), pointer :: qflx_evap_soi(:) ! soil evaporation (mm H2O/s) (+ = to atm)
-    real(r8), pointer :: qflx_evap_tot(:) ! qflx_evap_soi + qflx_evap_veg + qflx_tran_veg
+    real(r8), pointer :: qflx_evap_tot(:) ! qflx_evap_soi + qflx_evap_can + qflx_tran_veg
     real(r8), pointer :: t_ref2m(:)       ! 2 m height surface air temperature (Kelvin)
     real(r8), pointer :: q_ref2m(:)       ! 2 m height surface specific humidity (kg/kg)
     real(r8), pointer :: t_ref2m_r(:)     ! Rural 2 m height surface air temperature (Kelvin)</thetext>
  </long_desc><long_desc isprivate="0" >
    <commentid>3735</commentid>
    <comment_count>5</comment_count>
    <who name="Erik Kluzek">erik</who>
    <bug_when>2011-01-11 11:52:39 -0700</bug_when>
    <thetext>Fixed in clm4_0_20</thetext>
  </long_desc><long_desc isprivate="0" >
    <commentid>6874</commentid>
    <comment_count>6</comment_count>
    <who name="Gautam Bisht">gbisht</who>
    <bug_when>2015-06-26 00:25:34 -0600</bug_when>
    <thetext>Erik,

It appears that there still remains one instance of the incorrect comment in clm4_5_1_r111 at line no. 127 of components/clm/src/biogeophys/SoilFluxesMod.F90. It seems that this incorrect comment was introduced in clm4_5_1_r081 when models/lnd/clm/src/biogeophys/SoilFluxesMod.F90 was added to repository.

-Gautam.</thetext>
  </long_desc>
      
      

    </bug>
    <bug>
          <bug_id>1281</bug_id>
          
          <creation_ts>2011-02-05 10:48:38 -0700</creation_ts>
          <short_desc>[CLM-only] Improve modularity of mksurfdata...</short_desc>
          <delta_ts>2016-05-05 14:15:08 -0600</delta_ts>
          <reporter_accessible>1</reporter_accessible>
          <cclist_accessible>1</cclist_accessible>
          <classification_id>1</classification_id>
          <classification>Unclassified</classification>
          <product>CCSM/CESM CLM</product>
          <component>CLM 5.0</component>
          <version>unspecified</version>
          <rep_platform>All</rep_platform>
          <op_sys>All</op_sys>
          <bug_status>ASSIGNED</bug_status>
          <resolution></resolution>
          
          
          <bug_file_loc></bug_file_loc>
          <status_whiteboard></status_whiteboard>
          <keywords></keywords>
          <priority>P4</priority>
          <bug_severity>enhancement</bug_severity>
          <target_milestone>Future</target_milestone>
          
          
          <everconfirmed>1</everconfirmed>
          <reporter name="Erik Kluzek">erik</reporter>
          <assigned_to name="Erik Kluzek">erik</assigned_to>
          <cc>mvertens</cc>
    
    <cc>rfisher</cc>
    
    <cc>sacks</cc>
          
          <cf_fixedinversion></cf_fixedinversion>

      

      

      

          <comment_sort_order>oldest_to_newest</comment_sort_order>  
          <long_desc isprivate="0" >
    <commentid>3776</commentid>
    <comment_count>0</comment_count>
    <who name="Erik Kluzek">erik</who>
    <bug_when>2011-02-05 10:48:38 -0700</bug_when>
    <thetext>mksurfdata is structured to have some centralized modules to handle everything and then specific modules to handle the specifics of particular data that&apos;s brought in. Some of the data/code should be moved into the specific modules so that it can be restricted within that module. This means moving some of the information/code in: mksrfdat.F90, mkfileMod.F90, and mkvarctl.F90 into the specific modules like: mkharvestMod.F90, mkpftMod.F90 etc. The namelist data still needs to be public, but would only be used in mksrfdat.F90.</thetext>
  </long_desc><long_desc isprivate="0" >
    <commentid>3777</commentid>
    <comment_count>1</comment_count>
    <who name="Mariana Vertenstein">mvertens</who>
    <bug_when>2011-02-05 12:39:16 -0700</bug_when>
    <thetext>I am already doing this in my new mksurfdata branch code (which I still have to commit). I definitely think this should be done on my new branch rather than
on the trunk - since a restructuring should only be done once. Lets talk about this on Monday.</thetext>
  </long_desc><long_desc isprivate="0" >
    <commentid>3778</commentid>
    <comment_count>2</comment_count>
    <who name="Erik Kluzek">erik</who>
    <bug_when>2011-02-07 00:14:09 -0700</bug_when>
    <thetext>Hey Mariana

Yes, I don&apos;t want to do this on the trunk now. But, I did have to make some changes for Keith on the trunk and I noticed this as an issue. I did make a little progress here on the files I was working on. But, it would be nice if could happen on your branch.

And yes we can talk more Monday...</thetext>
  </long_desc><long_desc isprivate="0" >
    <commentid>3784</commentid>
    <comment_count>3</comment_count>
    <who name="Erik Kluzek">erik</who>
    <bug_when>2011-02-09 13:34:14 -0700</bug_when>
    <thetext>Some work on this in clm4_0_24</thetext>
  </long_desc><long_desc isprivate="0" >
    <commentid>5305</commentid>
    <comment_count>4</comment_count>
    <who name="Bill Sacks">sacks</who>
    <bug_when>2013-06-27 11:30:44 -0600</bug_when>
    <thetext>See also the similar bug 1633</thetext>
  </long_desc>
      
      

    </bug>
    <bug>
          <bug_id>1310</bug_id>
          
          <creation_ts>2011-03-31 10:24:06 -0600</creation_ts>
          <short_desc>Restart files are different for CLM when run over different number of tasks</short_desc>
          <delta_ts>2017-03-21 10:27:00 -0600</delta_ts>
          <reporter_accessible>1</reporter_accessible>
          <cclist_accessible>1</cclist_accessible>
          <classification_id>1</classification_id>
          <classification>Unclassified</classification>
          <product>CCSM/CESM CLM</product>
          <component>CLM 5.0</component>
          <version>unspecified</version>
          <rep_platform>All</rep_platform>
          <op_sys>All</op_sys>
          <bug_status>ASSIGNED</bug_status>
          <resolution></resolution>
          
          
          <bug_file_loc></bug_file_loc>
          <status_whiteboard></status_whiteboard>
          <keywords></keywords>
          <priority>P3</priority>
          <bug_severity>normal</bug_severity>
          <target_milestone>CLM5</target_milestone>
          
          
          <everconfirmed>1</everconfirmed>
          <reporter name="Erik Kluzek">erik</reporter>
          <assigned_to name="Erik Kluzek">erik</assigned_to>
          <cc>dlawren</cc>
    
    <cc>jedwards</cc>
    
    <cc>jshollen</cc>
    
    <cc>mvertens</cc>
    
    <cc>oleson</cc>
    
    <cc>rfisher</cc>
    
    <cc>sacks</cc>
          
          <cf_fixedinversion></cf_fixedinversion>

      

      

      

          <comment_sort_order>oldest_to_newest</comment_sort_order>  
          <long_desc isprivate="0" >
    <commentid>3863</commentid>
    <comment_count>0</comment_count>
    <who name="Erik Kluzek">erik</who>
    <bug_when>2011-03-31 10:24:06 -0600</bug_when>
    <thetext>This is from Bill Sacks...

With Mariana&apos;s help, I believe I have uncovered a minor bug in the urban model; this came up while testing the new CLM multi-instance code that I have been working on. This appears as a difference in the lnd restart files depending on the number of processors. It&apos;s possible that this is unimportant, but I thought I&apos;d let you know anyway.

In particular, the two variables albgrd and albgri differ in some urban landunits in the CLM restart files. I have confirmed this with the latest clm tag (clm4_0_26), doing a 5-day run with resolution f19_g16, and comparing results using 64 vs. 16 tasks for the land model. You can see the output of cprnc in /ptmp/sacks/archive/clm4_0_26.init.quarterPEs/rest/0001-01-06-00000/cprnc.out


I believe that what is going on is the following: 

(1) In UrbanMod.F90: UrbanAlbedo: A count is made of the number of urban landunits with coszen &gt; 0 (num_solar); note that this count is just of the number of landunits that this processor is responsible for; thus, this is where the # PE-dependence comes in, I think.

(2) Later in that subroutine, a bunch of calculations are done if num_solar &gt; 0 -- i.e., if this PE is responsible for at least one urban landunit with coszen &gt; 0. Note that many of these calculations are done for all landunits, even ones for which coszen = 0. This introduces the possibility for different results depending on the decomposition.

(3) The particular difference that I am seeing is in albgrd &amp; albgri. These are initialized to 0 at the start of the subroutine, and so remain 0 on any PE for which num_solar = 0. However, for PEs with num_solar &gt; 0, landunits that have coszen = 0 end up getting albgrd = albgri = 1. This is because the calculation of albgrd &amp; albgri depends on the values of the sref_* variables, which are initialized to 1 (and stay at 1 for any landunit for which coszen = 0).</thetext>
  </long_desc><long_desc isprivate="0" >
    <commentid>3864</commentid>
    <comment_count>1</comment_count>
    <who name="Erik Kluzek">erik</who>
    <bug_when>2011-03-31 10:24:42 -0600</bug_when>
    <thetext>Also indices seem to change...

Another bug in the CLM restart files came up in my discussion with Mariana, and she asked that I pass this along to you. It seems that the indices, like pfts1d_li, etc., in the clm restart files depend on the decomposition, and are possibly incorrect.</thetext>
  </long_desc><long_desc isprivate="0" >
    <commentid>3867</commentid>
    <comment_count>2</comment_count>
    <who name="Erik Kluzek">erik</who>
    <bug_when>2011-04-01 10:44:04 -0600</bug_when>
    <thetext>I got a confirmation of this problem for a test I ran on the crop branch where I see the following differences...

034 erL83 TER.sh _nrsc_do clm_std^nl_urb 20020115:3600 5x5_amazon navy -5+-5 arb_ic .............FAIL! rc= 13

Everything&apos;s bit-for-bit up to...

CLM_compare.sh: comparing clmrun.clm2.h1.2002-01-20-00000.nc
                with      /ptmp/erik/test-driver.888958/TSM._nrsc_do.clm_std^nl_urb.20020115:3600.5x5_amazon.navy.-10.arb_ic/clmrun.clm2.h1.2002
-01-20-00000.nc
CLM_compare.sh: files are NOT b4b

 RMS land1d_g         7
 RMS cols1d_g         7
 RMS cols1d_l         8
 RMS pfts1d_g         7
 RMS pfts1d_l         8
 RMS pfts1d_c        12

and the same pattern to the last h1 file on 2002-01-25.</thetext>
  </long_desc><long_desc isprivate="0" >
    <commentid>3869</commentid>
    <comment_count>3</comment_count>
    <who name="Erik Kluzek">erik</who>
    <bug_when>2011-04-01 10:50:22 -0600</bug_when>
    <thetext>In talking about this with Mariana, she thought we should probably comment out
the writing of the indices -- as they are just wrong. I think they&apos;ve been
wrong for a long while as well. She couldn&apos;t use them in interpinic in her
recent work and I remember having the same problem working on it a long time
ago as well.

She also wondered if the albedo difference would be a problem if you used a
restart file with a different start date (so that you might have points where
the sun is in a different position).

She did agree that we don&apos;t want to compare restart files in practice -- we
want to maintain the integrity of the history files. But, she does want to
pursue this issue a bit further to make sure we understand it.</thetext>
  </long_desc><long_desc isprivate="0" >
    <commentid>3870</commentid>
    <comment_count>4</comment_count>
    <who name="Erik Kluzek">erik</who>
    <bug_when>2011-04-01 11:17:02 -0600</bug_when>
    <thetext>I&apos;m seeing the same problem for the following tests on the crop branch on bluefire...

002 erA91 TER.sh _sc_dh clm_std^nl_urb 20030101:3600 4x5 gx3v7 -3+-3 arb_ic .....................FAIL! rc= 13
051 erH52 TER.sh 17p_cnsc_dm clm_std^nl_urb 20020115:1800 10x15 USGS@2000 10+38 cold ............FAIL! rc= 13
072 erJ61 TER.sh 4p_casasc_dh clm_std^nl_urb 20021230:1800 1.9x2.5 gx1v6 10+38 cold .............FAIL! rc= 13

the differences are all in the indices again. This must be something that shows up in a very recent version of clm. This problem would&apos;ve showed up previously otherwise.

The documentation in the ChangeLog shows these tests passing even back to clm4_0_22. I&apos;m not sure what to think here. I&apos;ll rerun one of these for clm4_0_26 and clm4_0_25 and see what I get...</thetext>
  </long_desc><long_desc isprivate="0" >
    <commentid>3871</commentid>
    <comment_count>5</comment_count>
    <who name="Erik Kluzek">erik</who>
    <bug_when>2011-04-01 11:40:54 -0600</bug_when>
    <thetext>OK, so the erL83 test PASSes on clm4_0_24 and clm4_0_25 -- but fails on clm4_0_26.</thetext>
  </long_desc><long_desc isprivate="0" >
    <commentid>3872</commentid>
    <comment_count>6</comment_count>
    <who name="Erik Kluzek">erik</who>
    <bug_when>2011-04-01 12:51:12 -0600</bug_when>
    <thetext>The code differences between 25 and 26 were trivial, and didn&apos;t explain the problem. It turns out what does -- is the version of cprnc used. In 26 the newer version is used and apparently it compares the indices -- but the earlier one didn&apos;t. When I run the same test for older version of clm (clm4_0_25 and even clm4_0_14) -- I get fails on the tests when using the newer cprnc (updating CLM_compare.sh and test_driver.sh).

So this is a long-standing problem that just shows up due to the newer version of cprnc. When I was figuring out the issues with the newer cprnc in the clm4_0_26 tag, I must not have rerun the tests that passed before.</thetext>
  </long_desc><long_desc isprivate="0" >
    <commentid>3874</commentid>
    <comment_count>7</comment_count>
    <who name="Erik Kluzek">erik</who>
    <bug_when>2011-04-01 13:55:27 -0600</bug_when>
    <thetext>OK, so I talked about this with Keith and Sam. First of all in principle the indices are important and 1D vector mode is important. However, Mariana worked with Sam and showed him indices that were wrong and verified he wasn&apos;t using them. interpinic also doesn&apos;t use them as they are incorrect. You can derive them from other indices that do exist.

I also verified that with the new cprnc, I get my test to PASS when I don&apos;t write out the fields: land1d_gi, cols1d_li, cols1d_gi, pfts1d_gi, pfts1d_li, and pfts1d_ci in histFileMod.F90 and subgridRestMod.F90. So for now that&apos;s what I&apos;ll do. But, at some point we may want to fix this in the future. I&apos;ll continue to do work on it.</thetext>
  </long_desc><long_desc isprivate="0" >
    <commentid>3929</commentid>
    <comment_count>8</comment_count>
    <who name="Erik Kluzek">erik</who>
    <bug_when>2011-05-02 14:35:42 -0600</bug_when>
    <thetext>In clm4_0_27 -- I comment out writing out the fields that are wrong. But, we should figure out why they are wrong.</thetext>
  </long_desc><long_desc isprivate="0" >
    <commentid>5445</commentid>
    <comment_count>9</comment_count>
    <who name="Bill Sacks">sacks</who>
    <bug_when>2013-08-31 06:35:23 -0600</bug_when>
    <thetext>I noticed that

        int pfts1d_ci(pft) ;

is still in the restart file; should this be removed like the other indices were?</thetext>
  </long_desc><long_desc isprivate="0" >
    <commentid>5446</commentid>
    <comment_count>10</comment_count>
    <who name="Bill Sacks">sacks</who>
    <bug_when>2013-08-31 06:44:25 -0600</bug_when>
    <thetext>Regarding this: Also indices seem to change... (land1d_g, cols1d_g, etc.):

I was thinking about this issue with respect to the 1-d vector reordering that was done recently in the clm4.5 code (in clm4_5_21, I believe). I believe (but may be wrong) that the indices in memory do not correspond to indices on the file. I&apos;m not sure this explains why these depended on the decomposition before, but I think they will almost certainly depend on the decomposition now.

The issue, I think, is that the arrangement in memory (during a run) does depend on the decomposition - both on the number of processors and on the number of threads (or more precisely, the number of clumps per processor). Mariana went to some pains to make the arrangement of points on the restart file independent of decomposition. However, I think that land1d_g, cols1d_g, etc. refer to the indices in MEMORY, not the indices on the file.

If these variables are desired on the restart file - and 1-d history files (with dov2xy = .false.), a possible workaround would be to also write variables like the following: land1d_l, cols1d_c, etc. These would give the index of each point in memory. Note that we do NOT expect cols1d_c(1) to be 1 - again, because the arrangement on the file differs from the arrangement in memory. Furthermore, these variables - like the other indices - would differ depending on the decomposition. But at least it would let you do analyses using these variables.</thetext>
  </long_desc><long_desc isprivate="0" >
    <commentid>5448</commentid>
    <comment_count>11</comment_count>
    <who name="Erik Kluzek">erik</who>
    <bug_when>2013-08-31 11:08:02 -0600</bug_when>
    <thetext>Something we gave up with the move from CLM stand-alone testing to CESM testing was the change of number of processors on restart. We assume that the model is able to do this and startup for any number of processors, regardless of how many processors the restart file was written with.

I think this issue underscores the importance of this issue and of adding testing for that ability into CESM testing (at least for components like CLM where this is expected).

It would be good to hear if the current model gives the same answers if you restart with a different number of processors.</thetext>
  </long_desc><long_desc isprivate="0" >
    <commentid>5449</commentid>
    <comment_count>12</comment_count>
    <who name="Bill Sacks">sacks</who>
    <bug_when>2013-08-31 15:37:42 -0600</bug_when>
    <thetext>Regarding Erik&apos;s last comment: I think we should be okay if we have a PEM (and once threading is fixed, a PET) test that starts up from initial conditions. I haven&apos;t checked if the current tests do so.</thetext>
  </long_desc><long_desc isprivate="0" >
    <commentid>7908</commentid>
    <comment_count>13</comment_count>
    <who name="Erik Kluzek">erik</who>
    <bug_when>2017-03-21 10:27:00 -0600</bug_when>
    <thetext>Sean Swenson has this to say...

hi, erik,
  I think the solution to this problem in histfileMod:

       ! --- EBK Do NOT write out indices that are incorrect 4/1/2011 --- Bug 1310

can be fixed using the code from subgridRestMod:

    do p=bounds%begp,bounds%endp
       iparr(p) = GetGlobalIndex(decomp_index=patch%column(p), clmlevel=namec)
    enddo
    call restartvar(ncid=ncid, flag=flag, varname=&apos;pfts1d_column_index&apos;, xtype=ncd_int,   &amp;
         dim1name=&apos;pft&apos;,                                                                  &amp;
         long_name=&apos;column index of corresponding pft&apos;,                                   &amp;
         interpinic_flag=&apos;skip&apos;, readvar=readvar, data=iparr)


  it seems to work for me offline when I use the pfts1d_column_index from the restart file instead of the pfts1d_ci from the history file.  I haven&apos;t actually implemented code in histfileMod.</thetext>
  </long_desc>
      
      

    </bug>
    <bug>
          <bug_id>1361</bug_id>
          
          <creation_ts>2011-06-13 14:56:59 -0600</creation_ts>
          <short_desc>[CLM-only] Problem with transient compsets for PTCLM</short_desc>
          <delta_ts>2016-04-25 14:49:21 -0600</delta_ts>
          <reporter_accessible>1</reporter_accessible>
          <cclist_accessible>1</cclist_accessible>
          <classification_id>1</classification_id>
          <classification>Unclassified</classification>
          <product>CCSM/CESM CLM</product>
          <component>CLM 5.0</component>
          <version>unspecified</version>
          <rep_platform>All</rep_platform>
          <op_sys>All</op_sys>
          <bug_status>ASSIGNED</bug_status>
          <resolution></resolution>
          
          
          <bug_file_loc></bug_file_loc>
          <status_whiteboard></status_whiteboard>
          <keywords></keywords>
          <priority>P3</priority>
          <bug_severity>normal</bug_severity>
          <target_milestone>CLM5</target_milestone>
          
          
          <everconfirmed>1</everconfirmed>
          <reporter name="Erik Kluzek">erik</reporter>
          <assigned_to name="Erik Kluzek">erik</assigned_to>
          <cc>rfisher</cc>
    
    <cc>sacks</cc>
          
          <cf_fixedinversion></cf_fixedinversion>

      

      

      

          <comment_sort_order>oldest_to_newest</comment_sort_order>  
          <long_desc isprivate="0" >
    <commentid>4080</commentid>
    <comment_count>0</comment_count>
    <who name="Erik Kluzek">erik</who>
    <bug_when>2011-06-13 14:56:59 -0600</bug_when>
    <thetext>When PTCLM is setup for a transient compset that has a _dynpftdata.txt file that goes with it, it gives the wrong syntax for calling the NCL conversion program for it.

To get this to work make the following changes...

Index: PTCLM.py
===================================================================
--- PTCLM.py	(revision 28836)
+++ PTCLM.py	(working copy)
@@ -717,9 +717,10 @@
                if plev&gt;0: print &quot;Transition PFT file exists, so using it for changes in PFT&quot;
                # Convert the file from transition years format to mksurfdata pftdyn format
                cnv = ptclm_dir + \
-                     &quot;/PTCLM_sitedata/cnvrt_trnsyrs2_pftdyntxtfile.pl &quot;+sim_year_range
+                     &quot;/PTCLM_sitedata/cnvrt_trnsyrs2_pftdyntxtfile.pl &quot; + \
+                     pftdyn_site_filename+&quot; &quot;+sim_year_range
                pftdynoutfile = mycase+&quot;/pftdyn_&quot;+mycasename+&quot;.txt&quot;
-               system( cnv+pftdyn_site_filename+&quot; &gt; &quot;+pftdynoutfile )
+               system( cnv+&quot; &gt; &quot;+pftdynoutfile )
                dynpftopts = &quot; -dynpft &quot;+pftdynoutfile
             else:
                if plev&gt;0: print &quot;Transition PFT file did NOT exist, so proceeding with constant PFT&quot;</thetext>
  </long_desc>
      
      

    </bug>
    <bug>
          <bug_id>1362</bug_id>
          
          <creation_ts>2011-06-14 15:48:58 -0600</creation_ts>
          <short_desc>[CLM-only] Set dynamic land-use change dataset for PTCLM for US-UMB</short_desc>
          <delta_ts>2016-04-25 14:50:15 -0600</delta_ts>
          <reporter_accessible>1</reporter_accessible>
          <cclist_accessible>1</cclist_accessible>
          <classification_id>1</classification_id>
          <classification>Unclassified</classification>
          <product>CCSM/CESM CLM</product>
          <component>CLM 5.0</component>
          <version>unspecified</version>
          <rep_platform>All</rep_platform>
          <op_sys>All</op_sys>
          <bug_status>ASSIGNED</bug_status>
          <resolution></resolution>
          
          
          <bug_file_loc></bug_file_loc>
          <status_whiteboard></status_whiteboard>
          <keywords></keywords>
          <priority>P4</priority>
          <bug_severity>enhancement</bug_severity>
          <target_milestone>CLM5</target_milestone>
          <dependson>1368</dependson>
          
          <everconfirmed>1</everconfirmed>
          <reporter name="Erik Kluzek">erik</reporter>
          <assigned_to name="Erik Kluzek">erik</assigned_to>
          <cc>rfisher</cc>
    
    <cc>sacks</cc>
          
          <cf_fixedinversion></cf_fixedinversion>

      

      

      

          <comment_sort_order>oldest_to_newest</comment_sort_order>  
          <long_desc isprivate="0" >
    <commentid>4081</commentid>
    <comment_count>0</comment_count>
    <who name="Erik Kluzek">erik</who>
    <bug_when>2011-06-14 15:48:58 -0600</bug_when>
    <thetext>So that I&apos;m testing PTCLM with transient land-use change datasets, I need to set one up for the US-UMB site (or gin up a test site for this). If I read the AmerFlux data on US-UMB correctly they had two harvest times in 1998 and 1999. I think the forest type stays the same, but they cut some trees down during these two dates. So the PFT dynamic file could be used to describe this.

LIT_PROD	gC/m2(ground)/y		145	175/1999	06/24/1999
LIT_PROD	gC/m2(ground)/y		149.4	175/1999	06/24/1999
LIT_PROD	gC/m2(ground)/y		149.9	175/1999	06/24/1999
LIT_PROD	gC/m2(ground)/y		151.6	175/1999	06/24/1999
LIT_PROD	gC/m2(ground)/y		151.9	175/1999	06/24/1999
LIT_PROD	gC/m2(ground)/y		143.3	201/1998	07/20/1998
LIT_PROD	gC/m2(ground)/y		153.4	201/1998	07/20/1998
LIT_PROD	gC/m2(ground)/y		158.9	201/1998	07/20/1998
LIT_PROD	gC/m2(ground)/y		180.6	201/1998	07/20/1998</thetext>
  </long_desc>
      
      

    </bug>
    <bug>
          <bug_id>1375</bug_id>
          
          <creation_ts>2011-07-08 20:12:33 -0600</creation_ts>
          <short_desc>PTCLM needs ability to set organic, topo, and VOC emission factors</short_desc>
          <delta_ts>2016-05-05 14:19:55 -0600</delta_ts>
          <reporter_accessible>1</reporter_accessible>
          <cclist_accessible>1</cclist_accessible>
          <classification_id>1</classification_id>
          <classification>Unclassified</classification>
          <product>CCSM/CESM CLM</product>
          <component>CLM 5.0</component>
          <version>unspecified</version>
          <rep_platform>All</rep_platform>
          <op_sys>All</op_sys>
          <bug_status>ASSIGNED</bug_status>
          <resolution></resolution>
          
          
          <bug_file_loc></bug_file_loc>
          <status_whiteboard></status_whiteboard>
          <keywords></keywords>
          <priority>P5</priority>
          <bug_severity>enhancement</bug_severity>
          <target_milestone>Future</target_milestone>
          
          
          <everconfirmed>1</everconfirmed>
          <reporter name="Erik Kluzek">erik</reporter>
          <assigned_to name="Erik Kluzek">erik</assigned_to>
          <cc>rfisher</cc>
    
    <cc>sacks</cc>
          
          <cf_fixedinversion></cf_fixedinversion>

      

      

      

          <comment_sort_order>oldest_to_newest</comment_sort_order>  
          <long_desc isprivate="0" >
    <commentid>4122</commentid>
    <comment_count>0</comment_count>
    <who name="Erik Kluzek">erik</who>
    <bug_when>2011-07-08 20:12:33 -0600</bug_when>
    <thetext>With the non-2D grid branch comes the complexity of needing mapping datasets for each input dataset. In order to side-step this for single-point mode and PTCLM, we need to add the ability to set the organic soil carbon amount, the topographic height and the VOC emission factors.</thetext>
  </long_desc><long_desc isprivate="0" >
    <commentid>7460</commentid>
    <comment_count>1</comment_count>
    <who name="Bill Sacks">sacks</who>
    <bug_when>2016-04-25 14:53:23 -0600</bug_when>
    <thetext>Without this capability, you use what comes from the gridded data, there just isn&apos;t a way to override it easily</thetext>
  </long_desc>
      
      

    </bug>
    <bug>
          <bug_id>1381</bug_id>
          
          <creation_ts>2011-07-27 14:46:16 -0600</creation_ts>
          <short_desc>[CLM-only] Can&apos;t change monthly average files to NOT be one per month</short_desc>
          <delta_ts>2016-09-15 13:06:35 -0600</delta_ts>
          <reporter_accessible>1</reporter_accessible>
          <cclist_accessible>1</cclist_accessible>
          <classification_id>1</classification_id>
          <classification>Unclassified</classification>
          <product>CCSM/CESM CLM</product>
          <component>CLM 5.0</component>
          <version>unspecified</version>
          <rep_platform>All</rep_platform>
          <op_sys>All</op_sys>
          <bug_status>REOPENED</bug_status>
          <resolution></resolution>
          
          
          <bug_file_loc></bug_file_loc>
          <status_whiteboard></status_whiteboard>
          <keywords></keywords>
          <priority>P3</priority>
          <bug_severity>normal</bug_severity>
          <target_milestone>CLM5</target_milestone>
          
          
          <everconfirmed>1</everconfirmed>
          <reporter name="Erik Kluzek">erik</reporter>
          <assigned_to name="Erik Kluzek">erik</assigned_to>
          <cc>anthony.p.craig</cc>
    
    <cc>dlawren</cc>
    
    <cc>oleson</cc>
    
    <cc>rfisher</cc>
    
    <cc>sacks</cc>
    
    <cc>swensosc</cc>
          
          <cf_fixedinversion></cf_fixedinversion>

      

      

      

          <comment_sort_order>oldest_to_newest</comment_sort_order>  
          <long_desc isprivate="0" >
    <commentid>4145</commentid>
    <comment_count>0</comment_count>
    <who name="Erik Kluzek">erik</who>
    <bug_when>2011-07-27 14:46:16 -0600</bug_when>
    <thetext>Hanna and Sean found that if you do the following...

hist_mfilt = 12
hist_nhtfrq = 0

instead of getting 12 monthly time-samples on a yearly file -- you get a file per month. It would be nice to get what you ask for in this case. I also have examples of doing this sort of thing in the User&apos;s Guide so people will be led astray by the examples.</thetext>
  </long_desc><long_desc isprivate="0" >
    <commentid>4146</commentid>
    <comment_count>1</comment_count>
    <who name="Erik Kluzek">erik</who>
    <bug_when>2011-07-28 10:43:07 -0600</bug_when>
    <thetext>Looks like the issue is this piece of code in histFileMod.F90...

[yong:clm/src/main] erik% svn diff histFileMod.F90 
Index: histFileMod.F90
===================================================================
--- histFileMod.F90	(revision 29486)
+++ histFileMod.F90	(working copy)
@@ -522,7 +522,6 @@
        tape(t)%begtime = day + sec/secspday
        tape(t)%dov2xy = hist_dov2xy(t)
        tape(t)%nhtfrq = hist_nhtfrq(t)
-       if (hist_nhtfrq(t) == 0) hist_mfilt(t) = 1
        tape(t)%mfilt = hist_mfilt(t)
        if (hist_ndens(t) == 1) then
           tape(t)%ncprec = ncd_double


Although if you do the above, the filenames for monthly frequencies will still have year-month, even if they are a years worth of files or something. I suppose there&apos;s no way around that though...</thetext>
  </long_desc><long_desc isprivate="0" >
    <commentid>4147</commentid>
    <comment_count>2</comment_count>
    <who name="Erik Kluzek">erik</who>
    <bug_when>2011-07-28 11:44:55 -0600</bug_when>
    <thetext>At issue is the CESM filename conventions which say a file of

YYYY-MM.nc

is a monthly average.

http://www.cesm.ucar.edu/models/cesm1.0/filename_conventions_cesm.html

So possibly the monthly filenames should be in the above form ONLY if mfilt=1, AND nhtfrq=0.</thetext>
  </long_desc><long_desc isprivate="0" >
    <commentid>4184</commentid>
    <comment_count>3</comment_count>
    <who name="Erik Kluzek">erik</who>
    <bug_when>2011-08-18 13:41:28 -0600</bug_when>
    <thetext>Fixed in clm4_0_34</thetext>
  </long_desc><long_desc isprivate="0" >
    <commentid>4793</commentid>
    <comment_count>4</comment_count>
    <who name="Erik Kluzek">erik</who>
    <bug_when>2012-11-16 13:46:58 -0700</bug_when>
    <thetext>This is still a problem because of the following line in controlMod.F90

          if (hist_nhtfrq(i) == 0) then
             hist_mfilt(i) = 1

that is done AFTER the namelist is read. The above would be fine if it was done BEFORE the namelist was read.</thetext>
  </long_desc><long_desc isprivate="0" >
    <commentid>7688</commentid>
    <comment_count>5</comment_count>
    <who name="Erik Kluzek">erik</who>
    <bug_when>2016-09-15 13:06:35 -0600</bug_when>
    <thetext>This issue is both in the cesm1.2.2 release and in the latest development version clm4_5_12_r194.

Here&apos;s the fix we decided on at this morning&apos;s CLM-CMT meeting.

We also wanted to make sure that the special names given to monthly filenames is ONLY for files that contain a single month (and it already has that).

Index: controlMod.F90
===================================================================
--- controlMod.F90	(revision 80463)
+++ controlMod.F90	(working copy)
@@ -312,9 +312,7 @@
        ! History and restart files
 
        do i = 1, max_tapes
-          if (hist_nhtfrq(i) == 0) then
-             hist_mfilt(i) = 1
-          else if (hist_nhtfrq(i) &lt; 0) then
+          if (hist_nhtfrq(i) &lt; 0) then
              hist_nhtfrq(i) = nint(-hist_nhtfrq(i)*SHR_CONST_CDAY/(24._r8*dtime))
           endif
        end do
Index: histFileMod.F90
===================================================================
--- histFileMod.F90	(revision 80463)
+++ histFileMod.F90	(working copy)
@@ -59,7 +59,7 @@
   integer, public :: &amp;
        hist_ndens(max_tapes) = 2         ! namelist: output density of netcdf history files
   integer, public :: &amp;
-       hist_mfilt(max_tapes) = 30        ! namelist: number of time samples per tape
+       hist_mfilt(max_tapes) = (/ 1, (30, ni=2, max_tapes/)        ! namelist: number of time samples per tape
   logical, public :: &amp;
        hist_dov2xy(max_tapes) = (/.true.,(.true.,ni=2,max_tapes)/) ! namelist: true=&gt; do grid averaging
   integer, public :: &amp;</thetext>
  </long_desc>
      
      

    </bug>
    <bug>
          <bug_id>1388</bug_id>
          
          <creation_ts>2011-08-09 12:12:11 -0600</creation_ts>
          <short_desc>[CLM-only] Rework mksurfdata.pl to have a build-namelist like the main CLM build-namelist</short_desc>
          <delta_ts>2016-05-05 14:21:20 -0600</delta_ts>
          <reporter_accessible>1</reporter_accessible>
          <cclist_accessible>1</cclist_accessible>
          <classification_id>1</classification_id>
          <classification>Unclassified</classification>
          <product>CCSM/CESM CLM</product>
          <component>CLM 5.0</component>
          <version>unspecified</version>
          <rep_platform>All</rep_platform>
          <op_sys>All</op_sys>
          <bug_status>ASSIGNED</bug_status>
          <resolution></resolution>
          
          
          <bug_file_loc></bug_file_loc>
          <status_whiteboard></status_whiteboard>
          <keywords></keywords>
          <priority>P3</priority>
          <bug_severity>enhancement</bug_severity>
          <target_milestone>Future</target_milestone>
          
          
          <everconfirmed>1</everconfirmed>
          <reporter name="Erik Kluzek">erik</reporter>
          <assigned_to name="Erik Kluzek">erik</assigned_to>
          <cc>bugzillaMuszala</cc>
    
    <cc>mvertens</cc>
    
    <cc>rfisher</cc>
    
    <cc>sacks</cc>
          
          <cf_fixedinversion></cf_fixedinversion>

      

      

      

          <comment_sort_order>oldest_to_newest</comment_sort_order>  
          <long_desc isprivate="0" >
    <commentid>4162</commentid>
    <comment_count>0</comment_count>
    <who name="Erik Kluzek">erik</who>
    <bug_when>2011-08-09 12:12:11 -0600</bug_when>
    <thetext>The complexity of the mksurfdata_map tool is so complex it needs a robust build-namelist tool to manage it. It should be reworked so that mksurfdata.pl uses the tool externally (instead of queryNamelist.pl). The namelist generation would be better and could be used outside of mksurfdata.pl.</thetext>
  </long_desc><long_desc isprivate="0" >
    <commentid>4291</commentid>
    <comment_count>1</comment_count>
    <who name="Erik Kluzek">erik</who>
    <bug_when>2011-10-26 10:09:43 -0600</bug_when>
    <thetext>Add mariana to this bug.

Also need to have the ability to create a set of mapping files and immediately be able to run mksurfdata.pl using them. This might mean having a script to update the XML files with the mapping files, or something. Not quite sure.</thetext>
  </long_desc><long_desc isprivate="0" >
    <commentid>4293</commentid>
    <comment_count>2</comment_count>
    <who name="Erik Kluzek">erik</who>
    <bug_when>2011-10-26 10:38:42 -0600</bug_when>
    <thetext>Talking to Mariana we thought we need an option for unusual grids. Where you want to just explore a grid as quickly as possible without having to put files into the XML database. In this case mksurfdata.pl could have an option to run mkmapdata.sh leave the files in place and simply point to them when creating the namelist. The naming convention then needs to be updated to be consistent between the two.</thetext>
  </long_desc><long_desc isprivate="0" >
    <commentid>4295</commentid>
    <comment_count>3</comment_count>
    <who name="Erik Kluzek">erik</who>
    <bug_when>2011-10-28 11:43:59 -0600</bug_when>
    <thetext>Mariana would like the following optional tool creation process...


Erik -  I would like to implement a tool chain in clm - that does the following 

    0) given a model domain atm SCRIP grid file (unit mask) and a model domain ocn SCRIP grid file
    1) creates the necessary mapping files on the fly for generating the surface dataset using (0)
    2) creates the surface dataset using (1)
    3) creates the map file for ocn-&gt;atm (including a unit mapping if needed)
    4) creates the ocn and land domain files using (1)    

The above should not require adding any changes to the clm xml files.</thetext>
  </long_desc>
      
      

    </bug>
    <bug>
          <bug_id>1398</bug_id>
          
          <creation_ts>2011-08-22 21:31:26 -0600</creation_ts>
          <short_desc>[CLM-only] clm and mksurfdata_map needs to check map files for consistency</short_desc>
          <delta_ts>2016-05-05 14:26:44 -0600</delta_ts>
          <reporter_accessible>1</reporter_accessible>
          <cclist_accessible>1</cclist_accessible>
          <classification_id>1</classification_id>
          <classification>Unclassified</classification>
          <product>CCSM/CESM CLM</product>
          <component>CLM 5.0</component>
          <version>unspecified</version>
          <rep_platform>All</rep_platform>
          <op_sys>All</op_sys>
          <bug_status>ASSIGNED</bug_status>
          <resolution></resolution>
          
          
          <bug_file_loc></bug_file_loc>
          <status_whiteboard></status_whiteboard>
          <keywords></keywords>
          <priority>P3</priority>
          <bug_severity>normal</bug_severity>
          <target_milestone>CLM5</target_milestone>
          
          <blocked>1468</blocked>
          <everconfirmed>1</everconfirmed>
          <reporter name="Erik Kluzek">erik</reporter>
          <assigned_to name="Erik Kluzek">erik</assigned_to>
          <cc>bugzillaMuszala</cc>
    
    <cc>mvertens</cc>
    
    <cc>rfisher</cc>
    
    <cc>sacks</cc>
          
          <cf_fixedinversion></cf_fixedinversion>

      

      

      

          <comment_sort_order>oldest_to_newest</comment_sort_order>  
          <long_desc isprivate="0" >
    <commentid>4198</commentid>
    <comment_count>0</comment_count>
    <who name="Erik Kluzek">erik</who>
    <bug_when>2011-08-22 21:31:26 -0600</bug_when>
    <thetext>In running the test suite on the non2dgrid branch, I found a fine-mesh test that failed because it was using a RTM mapping file at the atm grid rather than the lnd grid as it should have. It dies with a subscript overflow.


021 smEH1 TSM.sh 4p_vodsrsc_dh clm_std^nl_urb 20021231:3600 1.9x2.5^0.9x1.25 gx1v6 48 arb_ic ....FAIL! rc= 10


 3:    Fortran language trap: subscript out of bounds
   3:
   3:  Traceback:
   5:    Fortran language trap: subscript out of bounds
   5:
   5:  Traceback:
   3:    Offset 0x000020b8 in procedure __m_attrvectcomms_NMOD_gm_scatter_, near line 1050 in file /fis/cgd/home/erik/cl
m_non2dgrid/models/utils/mct/mct/m_AttrVectComms.F90
   5:    Offset 0x000020b8 in procedure __m_attrvectcomms_NMOD_gm_scatter_, near line 1050 in file /fis/cgd/home/erik/cl
m_non2dgrid/models/utils/mct/mct/m_AttrVectComms.F90
   3:    Offset 0x00003d7c in procedure __m_attrvectcomms_NMOD_gsm_scatter_, near line 1452 in file /fis/cgd/home/erik/c
lm_non2dgrid/models/utils/mct/mct/m_AttrVectComms.F90
   5:    Offset 0x00003d7c in procedure __m_attrvectcomms_NMOD_gsm_scatter_, near line 1452 in file /fis/cgd/home/erik/c
lm_non2dgrid/models/utils/mct/mct/m_AttrVectComms.F90
   3:    Offset 0x00000438 in procedure __m_sparsematrixcomms_NMOD_scatterbyrowgsmap_, near line 338 in file /fis/cgd/ho
me/erik/clm_non2dgrid/models/utils/mct/mct/m_SparseMatrixComms.F90
   5:    Offset 0x00000438 in procedure __m_sparsematrixcomms_NMOD_scatterbyrowgsmap_, near line 338 in file /fis/cgd/ho
me/erik/clm_non2dgrid/models/utils/mct/mct/m_SparseMatrixComms.F90
   3:    Offset 0x00000be4 in procedure __m_sparsematrixplus_NMOD_initfromroot_, near line 344 in file /fis/cgd/home/eri
k/clm_non2dgrid/models/utils/mct/mct/m_SparseMatrixPlus.F90
   5:    Offset 0x00000be4 in procedure __m_sparsematrixplus_NMOD_initfromroot_, near line 344 in file /fis/cgd/home/eri
k/clm_non2dgrid/models/utils/mct/mct/m_SparseMatrixPlus.F90
   3:    Offset 0x00013b80 in procedure __rtmmod_NMOD_rtmini, near line 968 in file /fis/cgd/home/erik/clm_non2dgrid/mod
els/lnd/clm/src/riverroute/RtmMod.F90
   5:    Offset 0x00013b80 in procedure __rtmmod_NMOD_rtmini, near line 968 in file /fis/cgd/home/erik/clm_non2dgrid/mod


The bad thing is that the Open-MP only case actually runs, without an obvious error...

001 smEH3 TSM.sh 4p_vodsrsc_do clm_std^nl_urb 20021231:3600 1.9x2.5^0.9x1.25 gx1v6 48 arb_ic ....PASS


So the point is that we need to have some consistency checking for the mapping files in CLM. The same kind of consistency checking should be put into mksurfdata_map as well.</thetext>
  </long_desc><long_desc isprivate="0" >
    <commentid>4199</commentid>
    <comment_count>1</comment_count>
    <who name="Erik Kluzek">erik</who>
    <bug_when>2011-08-23 10:48:50 -0600</bug_when>
    <thetext>OK so running with the proper lnd_res file works...

001 smEH1 TSM.sh 4p_vodsrsc_dh clm_std^nl_urb 20021231:3600 1.9x2.5^0.9x1.25 gx1v6 48 arb_ic ....PASS</thetext>
  </long_desc>
      
      

    </bug>
    <bug>
          <bug_id>1401</bug_id>
          
          <creation_ts>2011-08-24 14:02:01 -0600</creation_ts>
          <short_desc>[CLM-only] Restart files do NOT have _FillValue/missing_value attributes on fields</short_desc>
          <delta_ts>2016-05-05 14:28:22 -0600</delta_ts>
          <reporter_accessible>1</reporter_accessible>
          <cclist_accessible>1</cclist_accessible>
          <classification_id>1</classification_id>
          <classification>Unclassified</classification>
          <product>CCSM/CESM CLM</product>
          <component>CLM 5.0</component>
          <version>unspecified</version>
          <rep_platform>All</rep_platform>
          <op_sys>All</op_sys>
          <bug_status>ASSIGNED</bug_status>
          <resolution></resolution>
          
          
          <bug_file_loc></bug_file_loc>
          <status_whiteboard></status_whiteboard>
          <keywords></keywords>
          <priority>P4</priority>
          <bug_severity>normal</bug_severity>
          <target_milestone>Future</target_milestone>
          
          
          <everconfirmed>1</everconfirmed>
          <reporter name="Erik Kluzek">erik</reporter>
          <assigned_to name="Erik Kluzek">erik</assigned_to>
          <cc>dlawren</cc>
    
    <cc>oleson</cc>
    
    <cc>rfisher</cc>
    
    <cc>sacks</cc>
    
    <cc>thoar</cc>
          
          <cf_fixedinversion></cf_fixedinversion>

      

      

      

          <comment_sort_order>oldest_to_newest</comment_sort_order>  
          <long_desc isprivate="0" >
    <commentid>4202</commentid>
    <comment_count>0</comment_count>
    <who name="Erik Kluzek">erik</who>
    <bug_when>2011-08-24 14:02:01 -0600</bug_when>
    <thetext>Tim Hoar noticed that the restart files don&apos;t have _FillValue/missing_value attributes on fields as they should. The history files do, but restart files do NOT. Also we noticed that T_SOISNO has some values set to 0.0 while others are set to 1.e+36. Both of which are really missing values, but the code shouldn&apos;t set them to two different values.</thetext>
  </long_desc><long_desc isprivate="0" >
    <commentid>4203</commentid>
    <comment_count>1</comment_count>
    <who name="Erik Kluzek">erik</who>
    <bug_when>2011-08-24 14:12:36 -0600</bug_when>
    <thetext>mkarbinit sets t_soisno to spval and then defines the non-snow layers to something for everything besides lake.

Hydrology2Mod then has the following...

    ! Set empty snow layers to zero

    do j = -nlevsno+1,0
       do fc = 1, num_snowc
          c = filter_snowc(fc)
          if (j &lt;= snl(c) .and. snl(c) &gt; -nlevsno) then
             h2osoi_ice(c,j) = 0._r8
             h2osoi_liq(c,j) = 0._r8
             t_soisno(c,j) = 0._r8
             dz(c,j) = 0._r8
             z(c,j) = 0._r8
             zi(c,j-1) = 0._r8
          end if
       end do
    end do

But, for t_soisno(c,j) it should set it to spval rather than zero.</thetext>
  </long_desc><long_desc isprivate="0" >
    <commentid>4204</commentid>
    <comment_count>2</comment_count>
    <who name="Tim Hoar">thoar</who>
    <bug_when>2011-08-24 14:28:23 -0600</bug_when>
    <thetext>There may be more to it ...  I&apos;m looking at values for H2OSOI_LIQ and sometimes
the top 5 layers are zero, sometimes spval ... H2OSOI_ICE has the same behavior:

   0,   // H2OSOI_LIQ(1,1602)
    0,   // H2OSOI_LIQ(2,1602)
    0,   // H2OSOI_LIQ(3,1602)
    0,   // H2OSOI_LIQ(4,1602)
    0,   // H2OSOI_LIQ(5,1602)
    1,   // H2OSOI_LIQ(6,1602)
    0,   // H2OSOI_LIQ(7,1602)
    0,   // H2OSOI_LIQ(8,1602)
    0,   // H2OSOI_LIQ(9,1602)
    0,   // H2OSOI_LIQ(10,1602)
    0,   // H2OSOI_LIQ(11,1602)
    0,   // H2OSOI_LIQ(12,1602)
    0,   // H2OSOI_LIQ(13,1602)
    0,   // H2OSOI_LIQ(14,1602)
    0,   // H2OSOI_LIQ(15,1602)
    0,   // H2OSOI_LIQ(16,1602)
    0,   // H2OSOI_LIQ(17,1602)
    0,   // H2OSOI_LIQ(18,1602)
    0,   // H2OSOI_LIQ(19,1602)
    0,  // H2OSOI_LIQ(20,1602)
    1e+36,   // H2OSOI_LIQ(1,1603)
    1e+36,   // H2OSOI_LIQ(2,1603)
    1e+36,   // H2OSOI_LIQ(3,1603)
    1e+36,   // H2OSOI_LIQ(4,1603)
    1e+36,   // H2OSOI_LIQ(5,1603)
    0,   // H2OSOI_LIQ(6,1603)
    0,   // H2OSOI_LIQ(7,1603)
    0,   // H2OSOI_LIQ(8,1603)
    0,   // H2OSOI_LIQ(9,1603)
    0,   // H2OSOI_LIQ(10,1603)
    0,   // H2OSOI_LIQ(11,1603)
    0,   // H2OSOI_LIQ(12,1603)
    0,   // H2OSOI_LIQ(13,1603)
    0,   // H2OSOI_LIQ(14,1603)
    0,   // H2OSOI_LIQ(15,1603)
    0,   // H2OSOI_LIQ(16,1603)
    0,   // H2OSOI_LIQ(17,1603)
    0,   // H2OSOI_LIQ(18,1603)
    0,   // H2OSOI_LIQ(19,1603)
    0,  // H2OSOI_LIQ(20,1603)
    1e+36,   // H2OSOI_LIQ(1,1604)
    1e+36,   // H2OSOI_LIQ(2,1604)
    1e+36,   // H2OSOI_LIQ(3,1604)
    1e+36,   // H2OSOI_LIQ(4,1604)
    1e+36,   // H2OSOI_LIQ(5,1604)</thetext>
  </long_desc><long_desc isprivate="0" >
    <commentid>4205</commentid>
    <comment_count>3</comment_count>
    <who name="Erik Kluzek">erik</who>
    <bug_when>2011-08-24 14:47:41 -0600</bug_when>
    <thetext>(In reply to comment #2)
&gt; There may be more to it ...  I&apos;m looking at values for H2OSOI_LIQ and sometimes
&gt; the top 5 layers are zero, sometimes spval ... H2OSOI_ICE has the same
&gt; behavior:
&gt; 

Actually, that&apos;s a good point. T_SOISNO physically can&apos;t be zero, so it should be set to spval, but the others can be zero so I thought they should be left alone. But, really the zero is being used to mark them as missing values NOT to a literal value of zero. The other values are also initialized to spval, and then set to something in mkarbinit. So here (in Hydrology2) they should all be set to spval and _FillValue should equal spval on the file.

I also found several places where 1.e36 was hardcoded in rather than using spval...

biogeochem/DryDepVelocity.F90:          crs = 1.e36_r8
biogeochem/DryDepVelocity.F90:                   rgsx(ispec) = 1.e36_r8
biogeochem/DryDepVelocity.F90:                rclx(ispec)=1.e36_r8
biogeochem/DryDepVelocity.F90:                rsmx(ispec)=1.e36_r8
biogeochem/DryDepVelocity.F90:                rlux(ispec)=1.e36_r8
main/clm_varcon.F90:  real(r8), public, parameter ::  spval = 1.e36_r8  ! special value for real data
main/domainMod.F90:    domain%frac     = -1.0e36
main/domainMod.F90:    domain%ntop     = -1.0e36
main/downscaleMod.F90:       !??? MV: Note that frac_l is not set yet - so it is -1.0e36 - so first if will never be
main/mkarbinitMod.F90:     dz(c,-nlevsno+1: 0) = 1.e36_r8
main/mkarbinitMod.F90:     z (c,-nlevsno+1: 0) = 1.e36_r8
main/mkarbinitMod.F90:     zi(c,-nlevsno  :-1) = 1.e36_r8</thetext>
  </long_desc><long_desc isprivate="0" >
    <commentid>4206</commentid>
    <comment_count>4</comment_count>
    <who name="Erik Kluzek">erik</who>
    <bug_when>2011-08-25 13:34:38 -0600</bug_when>
    <thetext>Tim also notes some values where snow isn&apos;t where T_SOISNO is set to a negative value. Presumably, this is because it&apos;s being set to zero, and then there is an operation over it that should be checking SNLSNO that isn&apos;t...

Keith is going to try to find out where this is happening.

&gt; On Aug 25, 2011, at 11:06 AM, Keith Oleson wrote:
&gt;
&gt;&gt; I checked SNLSNO in this file and it is zero for columns 6999-7004, so
&gt;&gt; these values aren&apos;t being used. But I&apos;m not sure why they would be
&gt;&gt; anything other than zero or spval.
&gt;&gt;
&gt;&gt; Keith
&gt;&gt;
&gt;&gt; On 8/25/2011 10:41 AM, Erik Kluzek wrote:
&gt;&gt;&gt; Keith, Dave and Sam
&gt;&gt;&gt;
&gt;&gt;&gt; Tim is finding negative values for T_SOISNO on his 1-degree restart file.
&gt;&gt;&gt; It doesn&apos;t look like it&apos;s something masked out. I&apos;m not sure what to
&gt;&gt;&gt; think
&gt;&gt;&gt; about this as obviously this is unphysical. It also seems to be for a
&gt;&gt;&gt; vegetated land-unit so it has no excuse. I&apos;m guessing this might be
&gt;&gt;&gt; something going for snow that was previously masked out and maybe it
&gt;&gt;&gt; corrects the next time step?
&gt;&gt;&gt;
&gt;&gt;&gt;
&gt;&gt;&gt; ---------------------------- Original Message
&gt;&gt;&gt; ----------------------------
&gt;&gt;&gt; Subject: Re: CLM t_soisno values in restart files ... not possible
&gt;&gt;&gt; From: &quot;Tim Hoar&quot;&lt;thoar@ucar.edu &lt;mailto:thoar@ucar.edu&gt;&gt;
&gt;&gt;&gt; Date: Wed, August 24, 2011 4:42 pm
&gt;&gt;&gt; To: &quot;Erik Kluzek&quot;&lt;erik@ucar.edu &lt;mailto:erik@ucar.edu&gt;&gt;
&gt;&gt;&gt; --------------------------------------------------------------------------
&gt;&gt;&gt;
&gt;&gt;&gt; /glade/scratch/yfzhang/clmcases/enstest_0818/run/enstest_0818.clm2_0006.r.2000-01-06-00000.nc
&gt;&gt;&gt;
&gt;&gt;&gt; 1, // cols1d_ityplun(6999)
&gt;&gt;&gt; 1, // cols1d_ityplun(7000)
&gt;&gt;&gt; 1, // cols1d_ityplun(7001)
&gt;&gt;&gt; 1, // cols1d_ityplun(7002)
&gt;&gt;&gt; 1, // cols1d_ityplun(7003)
&gt;&gt;&gt; 1, // cols1d_ityplun(7004)
&gt;&gt;&gt;
&gt;&gt;&gt; I believe this is a 1x1 degree case:
&gt;&gt;&gt;
&gt;&gt;&gt; :Initial_conditions_dataset =
&gt;&gt;&gt; &quot;clm_I1850.clm2.r.1853-01-01-00000.nc&quot; ;
&gt;&gt;&gt;
&gt;&gt;&gt; Fei is starting with &quot;1850&quot;-like conditions and we were going to run a
&gt;&gt;&gt; climatological case.
&gt;&gt;&gt;
&gt;&gt;&gt; Thanks - sorry to be a bother -- Tim
&gt;&gt;&gt;
&gt;&gt;&gt;
&gt;&gt;&gt; On Aug 24, 2011, at 4:00 PM, Erik Kluzek wrote:
&gt;&gt;&gt;
&gt;&gt;&gt;&gt; Tim
&gt;&gt;&gt;&gt;
&gt;&gt;&gt;&gt; Can you check what land unit type columns 7000 and 7001 are? Also what
&gt;&gt;&gt;&gt; resolution is this for?
&gt;&gt;&gt;&gt;
&gt;&gt;&gt;&gt;
&gt;&gt;&gt;&gt; On Wed, August 24, 2011 3:45 pm, Tim Hoar wrote:
&gt;&gt;&gt;&gt;&gt;
&gt;&gt;&gt;&gt;&gt; -0.0218330867655131, // T_SOISNO(3,7000)
&gt;&gt;&gt;&gt;&gt; -0.0220687418285371, // T_SOISNO(4,7000)
&gt;&gt;&gt;&gt;&gt; -0.0457113421978009, // T_SOISNO(5,7000)
&gt;&gt;&gt;&gt;&gt; 264.179362603644, // T_SOISNO(6,7000)
&gt;&gt;&gt;&gt;&gt; 264.909522035041, // T_SOISNO(7,7000)
&gt;&gt;&gt;&gt;&gt; 265.970675455338, // T_SOISNO(8,7000)
&gt;&gt;&gt;&gt;&gt; 267.367414331807, // T_SOISNO(9,7000)
&gt;&gt;&gt;&gt;&gt; 269.072014205821, // T_SOISNO(10,7000)
&gt;&gt;&gt;&gt;&gt; 270.748952573642, // T_SOISNO(11,7000)
&gt;&gt;&gt;&gt;&gt; 272.27801859387, // T_SOISNO(12,7000)
&gt;&gt;&gt;&gt;&gt; 273.521353894311, // T_SOISNO(13,7000)
&gt;&gt;&gt;&gt;&gt; 274.905387882293, // T_SOISNO(14,7000)
&gt;&gt;&gt;&gt;&gt; 276.33954894197, // T_SOISNO(15,7000)
&gt;&gt;&gt;&gt;&gt; 277.15213189024, // T_SOISNO(16,7000)
&gt;&gt;&gt;&gt;&gt; 277.457490832681, // T_SOISNO(17,7000)
&gt;&gt;&gt;&gt;&gt; 276.999992954815, // T_SOISNO(18,7000)
&gt;&gt;&gt;&gt;&gt; 276.661468195319, // T_SOISNO(19,7000)
&gt;&gt;&gt;&gt;&gt; 276.65198613183, // T_SOISNO(20,7000)
&gt;&gt;&gt;&gt;&gt; 0, // T_SOISNO(1,7001)
&gt;&gt;&gt;&gt;&gt; 0, // T_SOISNO(2,7001)
&gt;&gt;&gt;&gt;&gt; 0, // T_SOISNO(3,7001)
&gt;&gt;&gt;&gt;&gt; -0.0694586765806962, // T_SOISNO(4,7001)
&gt;&gt;&gt;&gt;&gt; -0.123480472298186, // T_SOISNO(5,7001)
&gt;&gt;&gt;&gt;&gt;
&gt;&gt;&gt;&gt;&gt; The units are degrees kelvin ... negative values are not good.
&gt;&gt;&gt;&gt;&gt;</thetext>
  </long_desc><long_desc isprivate="0" >
    <commentid>4208</commentid>
    <comment_count>5</comment_count>
    <who name="Keith Oleson">oleson</who>
    <bug_when>2011-08-25 16:44:35 -0600</bug_when>
    <thetext>I was able to replicate YongFei&apos;s case bfb except that I did not get negative values for T_SOISNO in the restart files.  YongFei now reports that her negative values are probably due to the assimilation procedure.

Regardless, I think that the variables mentioned by Erik below could probably be set to spval instead of zero.  I did a quick test where I set them to spval in Hydrology2 and got bfb answers.  This is very limited testing of course.  Zeros can still appear in the restart file however if the initial file used for the simulation has zeros and the snow layers don&apos;t change state during the simulation.</thetext>
  </long_desc><long_desc isprivate="0" >
    <commentid>4260</commentid>
    <comment_count>6</comment_count>
    <who name="Erik Kluzek">erik</who>
    <bug_when>2011-09-21 12:12:20 -0600</bug_when>
    <thetext>I tried setting fill_value=nan for several fields on the restart file that are initialized to nan. This worked except it blew up in DEBUG mode. So I took it back out. So either fields that will be on the restart file need to be initialized to spval, or I need to convert them from nan to spval when writing and from spval to nan when reading. Consistently initializing fields to nan and only changing them to spval for I/O would be a good thing.</thetext>
  </long_desc><long_desc isprivate="0" >
    <commentid>4269</commentid>
    <comment_count>7</comment_count>
    <who name="Erik Kluzek">erik</who>
    <bug_when>2011-09-27 12:04:32 -0600</bug_when>
    <thetext>Fields that Tim would like us to especially pay attention to...

Erik, Dave;

As soon as these variables have a _FillValue (?and a missing_value?) attribute, I&apos;m happy to check the range of values to see if there are (perhaps) unanticipated uses of other fill values. I&apos;ll be working on Matlab-based diagnostic scripts, so I will be doing this in parallel to Erik&apos;s effort. 

To all on the &apos;cc&apos; list;

the CLM restart files are easier to ingest into DART if they have a _FillValue specified. If you think you want particular variables to be part of the DART state vector - speak up now. [Andy, Bill - a&apos; priori knowledge of the valid_range might be enough. I don&apos;t think we&apos;re going to get CLM to add  _FillValue and (perhaps) valid_range attributes to the 5kajillion carbon species.]

Here is my list of 11 CLM variables that could use netcdf attributes of &apos;_FillValue&apos;.
Yongfei/Bill/Andy/Ave -- please voice your opinions/add to the high-priority list below:

        double frac_sno(column) ;
                frac_sno:long_name = &quot;fraction of ground covered by snow (0 to 1)&quot; ;
                frac_sno:units =  ;
        double DZSNO(column, levsno) ;
                DZSNO:long_name = &quot;snow layer thickness&quot; ;
                DZSNO:units = &quot;m&quot; ;
        double ZSNO(column, levsno) ;
                ZSNO:long_name = &quot;snow layer depth&quot; ;
                ZSNO:units = &quot;m&quot; ;
        double ZISNO(column, levsno) ;
                ZISNO:long_name = &quot;snow interface depth&quot; ;
                ZISNO:units = &quot;m&quot; ;

        double T_SOISNO(column, levtot) ;
                T_SOISNO:long_name = &quot;soil-snow temperature&quot; ;
                T_SOISNO:units = &quot;K&quot; ;
        double T_LAKE(column, levlak) ;
                T_LAKE:long_name = &quot;lake temperature&quot; ;
                T_LAKE:units = &quot;K&quot; ;

        double H2OSNO(column) ;
                H2OSNO:long_name = &quot;snow water&quot; ;
                H2OSNO:units = &quot;kg/m2&quot; ;
        double H2OSOI_LIQ(column, levtot) ;
                H2OSOI_LIQ:long_name = &quot;liquid water&quot; ;
                H2OSOI_LIQ:units = &quot;kg/m2&quot; ;
        double H2OSOI_ICE(column, levtot) ;
                H2OSOI_ICE:long_name = &quot;ice lens&quot; ;
                H2OSOI_ICE:units = &quot;kg/m2&quot; ;
        double T_GRND(column) ;
                T_GRND:long_name = &quot;ground temperature&quot; ;
                T_GRND:units = &quot;K&quot; ;

        double T_REF2M(pft) ;
                T_REF2M:long_name = &quot;2m height surface air temperature&quot; ;
                T_REF2M:units = &quot;K&quot; ;



Tim Hoar, Associate Scientist
National Center for Atmospheric Research
thoar@ucar.edu
303 497 1708</thetext>
  </long_desc><long_desc isprivate="0" >
    <commentid>4270</commentid>
    <comment_count>8</comment_count>
    <who name="Erik Kluzek">erik</who>
    <bug_when>2011-09-27 12:05:28 -0600</bug_when>
    <thetext>This was marked as fixed and shouldn&apos;t have been...</thetext>
  </long_desc><long_desc isprivate="0" >
    <commentid>4271</commentid>
    <comment_count>9</comment_count>
    <who name="Erik Kluzek">erik</who>
    <bug_when>2011-09-27 14:59:16 -0600</bug_when>
    <thetext>Of the fields in the list only: T_SOISNO, H2OSOI_LIQ/ICE are set to spval everything else is set to nan.</thetext>
  </long_desc><long_desc isprivate="0" >
    <commentid>4273</commentid>
    <comment_count>10</comment_count>
    <who name="Tim Hoar">thoar</who>
    <bug_when>2011-09-28 10:55:00 -0600</bug_when>
    <thetext>(In reply to comment #9)
&gt; Of the fields in the list only: T_SOISNO, H2OSOI_LIQ/ICE are set to spval
&gt; everything else is set to nan.

OK then ... I need to be able to replace nan with my DART missing code, ... do what I need to do ...
and then replace the DART missing code with nan to keep things coordinated. How do I read/replace nan  values?</thetext>
  </long_desc><long_desc isprivate="0" >
    <commentid>4379</commentid>
    <comment_count>11</comment_count>
    <who name="Erik Kluzek">erik</who>
    <bug_when>2012-01-23 10:01:40 -0700</bug_when>
    <thetext>I&apos;m starting to work on this in clm4_0_38. I checked in code to handle it and it works on bluefire, but fails with intel. So I&apos;m going to back it out until I can get a solution that works on all platforms.

I am leaving in an option to ncdio_pio 

cnvrtnan2fill

that will convert any spval read to nan, and convert any nan on write to spval so that FillValue functions correctly.

Here&apos;s the code changes to get back to the previous version. Without the changes below, the convrtnan2fill option is never used.

[yong:lnd/clm/src] erik% svn diff
Index: main/accumulMod.F90
===================================================================
--- main/accumulMod.F90	(revision 33981)
+++ main/accumulMod.F90	(working copy)
@@ -27,7 +27,6 @@
   use abortutils  , only: endrun
   use clm_varctl  , only: iulog
   use nanMod      , only: bigint
-  use shr_infnan_mod, only: shr_infnan_isnan
 !
 ! !PUBLIC TYPES:
   implicit none
@@ -425,7 +424,7 @@
 ! !IROUTINE: update_accum_field_sl
 !
 ! !INTERFACE:
-  subroutine update_accum_field_sl (name, field, nstep, filternan)
+  subroutine update_accum_field_sl (name, field, nstep)
 !
 ! !DESCRIPTION:
 ! Accumulate single level field over specified time interval.
@@ -436,7 +435,6 @@
     character(len=*), intent(in) :: name     !field name
     real(r8), pointer, dimension(:) :: field !field values for current time step
     integer , intent(in) :: nstep            !time step index
-    logical , intent(in), optional :: filternan ! filter out any NaN&apos;s in the input field
 !
 ! !REVISION HISTORY:
 ! Created by Sam Levis
@@ -449,8 +447,6 @@
     integer :: i,k,nf              !indices
     integer :: accper              !temporary accumulation period
     integer :: beg,end             !subgrid beginning,ending indices
-    integer :: filter(sizeof(field)) !filter of 
-    integer :: nfilter             ! number of points to filter
 !------------------------------------------------------------------------
 
     ! find field index. return if &quot;name&quot; is not on list
@@ -475,23 +471,6 @@
        call endrun
     endif
 
-    ! Get filter
-    if ( filternan ) then
-       nfilter = 0
-       do i = beg, end
-          if ( .not. shr_infnan_isnan( field(i) ) )then
-             nfilter         = nfilter + 1
-             filter(nfilter) = i
-          end if
-       end do
-    else
-       nfilter = 0
-       do i = beg, end
-         nfilter         = nfilter + 1
-         filter(nfilter) = i
-       end do
-    end if
-
     ! accumulate field
 
     if (accum(nf)%acctype /= &apos;timeavg&apos; .AND. &amp;
@@ -515,11 +494,11 @@
        !normalize at end of accumulation period
 
        if ((mod(nstep,accum(nf)%period) == 1) .and. (nstep /= 0)) then
-          accum(nf)%val(filter(:nfilter),1) = 0._r8
+          accum(nf)%val(beg:end,1) = 0._r8
        end if
-       accum(nf)%val(filter(:nfilter),1) =  accum(nf)%val(filter(:nfilter),1) + field(filter(:nfilter))
+       accum(nf)%val(beg:end,1) =  accum(nf)%val(beg:end,1) + field(beg:end)
        if (mod(nstep,accum(nf)%period) == 0) then
-          accum(nf)%val(filter(:nfilter),1) = accum(nf)%val(filter(:nfilter),1) / accum(nf)%period
+          accum(nf)%val(beg:end,1) = accum(nf)%val(beg:end,1) / accum(nf)%period
        endif
 
     else if (accum(nf)%acctype == &apos;runmean&apos;) then
@@ -527,19 +506,18 @@
        !running mean - reset accumulation period until greater than nstep
 
        accper = min (nstep,accum(nf)%period)
-       accum(nf)%val(filter(:nfilter),1) = ((accper-1)*accum(nf)%val(filter(:nfilter),1) + field(filter(:nfilter))) / accper
+       accum(nf)%val(beg:end,1) = ((accper-1)*accum(nf)%val(beg:end,1) + field(beg:end)) / accper
 
     else if (accum(nf)%acctype == &apos;runaccum&apos;) then
 
        !running accumulation field reset at trigger -99999
 
-       do i = 1, nfilter
-          k = filter(i)
+       do k = beg,end
           if (nint(field(k)) == -99999) then
              accum(nf)%val(k,1) = 0._r8
           end if
        end do
-       accum(nf)%val(filter(:nfilter),1) = min(max(accum(nf)%val(filter(:nfilter),1) + field(filter(:nfilter)), 0._r8), 99999._r8)
+       accum(nf)%val(beg:end,1) = min(max(accum(nf)%val(beg:end,1) + field(beg:end), 0._r8), 99999._r8)
 
     end if
 
Index: main/accFldsMod.F90
===================================================================
--- main/accFldsMod.F90	(revision 33981)
+++ main/accFldsMod.F90	(working copy)
@@ -578,9 +578,9 @@
     do p = begp,endp
        rbufslp(p) = fsun(p)
     end do
-    call update_accum_field  (&apos;FSUN24&apos;, rbufslp, nstep,  filternan=.true.)
-    call extract_accum_field (&apos;FSUN24&apos;, fsun24, nstep )
-    call update_accum_field  (&apos;FSUN240&apos;, rbufslp, nstep, filternan=.true.)
+    call update_accum_field  (&apos;FSUN24&apos;, rbufslp, nstep)
+    call extract_accum_field (&apos;FSUN24&apos;, fsun24, nstep)
+    call update_accum_field  (&apos;FSUN240&apos;, rbufslp, nstep)
     call extract_accum_field (&apos;FSUN240&apos;, fsun240, nstep)
 
     ! Accumulate and extract elai_p (heald 04/06)
Index: biogeophys/BiogeophysRestMod.F90
===================================================================
--- biogeophys/BiogeophysRestMod.F90	(revision 33981)
+++ biogeophys/BiogeophysRestMod.F90	(working copy)
@@ -59,6 +59,7 @@
     use initSurfAlbMod  , only : do_initsurfalb
     use clm_time_manager, only : is_first_step
     use SNICARMod       , only : snw_rds_min
+    use shr_infnan_mod  , only : shr_infnan_isnan
     use mkarbinitMod    , only : perturbIC
     use clm_time_manager, only : is_restart
 !
@@ -345,12 +346,12 @@
 
     if (flag == &apos;define&apos;) then
        call ncd_defvar(ncid=ncid, varname=&apos;frac_sno&apos;, xtype=ncd_double,  &amp;
-            dim1name=&apos;column&apos;, fill_value=spval, &amp;
+            dim1name=&apos;column&apos;,&amp;
             long_name=&apos;fraction of ground covered by snow (0 to 1)&apos;,units=&apos;unitless&apos;)
     else if (flag == &apos;read&apos; .or. flag == &apos;write&apos;) then
        call ncd_io(varname=&apos;frac_sno&apos;, data=cptr%cps%frac_sno, &amp;
             dim1name=namec, &amp;
-            ncid=ncid, flag=flag, readvar=readvar, cnvrtnan2fill=.true.) 
+            ncid=ncid, flag=flag, readvar=readvar) 
        if (flag == &apos;read&apos; .and. .not. readvar) then
           if (is_restart()) call endrun()
        end if
@@ -361,14 +362,14 @@
     if (flag == &apos;define&apos;) then
        call ncd_defvar(ncid=ncid, varname=&apos;DZSNO&apos;, xtype=ncd_double,  &amp;
             dim1name=&apos;column&apos;, dim2name=&apos;levsno&apos;, switchdim=.true., &amp;
-            long_name=&apos;snow layer thickness&apos;, units=&apos;m&apos;, fill_value=spval)
+            long_name=&apos;snow layer thickness&apos;, units=&apos;m&apos;)
     else if (flag == &apos;read&apos; .or. flag == &apos;write&apos;) then
        allocate(temp2d(begc:endc,-nlevsno+1:0))
        if (flag == &apos;write&apos;) then 
           temp2d(begc:endc,-nlevsno+1:0) = cptr%cps%dz(begc:endc,-nlevsno+1:0)
        end if
        call ncd_io(varname=&apos;DZSNO&apos;, data=temp2d, &amp;
-            dim1name=namec, switchdim=.true., cnvrtnan2fill=.true., &amp;
+            dim1name=namec, switchdim=.true., &amp;
             lowerb2=-nlevsno+1, upperb2=0, ncid=ncid, flag=flag, readvar=readvar)
        if (flag == &apos;read&apos; .and. .not. readvar) then
           if (is_restart()) call endrun()
@@ -384,14 +385,14 @@
     if (flag == &apos;define&apos;) then
        call ncd_defvar(ncid=ncid, varname=&apos;ZSNO&apos;, xtype=ncd_double,  &amp;
             dim1name=&apos;column&apos;, dim2name=&apos;levsno&apos;, switchdim=.true., &amp;
-            long_name=&apos;snow layer depth&apos;, units=&apos;m&apos;, fill_value=spval)
+            long_name=&apos;snow layer depth&apos;, units=&apos;m&apos;)
     else if (flag == &apos;read&apos; .or. flag == &apos;write&apos;) then
        allocate(temp2d(begc:endc,-nlevsno+1:0))
        if (flag == &apos;write&apos;) then 
           temp2d(begc:endc,-nlevsno+1:0) = cptr%cps%z(begc:endc,-nlevsno+1:0)
        end if
        call ncd_io(varname=&apos;ZSNO&apos;, data=temp2d, &amp;
-            dim1name=namec, switchdim=.true., cnvrtnan2fill=.true., &amp;
+            dim1name=namec, switchdim=.true., &amp;
             lowerb2=-nlevsno+1, upperb2=0, ncid=ncid, flag=flag, readvar=readvar)
        if (flag == &apos;read&apos; .and. .not. readvar) then
           if (is_restart()) call endrun()
@@ -407,14 +408,14 @@
     if (flag == &apos;define&apos;) then
        call ncd_defvar(ncid=ncid, varname=&apos;ZISNO&apos;, xtype=ncd_double,  &amp;
             dim1name=&apos;column&apos;, dim2name=&apos;levsno&apos;, switchdim=.true., &amp;
-            long_name=&apos;snow interface depth&apos;, units=&apos;m&apos;, fill_value=spval)
+            long_name=&apos;snow interface depth&apos;, units=&apos;m&apos;)
     else if (flag == &apos;read&apos; .or. flag == &apos;write&apos;) then
        allocate(temp2d(begc:endc,-nlevsno:-1))
        if (flag == &apos;write&apos;) then 
           temp2d(begc:endc,-nlevsno:-1) = cptr%cps%zi(begc:endc,-nlevsno:-1)
        end if
        call ncd_io(varname=&apos;ZISNO&apos;, data=temp2d, &amp;
-            dim1name=namec, switchdim=.true., cnvrtnan2fill=.true., &amp;
+            dim1name=namec, switchdim=.true., &amp;
             lowerb2=-nlevsno, upperb2=-1, ncid=ncid, flag=flag, readvar=readvar)
        if (flag == &apos;read&apos; .and. .not. readvar) then
           if (is_restart()) call endrun()
@@ -928,13 +929,13 @@
     if (flag == &apos;define&apos;) then
        call ncd_defvar(ncid=ncid, varname=&apos;H2OSOI_LIQ&apos;, xtype=ncd_double,  &amp;
             dim1name=&apos;column&apos;, dim2name=&apos;levtot&apos;, switchdim=.true., &amp;
-            long_name=&apos;liquid water&apos;, units=&apos;kg/m2&apos;, fill_value=spval)
+            long_name=&apos;liquid water&apos;, units=&apos;kg/m2&apos;)
     else if (flag == &apos;read&apos; .or. flag == &apos;write&apos;) then
        call ncd_io(varname=&apos;H2OSOI_LIQ&apos;, data=cptr%cws%h2osoi_liq, &amp;
-           dim1name=namec, switchdim=.true., ncid=ncid, flag=flag, readvar=readvar)
-      if (flag==&apos;read&apos; .and. .not. readvar) then
-         if (is_restart()) call endrun()
-      end if
+            dim1name=namec, switchdim=.true., ncid=ncid, flag=flag, readvar=readvar)
+       if (flag==&apos;read&apos; .and. .not. readvar) then
+          if (is_restart()) call endrun()
+       end if
     end if
 
     ! column water state variable - h2osoi_ice
@@ -942,8 +943,7 @@
     if (flag == &apos;define&apos;) then
        call ncd_defvar(ncid=ncid, varname=&apos;H2OSOI_ICE&apos;, xtype=ncd_double,   &amp;
             dim1name=&apos;column&apos;, dim2name=&apos;levtot&apos;, switchdim=.true., &amp;
-            long_name=&apos;ice lens&apos;, units=&apos;kg/m2&apos;, fill_value=spval)
-
+            long_name=&apos;ice lens&apos;, units=&apos;kg/m2&apos;)
     else if (flag == &apos;read&apos; .or. flag == &apos;write&apos;) then
        call ncd_io(varname=&apos;H2OSOI_ICE&apos;, data=cptr%cws%h2osoi_ice, &amp;
             dim1name=namec, switchdim=.true., ncid=ncid, flag=flag, readvar=readvar)
@@ -956,7 +956,7 @@
 
     if (flag == &apos;define&apos;) then
        call ncd_defvar(ncid=ncid, varname=&apos;T_GRND&apos;, xtype=ncd_double,  &amp;
-            dim1name=&apos;column&apos;, fill_value=spval, &amp;
+            dim1name=&apos;column&apos;, &amp;
             long_name=&apos;ground temperature&apos;, units=&apos;K&apos;)
     else if (flag == &apos;read&apos; .or. flag == &apos;write&apos;) then
        call ncd_io(varname=&apos;T_GRND&apos;, data=cptr%ces%t_grnd, &amp;
@@ -1242,7 +1242,7 @@
     if (flag == &apos;define&apos;) then
        call ncd_defvar(ncid=ncid, varname=&apos;T_SOISNO&apos;, xtype=ncd_double,   &amp;
             dim1name=&apos;column&apos;, dim2name=&apos;levtot&apos;, switchdim=.true., &amp;
-            long_name=&apos;soil-snow temperature&apos;, units=&apos;K&apos;, fill_value=spval)
+            long_name=&apos;soil-snow temperature&apos;, units=&apos;K&apos;)
     else if (flag == &apos;read&apos; .or. flag == &apos;write&apos;) then
        call ncd_io(varname=&apos;T_SOISNO&apos;, data=cptr%ces%t_soisno, &amp;
             dim1name=namec, switchdim=.true., ncid=ncid, flag=flag, readvar=readvar)
@@ -1256,7 +1256,7 @@
     if (flag == &apos;define&apos;) then
        call ncd_defvar(ncid=ncid, varname=&apos;T_LAKE&apos;, xtype=ncd_double,  &amp;
             dim1name=&apos;column&apos;, dim2name=&apos;levlak&apos;, switchdim=.true., &amp;
-            long_name=&apos;lake temperature&apos;, units=&apos;K&apos;, fill_value=spval)
+            long_name=&apos;lake temperature&apos;, units=&apos;K&apos;)
     else if (flag == &apos;read&apos; .or. flag == &apos;write&apos;) then
        call ncd_io(varname=&apos;T_LAKE&apos;, data=cptr%ces%t_lake, &amp;
             dim1name=namec, switchdim=.true., ncid=ncid, flag=flag, readvar=readvar)
@@ -1372,15 +1372,21 @@
 
     if (flag == &apos;define&apos;) then
        call ncd_defvar(ncid=ncid, varname=&apos;fsun&apos;, xtype=ncd_double,  &amp;
-            dim1name=&apos;pft&apos;, fill_value=spval, &amp;
+            dim1name=&apos;pft&apos;, &amp;
             long_name=&apos;sunlit fraction of canopy&apos;, units=&apos;&apos;)
     else if (flag == &apos;read&apos; .or. flag == &apos;write&apos;) then
        call ncd_io(varname=&apos;fsun&apos;, data=pptr%pps%fsun, &amp;
             dim1name=namep, &amp;
-            ncid=ncid, flag=flag, readvar=readvar, cnvrtnan2fill=.true. )
+            ncid=ncid, flag=flag, readvar=readvar)
        if (flag==&apos;read&apos; )then
           if ( .not. readvar) then
              if (is_restart()) call endrun()
+          else
+             do p = begp, endp
+                if ( shr_infnan_isnan( pptr%pps%fsun(p) ) )then
+                   pptr%pps%fsun(p) = spval
+                end if
+             end do
           end if
        end if
     end if
@@ -1505,7 +1511,7 @@
     varname = &apos;T_REF2M&apos;
     if (flag == &apos;define&apos;) then
        call ncd_defvar(ncid=ncid, varname=varname, xtype=ncd_double,  &amp;
-            dim1name=&apos;pft&apos;, fill_value=spval, &amp;
+            dim1name=&apos;pft&apos;, &amp;
             long_name=&apos;2m height surface air temperature&apos;, units=&apos;K&apos;)
     else if (flag == &apos;read&apos; .or. flag == &apos;write&apos;) then
        call ncd_io(varname=varname, data=pptr%pes%t_ref2m, &amp;</thetext>
  </long_desc><long_desc isprivate="0" >
    <commentid>4380</commentid>
    <comment_count>12</comment_count>
    <who name="Erik Kluzek">erik</who>
    <bug_when>2012-01-23 10:16:03 -0700</bug_when>
    <thetext>Here&apos;s the error on mirage...

  
(seq_mct_drv) : Model initialization complete 
  
forrtl: severe (174): SIGSEGV, segmentation fault occurred
Image              PC                Routine            Line        Source             
clm                00000000009B3391  accumulmod_mp_upd         479  accumulMod.F90
clm                00000000009A5F4A  accfldsmod_mp_upd         473  accFldsMod.F90
clm                000000000053FBE0  clm_driver_mp_clm         756  clm_driver.F90
clm                00000000004F1EDF  lnd_comp_mct_mp_l         698  lnd_comp_mct.F90
clm                0000000000422B00  ccsm_comp_mod_mp_        2521  ccsm_comp_mod.F90
clm                000000000042F078  MAIN__                     91  ccsm_driver.F90
clm                0000000000403A82  Unknown               Unknown  Unknown
libc.so.6          0000003DB781D994  Unknown               Unknown  Unknown
clm                00000000004039A9  Unknown               Unknown  Unknown


This is the update of TREVAV, in assessing accum(nf)%acctype...


    if (accum(nf)%acctype /= &apos;timeavg&apos; .AND. &amp;
        accum(nf)%acctype /= &apos;runmean&apos; .AND. &amp;
        accum(nf)%acctype /= &apos;runaccum&apos;) then
       write(iulog,*) &apos;UPDATE_ACCUM_FIELD_SL error: incorrect accumulation type&apos;
       write(iulog,*) &apos; was specified for field &apos;,name
       write(iulog,*)&apos; accumulation type specified is &apos;,accum(nf)%acctype
       write(iulog,*)&apos; only [timeavg, runmean, runaccum] are currently acceptable&apos;
       call endrun()
    end if</thetext>
  </long_desc>
      
      

    </bug>
    <bug>
          <bug_id>1451</bug_id>
          
          <creation_ts>2012-01-20 10:22:36 -0700</creation_ts>
          <short_desc>Handling of deg/rad and -180-180 vs. 0-360 in CLM input files..</short_desc>
          <delta_ts>2016-05-05 14:36:44 -0600</delta_ts>
          <reporter_accessible>1</reporter_accessible>
          <cclist_accessible>1</cclist_accessible>
          <classification_id>1</classification_id>
          <classification>Unclassified</classification>
          <product>CCSM/CESM CLM</product>
          <component>CLM 5.0</component>
          <version>unspecified</version>
          <rep_platform>All</rep_platform>
          <op_sys>All</op_sys>
          <bug_status>ASSIGNED</bug_status>
          <resolution></resolution>
          
          
          <bug_file_loc></bug_file_loc>
          <status_whiteboard></status_whiteboard>
          <keywords></keywords>
          <priority>P4</priority>
          <bug_severity>normal</bug_severity>
          <target_milestone>CLM5</target_milestone>
          
          
          <everconfirmed>1</everconfirmed>
          <reporter name="Erik Kluzek">erik</reporter>
          <assigned_to name="Erik Kluzek">erik</assigned_to>
          <cc>anthony.p.craig</cc>
    
    <cc>dlawren</cc>
    
    <cc>higginsm</cc>
    
    <cc>mvertens</cc>
    
    <cc>rfisher</cc>
    
    <cc>sacks</cc>
          
          <cf_fixedinversion></cf_fixedinversion>

      

      

      

          <comment_sort_order>oldest_to_newest</comment_sort_order>  
          <long_desc isprivate="0" >
    <commentid>4360</commentid>
    <comment_count>0</comment_count>
    <who name="Erik Kluzek">erik</who>
    <bug_when>2012-01-20 10:22:36 -0700</bug_when>
    <thetext>Matt found problems with handling of input files in CLM when in radians instead of degrees, and also for files on -180-180 versus 0-360. Previously I made sure all input files in CLM where 0-360 and in degree&apos;s as there were problems otherwise. There&apos;s also quite a few files here to think about. surface datasets, domain files, mapping files (both for model and for mksurdata_map), nitrogen-deposition and aerosol deposition files. I&apos;m not sure if the entire modelling system can handle it if different parts of these files are on different grids or not. I believe all raw datasets for mksurfdata_map are on -180-180. If we create domain files on 0-360 does the mapping still work right? And if we create surface datasets on -180-180, do the aerosol and Nitrogen deposition files still work right?

CLM can certainly check that the input units are degrees and die if not. Or really converting between the two isn&apos;t a real issue. I&apos;m NOT sure about the -180-180 conversion though...</thetext>
  </long_desc><long_desc isprivate="0" >
    <commentid>4595</commentid>
    <comment_count>1</comment_count>
    <who name="Erik Kluzek">erik</who>
    <bug_when>2012-07-09 15:10:19 -0600</bug_when>
    <thetext>In clm4_0_44, Tony added a change that fixes a specific manifestation of this problem for the grid domain that was needed for WRF files. It only handles one case, but does allow more of this than was allowed before (which was zero).</thetext>
  </long_desc>
      
      

    </bug>
    <bug>
          <bug_id>1456</bug_id>
          
          <creation_ts>2012-01-26 09:17:52 -0700</creation_ts>
          <short_desc>[CLM-only] Remove dependence on fatmgrid from clm tools...</short_desc>
          <delta_ts>2016-05-05 14:42:12 -0600</delta_ts>
          <reporter_accessible>1</reporter_accessible>
          <cclist_accessible>1</cclist_accessible>
          <classification_id>1</classification_id>
          <classification>Unclassified</classification>
          <product>CCSM/CESM CLM</product>
          <component>CLM 5.0</component>
          <version>unspecified</version>
          <rep_platform>All</rep_platform>
          <op_sys>All</op_sys>
          <bug_status>ASSIGNED</bug_status>
          <resolution></resolution>
          
          
          <bug_file_loc></bug_file_loc>
          <status_whiteboard></status_whiteboard>
          <keywords></keywords>
          <priority>P3</priority>
          <bug_severity>minor</bug_severity>
          <target_milestone>CLM5</target_milestone>
          
          
          <everconfirmed>1</everconfirmed>
          <reporter name="Erik Kluzek">erik</reporter>
          <assigned_to name="Erik Kluzek">erik</assigned_to>
          <cc>dlawren</cc>
    
    <cc>mvertens</cc>
    
    <cc>rfisher</cc>
    
    <cc>sacks</cc>
          
          <cf_fixedinversion></cf_fixedinversion>

      

      

      

          <comment_sort_order>oldest_to_newest</comment_sort_order>  
          <long_desc isprivate="0" >
    <commentid>4386</commentid>
    <comment_count>0</comment_count>
    <who name="Erik Kluzek">erik</who>
    <bug_when>2012-01-26 09:17:52 -0700</bug_when>
    <thetext>We are trying to remove fatmgrid. And it&apos;s removed from the model and it&apos;s OK. But, several CLM tools depend on it, so in the short run it&apos;s better to put it back in the XML database, and remove it from the tools later. so fatmgrid remains deprecated, but I&apos;m going to keep it around for a bit longer.

The following tools depend on it...

mkmapgrids
mksurfdata_map
aerd/ndep regrid.ncl
ndeplintInterp.ncl

mkmapgrids/mkmapgrids.csh:set query=&quot;$query -justvalue -csmdata $CSMDATA -var fatmgrid &quot;
mksurfdata_map/mksurfdata.pl:         $griddata = `$scrdir/../../bld/queryDefaultNamelist.pl $queryfilopts $usrnam -var fatmgrid`;
ncl_scripts/aerdepregrid.ncl:  gridinfile  = systemfunc( querynml+&quot; -res &quot;+resin+&quot; -var fatmgrid&quot; );
ncl_scripts/aerdepregrid.ncl:     gridfile    = systemfunc( querynml+&quot; -res &quot;+res  +&quot; -var fatmgrid&quot; );
ncl_scripts/ndeplintInterp.ncl:   filetype  = &quot;fatmgrid&quot;;
ncl_scripts/ndeplintInterp.ncl:   area = dble2flt( ncg-&gt;$vname$ ) * 1000000.0 ;  Area in m^2 from fatmgrid file which has it in kg^2
ncl_scripts/ndepregrid.ncl:  gridinfile  = systemfunc( querynml+&quot; -res &quot;+resin+&quot; -var fatmgrid&quot; );
ncl_scripts/ndepregrid.ncl:     gridfile    = systemfunc( querynml+&quot; -res &quot;+res  +&quot; -var fatmgrid&quot; );


These can all be changed to use mapping, surf, or domain files for the same information.</thetext>
  </long_desc><long_desc isprivate="0" >
    <commentid>4387</commentid>
    <comment_count>1</comment_count>
    <who name="Erik Kluzek">erik</who>
    <bug_when>2012-01-26 09:20:05 -0700</bug_when>
    <thetext>Also note there aren&apos;t fatmgrid files available for non lat-lon grids. So none of the HOMME grids have them for example.</thetext>
  </long_desc><long_desc isprivate="0" >
    <commentid>7488</commentid>
    <comment_count>2</comment_count>
    <who name="Bill Sacks">sacks</who>
    <bug_when>2016-05-05 14:42:12 -0600</bug_when>
    <thetext>Looks like there are a few remaining references to fatmgrid that should be removed - but it doesn&apos;t look like it&apos;s being used.</thetext>
  </long_desc>
      
      

    </bug>
    <bug>
          <bug_id>1461</bug_id>
          
          <creation_ts>2012-02-03 11:36:16 -0700</creation_ts>
          <short_desc>[CLM-only] anoxia/wtsat case fails on bluefire..</short_desc>
          <delta_ts>2016-05-05 14:56:35 -0600</delta_ts>
          <reporter_accessible>1</reporter_accessible>
          <cclist_accessible>1</cclist_accessible>
          <classification_id>1</classification_id>
          <classification>Unclassified</classification>
          <product>CCSM/CESM CLM</product>
          <component>CLM 5.0</component>
          <version>unspecified</version>
          <rep_platform>IBM SP</rep_platform>
          <op_sys>AIX</op_sys>
          <bug_status>ASSIGNED</bug_status>
          <resolution></resolution>
          
          
          <bug_file_loc></bug_file_loc>
          <status_whiteboard></status_whiteboard>
          <keywords></keywords>
          <priority>P3</priority>
          <bug_severity>normal</bug_severity>
          <target_milestone>CLM5</target_milestone>
          
          
          <everconfirmed>1</everconfirmed>
          <reporter name="Erik Kluzek">erik</reporter>
          <assigned_to name="Erik Kluzek">erik</assigned_to>
          <cc>cdkoven</cc>
    
    <cc>dlawren</cc>
    
    <cc>rfisher</cc>
    
    <cc>sacks</cc>
          
          <cf_fixedinversion></cf_fixedinversion>

      

      

      

          <comment_sort_order>oldest_to_newest</comment_sort_order>  
          <long_desc isprivate="0" >
    <commentid>4407</commentid>
    <comment_count>0</comment_count>
    <who name="Erik Kluzek">erik</who>
    <bug_when>2012-02-03 11:36:16 -0700</bug_when>
    <thetext>The following case fails running on bluefire due to a floating point exception. This is on the clm45sci branch what will be clm45sci01_clm4_0_39 or also 
lbnlmerge-vertsoi-lake-ch4-24.2_clm4_0_39.

059 smHd3 TSM.sh 17p_cnmesc_do clm_std^nl_anoxia_wtsat 18500101:1800 10x15 USGS@1850 -10 cold ...FAIL! rc= 10


  Signal received: SIGTRAP - Trace trap
    Signal generated for floating-point exception:
      FP invalid operation

  Instruction that generated the exception:
    fmul fr01,fr01,fr02
    Source Operand values:
      fr01 =   1.34193632121635e+26
      fr02 =   5.00000000000000e+35

  Traceback:
    Offset 0x00002720 in procedure __ch4mod_NMOD_ch4_prod, near line 973 in file /glade/proj3/cseg/people/erik/clm_lbnlmerge/models/lnd/clm/src/biogeochem/ch4Mod.F90

  Signal received: SIGTRAP - Trace trap
    Offset 0x000060f4 in procedure __ch4mod_NMOD_ch4    Signal generated for floating-point exception:
      FP invalid operation

The same test fails on lynx_pgi as well..

021 smHd3 TSM.sh 17p_cnmesc_do clm_std^nl_anoxia_wtsat 18500101:1800 10x15 USGS@1850 -10 cold ...FAIL! rc= 10</thetext>
  </long_desc><long_desc isprivate="0" >
    <commentid>7489</commentid>
    <comment_count>1</comment_count>
    <who name="Bill Sacks">sacks</who>
    <bug_when>2016-05-05 14:56:35 -0600</bug_when>
    <thetext>It looks like we&apos;re not running any tests with anoxia_wtsat. We should investigate this.</thetext>
  </long_desc>
      
      

    </bug>
    <bug>
          <bug_id>1652</bug_id>
          
          <creation_ts>2013-04-08 16:27:28 -0600</creation_ts>
          <short_desc>Re-implement build-namelist unit tester for CLM</short_desc>
          <delta_ts>2016-05-09 14:28:19 -0600</delta_ts>
          <reporter_accessible>1</reporter_accessible>
          <cclist_accessible>1</cclist_accessible>
          <classification_id>1</classification_id>
          <classification>Unclassified</classification>
          <product>CCSM/CESM CLM</product>
          <component>CLM 5.0</component>
          <version>CESM1.1.z Release</version>
          <rep_platform>All</rep_platform>
          <op_sys>All</op_sys>
          <bug_status>ASSIGNED</bug_status>
          <resolution></resolution>
          
          
          <bug_file_loc></bug_file_loc>
          <status_whiteboard></status_whiteboard>
          <keywords></keywords>
          <priority>P5</priority>
          <bug_severity>enhancement</bug_severity>
          <target_milestone>Future</target_milestone>
          
          
          <everconfirmed>1</everconfirmed>
          <reporter name="Erik Kluzek">erik</reporter>
          <assigned_to name="Erik Kluzek">erik</assigned_to>
          <cc>bugzillaMuszala</cc>
    
    <cc>mvertens</cc>
    
    <cc>rfisher</cc>
    
    <cc>sacks</cc>
          
          <cf_fixedinversion></cf_fixedinversion>

      

      

      

          <comment_sort_order>oldest_to_newest</comment_sort_order>  
          <long_desc isprivate="0" >
    <commentid>5000</commentid>
    <comment_count>0</comment_count>
    <who name="Erik Kluzek">erik</who>
    <bug_when>2013-04-08 16:27:28 -0600</bug_when>
    <thetext>The unit tester for CLM is quite awkward, bulky, and hard to maintain. The principle of having a unit test is a good one though, so I&apos;d like to see us continue to have one. But, it would be good to throw this version away and re-implement it completely. I&apos;ve thought this for a long time, but it isn&apos;t something we can spend time on.

I think a better way to implement it would be for it to have test lists similar to our other successful test frameworks. Then a file (probably XML) that lists the master list of tests, and the expected results. So it could specify if it was an expected fail condition or not. It should also probably understand and be able to set all the different options to the build-namelist.

I think something could be setup to read the XML file, that would be pretty lightweight. So the main effort would be in the XML file itself.

I don&apos;t know when we might be able to spend time on this, but I&apos;ll have a bug report so we don&apos;t forget about it.</thetext>
  </long_desc>
      
      

    </bug>
    <bug>
          <bug_id>1746</bug_id>
          
          <creation_ts>2013-06-11 06:02:41 -0600</creation_ts>
          <short_desc>ERS_D.f10_f10.ICLM45BGCNoVS.yellowstone_intel.clm-rootlit error</short_desc>
          <delta_ts>2016-05-16 14:14:18 -0600</delta_ts>
          <reporter_accessible>1</reporter_accessible>
          <cclist_accessible>1</cclist_accessible>
          <classification_id>1</classification_id>
          <classification>Unclassified</classification>
          <product>CCSM/CESM CLM</product>
          <component>CLM 5.0</component>
          <version>unspecified</version>
          <rep_platform>All</rep_platform>
          <op_sys>All</op_sys>
          <bug_status>REOPENED</bug_status>
          <resolution></resolution>
          
          
          <bug_file_loc></bug_file_loc>
          <status_whiteboard></status_whiteboard>
          <keywords></keywords>
          <priority>P2</priority>
          <bug_severity>normal</bug_severity>
          <target_milestone>CLM5</target_milestone>
          
          
          <everconfirmed>1</everconfirmed>
          <reporter name="muszala">bugzillaMuszala</reporter>
          <assigned_to name="Erik Kluzek">erik</assigned_to>
          <cc>erik</cc>
    
    <cc>muszala</cc>
    
    <cc>rfisher</cc>
          
          <cf_fixedinversion></cf_fixedinversion>

      

      

      

          <comment_sort_order>oldest_to_newest</comment_sort_order>  
          <long_desc isprivate="0" >
    <commentid>5267</commentid>
    <comment_count>0</comment_count>
    <who name="muszala">bugzillaMuszala</who>
    <bug_when>2013-06-11 06:02:41 -0600</bug_when>
    <thetext>ERS_D.f10_f10.ICLM45BGCNoVS.yellowstone_intel.clm-rootlit

Ran in clm4_5_09.  After the refactor in clm4_5_10, this test still runs but is not BFB with clm4_5_09.  Consider clm4_5_09 truth.

As a sanity check, ERS_D.f10_f10.ICLM45BGCNoVS.frankfurt_intel.clm-rootlit is BFB between clm4_5_09 and clm4_5_10.

This looks like a problem specific to yellowstone &amp; the intel compiler.</thetext>
  </long_desc><long_desc isprivate="0" >
    <commentid>5279</commentid>
    <comment_count>1</comment_count>
    <who name="muszala">bugzillaMuszala</who>
    <bug_when>2013-06-12 13:05:28 -0600</bug_when>
    <thetext>found error with nag in

ch4Mod.F90, line 1003: Subscript 2 of POT_F_NIT_VR (value 2) is out of range (1:1). 

fix from Jim:: change

if (.not. lake )

t0

if (.not. lake .and. j&lt;=nlevdcomp_full ) then

fixes things with nag+frankfurt, intel+frankfurt and intel+yellowstone.

This will be added in an upcoming tag.

Consider any simulation with this compset suspect until the fix is in place.

Stef-</thetext>
  </long_desc><long_desc isprivate="0" >
    <commentid>5282</commentid>
    <comment_count>2</comment_count>
    <who name="muszala">bugzillaMuszala</who>
    <bug_when>2013-06-13 09:49:25 -0600</bug_when>
    <thetext>put ch4Mod.F90 fix in clm4_5_12.  Tested with:

frankfurt+nag
frankfrut+intel

yellowstone+intel

The fix does change CLM fields for this test only.  Coupler and CLM history files remained BFB in all other tests.  Please see the clm4_5_12 ChangeLog for details.</thetext>
  </long_desc><long_desc isprivate="0" >
    <commentid>5285</commentid>
    <comment_count>3</comment_count>
    <who name="muszala">bugzillaMuszala</who>
    <bug_when>2013-06-13 10:25:48 -0600</bug_when>
    <thetext>SPM- reopened.  proper fix is needs to go in a future tag.
 
Charlie brought me into this thread.  As I mentioned to him, I think what was going on is, the methane model is supposed to work without the vertically resolved BGC (indeed, it was originally developed in that mode), but I didn&apos;t anticipate that &quot;NITRIF_DENITRIF&quot; would be used without vertically resolved BGC when I wrote that loop.  If this is an unsupported configuration intended for machine testing only, then Jim&apos;s fix below is fine; otherwise I would tweak it to get the correct behavior, as Jim&apos;s fix will increase anoxia in the top soil layer and reduce methane oxidation more than intended.  Better to just ignore the oxygen demand by nitrifiers when the vertically resolved soil BGC is not used, and replace the logic with something like:
 
&quot;if (.not. lake .and. nlevdcomp &gt;= nlevsoi) then&quot;
or
&quot;if (.not. lake .and. nlevdcomp_full &gt;= nlevgrnd) then&quot;
 
--Zack</thetext>
  </long_desc><long_desc isprivate="0" >
    <commentid>6159</commentid>
    <comment_count>4</comment_count>
    <who name="Erik Kluzek">erik</who>
    <bug_when>2014-05-22 23:21:54 -0600</bug_when>
    <thetext>*** Bug 1672 has been marked as a duplicate of this bug. ***</thetext>
  </long_desc><long_desc isprivate="0" >
    <commentid>6160</commentid>
    <comment_count>5</comment_count>
    <who name="Erik Kluzek">erik</who>
    <bug_when>2014-05-23 00:17:55 -0600</bug_when>
    <thetext>Here&apos;s what those changes look like in cesm1_2_2

Index: models/lnd/clm/src/clm4_5/biogeochem/ch4Mod.F90
===================================================================
--- models/lnd/clm/src/clm4_5/biogeochem/ch4Mod.F90	(revision 60566)
+++ models/lnd/clm/src/clm4_5/biogeochem/ch4Mod.F90	(working copy)
@@ -674,7 +674,7 @@
    use ch4varcon,        only : q10ch4base, q10ch4, rootlitfrac, cnscalefactor, mino2lim, &amp; 
                                 f_ch4, lake_decomp_fact, usephfact, anoxicmicrosites, ch4rmcnlim
    use clm_varctl,       only : anoxia
-   use clm_varpar, only : nlevdecomp
+   use clm_varpar, only : nlevdecomp, nlevdecomp_full, nlevgrnd
 #ifdef CENTURY_DECOMP
    use CNDecompCascadeMod_CENTURY, only : nlev_soildecomp_standard
 #else
@@ -999,7 +999,7 @@
 
          ! Add oxygen demand for nitrification
 #if (defined NITRIF_DENITRIF)
-         if (.not. lake) then
+         if (.not. lake .and. nlevdecomp_full &gt;= nlevgrnd) then
             o2_decomp_depth(c,j) = o2_decomp_depth(c,j) + pot_f_nit_vr(c,j) * 2.0_r8/14.0_r8
                                                         ! g N/m^3/s           mol O2 / g N
          end if</thetext>
  </long_desc><long_desc isprivate="0" >
    <commentid>6161</commentid>
    <comment_count>6</comment_count>
    <who name="Erik Kluzek">erik</who>
    <bug_when>2014-05-23 13:46:50 -0600</bug_when>
    <thetext>Zack&apos;s fix was put into: cesm1_2_x_n12_clm4_5_10</thetext>
  </long_desc><long_desc isprivate="0" >
    <commentid>7515</commentid>
    <comment_count>7</comment_count>
    <who name="Bill Sacks">sacks</who>
    <bug_when>2016-05-16 14:13:44 -0600</bug_when>
    <thetext>Zack&apos;s suggested fix never made it to the trunk; it should.</thetext>
  </long_desc>
      
      

    </bug>
    <bug>
          <bug_id>1798</bug_id>
          
          <creation_ts>2013-08-29 13:57:39 -0600</creation_ts>
          <short_desc>extension past 2100 very slow with pftdyn file that ends in 2100</short_desc>
          <delta_ts>2016-05-16 14:28:09 -0600</delta_ts>
          <reporter_accessible>1</reporter_accessible>
          <cclist_accessible>1</cclist_accessible>
          <classification_id>1</classification_id>
          <classification>Unclassified</classification>
          <product>CCSM/CESM CLM</product>
          <component>CLM 5.0</component>
          <version>CESM1.2.z Release</version>
          <rep_platform>All</rep_platform>
          <op_sys>All</op_sys>
          <bug_status>REOPENED</bug_status>
          <resolution></resolution>
          
          
          <bug_file_loc></bug_file_loc>
          <status_whiteboard></status_whiteboard>
          <keywords></keywords>
          <priority>P2</priority>
          <bug_severity>minor</bug_severity>
          <target_milestone>CLM5</target_milestone>
          
          
          <everconfirmed>1</everconfirmed>
          <reporter name="David Lawrence">dlawren</reporter>
          <assigned_to name="Erik Kluzek">erik</assigned_to>
          <cc>bugzillaMuszala</cc>
    
    <cc>erik</cc>
    
    <cc>jedwards</cc>
    
    <cc>muszala</cc>
    
    <cc>rfisher</cc>
    
    <cc>sacks</cc>
          
          <cf_fixedinversion></cf_fixedinversion>

      

      

      

          <comment_sort_order>oldest_to_newest</comment_sort_order>  
          <long_desc isprivate="0" >
    <commentid>5420</commentid>
    <comment_count>0</comment_count>
    <who name="David Lawrence">dlawren</who>
    <bug_when>2013-08-29 13:57:39 -0600</bug_when>
    <thetext>When extending past the end of a pftdyn file time domain, the model slows down massively because of incorrect logic in pftdynMod.F90.  The model tries to read in pft information and interpolate at every timestep when it actually shouldn&apos;t be reading at all.  The fix is simple.  In pftdynMod.F90, add the line between the !DML (and add the endif)

    call get_curr_date(year, mon, day, sec)

    ! Obtain new time sample if necessary.
    ! The first condition is the regular crossing of a year boundary
    ! when within the dynpft timeseries range. The second condition is
    ! the case of the first entry into the dynpft timeseries range from
    ! an earlier period of constant weights.
!DML
    if (year &lt;= yearspft(ntimes)) then
!DML
         if (year &gt; yearspft(nt1) .or. (nt1 == 1 .and. nt2 == 1 .and. year == yearspft(1))) then

              if (year &gt;= yearspft(ntimes)) then</thetext>
  </long_desc><long_desc isprivate="0" >
    <commentid>5521</commentid>
    <comment_count>1</comment_count>
    <who name="Erik Kluzek">erik</who>
    <bug_when>2013-09-24 14:58:08 -0600</bug_when>
    <thetext>Assign to Stef</thetext>
  </long_desc><long_desc isprivate="0" >
    <commentid>5532</commentid>
    <comment_count>2</comment_count>
    <who name="muszala">bugzillaMuszala</who>
    <bug_when>2013-09-26 10:01:52 -0600</bug_when>
    <thetext>fixed and in clm4_5_32</thetext>
  </long_desc><long_desc isprivate="0" >
    <commentid>6302</commentid>
    <comment_count>3</comment_count>
    <who name="Erik Kluzek">erik</who>
    <bug_when>2014-07-30 14:01:43 -0600</bug_when>
    <thetext>*** Bug 2021 has been marked as a duplicate of this bug. ***</thetext>
  </long_desc><long_desc isprivate="0" >
    <commentid>6303</commentid>
    <comment_count>4</comment_count>
    <who name="Erik Kluzek">erik</who>
    <bug_when>2014-07-30 14:17:35 -0600</bug_when>
    <thetext>Looks like this was only fixed for clm4_5 in clm4_5_32. So it needs to be put into the clm4_0 side again. The clm4_5 side has been reworked extensively and I don&apos;t see any code similar to this.</thetext>
  </long_desc><long_desc isprivate="0" >
    <commentid>6304</commentid>
    <comment_count>5</comment_count>
    <who name="Bill Sacks">sacks</who>
    <bug_when>2014-07-30 14:45:41 -0600</bug_when>
    <thetext>In the clm4_5 code, this logic has been moved to dyn_subgrid/dynVarTimeInterpMod.F90.in - although the logic is completely reworked. (Part of my motivation for creating a new module was to handle what had become tangled, hard-to-follow logic for cases like this.)</thetext>
  </long_desc>
      
      

    </bug>
    <bug>
          <bug_id>1909</bug_id>
          
          <creation_ts>2014-01-27 14:09:21 -0700</creation_ts>
          <short_desc>Trouble with building PDF file for CLM User&apos;s Guide in cesm1.2...</short_desc>
          <delta_ts>2016-06-29 15:54:33 -0600</delta_ts>
          <reporter_accessible>1</reporter_accessible>
          <cclist_accessible>1</cclist_accessible>
          <classification_id>1</classification_id>
          <classification>Unclassified</classification>
          <product>CCSM/CESM CLM</product>
          <component>CLM 5.0</component>
          <version>CESM1.2.z Release</version>
          <rep_platform>All</rep_platform>
          <op_sys>All</op_sys>
          <bug_status>ASSIGNED</bug_status>
          <resolution></resolution>
          
          
          <bug_file_loc></bug_file_loc>
          <status_whiteboard></status_whiteboard>
          <keywords></keywords>
          <priority>P2</priority>
          <bug_severity>normal</bug_severity>
          <target_milestone>CLM5</target_milestone>
          
          
          <everconfirmed>1</everconfirmed>
          <reporter name="Erik Kluzek">erik</reporter>
          <assigned_to name="Erik Kluzek">erik</assigned_to>
          <cc>dlawren</cc>
    
    <cc>muszala</cc>
    
    <cc>mvertens</cc>
    
    <cc>rfisher</cc>
    
    <cc>sacks</cc>
          
          <cf_fixedinversion></cf_fixedinversion>

      

      

      

          <comment_sort_order>oldest_to_newest</comment_sort_order>  
          <long_desc isprivate="0" >
    <commentid>5811</commentid>
    <comment_count>0</comment_count>
      <attachid>26</attachid>
    <who name="Erik Kluzek">erik</who>
    <bug_when>2014-01-27 14:09:21 -0700</bug_when>
    <thetext>Created attachment 26
Log of the build failure...

I haven&apos;t been able to build the PDF file for the CLM User&apos;s Guide in cesm1.2. It worked before that version. The HTML works OK though. I haven&apos;t been able to figure out the issue with it. I thought it might&apos;ve been new figures I added, but that doesn&apos;t seem to be the issue.</thetext>
  </long_desc><long_desc isprivate="0" >
    <commentid>7565</commentid>
    <comment_count>1</comment_count>
    <who name="Bill Sacks">sacks</who>
    <bug_when>2016-06-29 15:54:33 -0600</bug_when>
    <thetext>We may convert to restructured text (or some other tool) for clm5. Keeping this open until we decide for sure.</thetext>
  </long_desc>
      
          <attachment
              isobsolete="0"
              ispatch="0"
              isprivate="0"
          >
            <attachid>26</attachid>
            <date>2014-01-27 14:09:21 -0700</date>
            <delta_ts>2014-01-27 14:09:21 -0700</delta_ts>
            <desc>Log of the build failure...</desc>
            <filename>build.log</filename>
            <type>application/octet-stream</type>
            <size>76178</size>
            <attacher name="Erik Kluzek">erik</attacher>
            

          </attachment>
      

    </bug>
    <bug>
          <bug_id>1927</bug_id>
          
          <creation_ts>2014-02-18 19:50:11 -0700</creation_ts>
          <short_desc>Put in sanity checks for longwave radiation and other atmospheric forcing fields</short_desc>
          <delta_ts>2016-11-07 14:44:04 -0700</delta_ts>
          <reporter_accessible>1</reporter_accessible>
          <cclist_accessible>1</cclist_accessible>
          <classification_id>1</classification_id>
          <classification>Unclassified</classification>
          <product>CCSM/CESM CLM</product>
          <component>CLM 5.0</component>
          <version>unspecified</version>
          <rep_platform>PC</rep_platform>
          <op_sys>All</op_sys>
          <bug_status>NEW</bug_status>
          <resolution></resolution>
          
          
          <bug_file_loc></bug_file_loc>
          <status_whiteboard></status_whiteboard>
          <keywords></keywords>
          <priority>P2</priority>
          <bug_severity>normal</bug_severity>
          <target_milestone>CLM5</target_milestone>
          
          
          <everconfirmed>1</everconfirmed>
          <reporter name="Andy Fox">afox</reporter>
          <assigned_to name="Erik Kluzek">erik</assigned_to>
          <cc>erik</cc>
    
    <cc>oleson</cc>
    
    <cc>rfisher</cc>
    
    <cc>sacks</cc>
    
    <cc>thoar</cc>
          
          <cf_fixedinversion></cf_fixedinversion>

      

      

      

          <comment_sort_order>oldest_to_newest</comment_sort_order>  
          <long_desc isprivate="0" >
    <commentid>5865</commentid>
    <comment_count>0</comment_count>
    <who name="Andy Fox">afox</who>
    <bug_when>2014-02-18 19:50:11 -0700</bug_when>
    <thetext>I am trying to move the CLM-DART framework from CLM4.0 to CLM4.5. We rely on using an ensemble of DATMs produced by CAM, these are couple history files with 6hrly values and 2 degree resolution and this has been working well with ICN compsets with a large number of model tags over the last couple of years.
 
I’m now working with clm tag 4_5_62. Using an ICN compset still causes no issues, however,  moving either CLM4.5CN or CLM4.5BGC compsets is causing long wave balance errors for some of the ensemble members.  I don’t know what fraction of the different DATMs cause errors, and which don’t, but it is the case that multiple different ones cause the error. I have been testing now with a single instance.

The following case
/glade/p/work/afox/cases/clm4_5_62_pmo_member_23

With cesm.log.140218-191607 in 
/glade/scratch/afox/clm4_5_62_pmo_member_23/run

has an error that reads as

   1: Opened file ./clm4_5_62_pmo_member_23.clm2.h0.2000-03.nc to write           1
  15: errsoi incorporated into sensible heat in SLakeTemperature: c, (W/m^2):66916  7.812500000000000E-003
  15: BalanceCheck: longwave energy balance error nstep = 5139 point =156436 imbalance =  163.744375 W/m2
  15: clm model is stopping
  15: ENDRUN: called without a message string
  15:Abort(1) on node 15 (rank 15 in comm -1006632951): application called MPI_Abort(comm=0xC4000009, 1) - process 15

There is an initial warning about a sensible heat balance error from the lake code (line 1003 of clm4_5_62/models/lnd/clm/src/clm4_5/biogeophys/SLakeTemperatureMod.F90), then an endrun call from BalanceCheck.F90 with longwave radiation. Its not immediately apparent if these are definitely actually related.

This is 100% replicable, but replicating the error is somewhat complex as you have to set the user_nl_datm correctly set the stream files to point to the correct forcing files.

We have a script that will do this for single instance case that will fail with this error

/glade/p/work/afox/DART/models/clm/shell_scripts/CESM1_1_1_setup_pmo_test</thetext>
  </long_desc><long_desc isprivate="0" >
    <commentid>6345</commentid>
    <comment_count>1</comment_count>
    <who name="Bill Sacks">sacks</who>
    <bug_when>2014-08-28 15:09:40 -0600</bug_when>
    <thetext>Andy, is this still an issue, or have you worked around it? If it&apos;s still an issue, we can return this to major importance.</thetext>
  </long_desc><long_desc isprivate="0" >
    <commentid>6349</commentid>
    <comment_count>2</comment_count>
    <who name="Andy Fox">afox</who>
    <bug_when>2014-08-28 16:10:29 -0600</bug_when>
    <thetext>Bill,
I created a surface file with no lakes (thanks to your help) and have used that successfully. However, this isn&apos;t really a sustainable way forward for other users of DART with CLM4.5 which I know the DART folks would like to support.</thetext>
  </long_desc><long_desc isprivate="0" >
    <commentid>6351</commentid>
    <comment_count>3</comment_count>
    <who name="Bill Sacks">sacks</who>
    <bug_when>2014-08-28 16:53:47 -0600</bug_when>
    <thetext>Okay, thanks for the reminder, Andy. I&apos;m returning this to major importance.</thetext>
  </long_desc><long_desc isprivate="0" >
    <commentid>6541</commentid>
    <comment_count>4</comment_count>
    <who name="Erik Kluzek">erik</who>
    <bug_when>2014-11-20 10:56:45 -0700</bug_when>
    <thetext>Andy can you try either the latest code clm4_5_1_r096 or add in the bug fix for 1717 and see if it works for you now?</thetext>
  </long_desc><long_desc isprivate="0" >
    <commentid>7187</commentid>
    <comment_count>5</comment_count>
    <who name="Tim Hoar">thoar</who>
    <bug_when>2015-11-03 14:47:22 -0700</bug_when>
    <thetext>(In reply to Erik Kluzek from comment #4)
&gt; Andy can you try either the latest code clm4_5_1_r096 or add in the bug fix
&gt; for 1717 and see if it works for you now?

The bug fix for 1717 was put in LakeHydrologyMod.F90 in clm4_5_1_r096 and does not have the last two lines that bug 1717 indicates would be a good idea.

Things apparently got moved around a bit for CLM4_5 in cesm_1_2_1, in that LakeHydrologyMod.F90 seems to be SLakeHydrologyMod.F90 - which is substantially bigger.

I did my best to add the fix to
/glade/u/home/thoar/cesm1_2_1/SourceMods/src.clm/src/clm4_5/biogeophys/SLakeHydrologyMod.F90

I did a clean_build and then a build, verified that the new SLakeHydrologyMod.F90 was used and I it appears to have had no effect.

I am still getting longwave balance errors, but my error message is slightly different than Andy&apos;s in that his pretty clearly indemnified LakeTemperature, mine does not:

63306   45:(shr_stream_set) size of filename =      1
63307   45:(shr_stream_set) filename = /glade/p/cesmdata/cseg/inputdata/lnd/clm2/ndepdata/fndep_clm_hist_simyr1849-2006_1.9x2.5_c100      428.nc
...
66589   45: BalanceCheck: longwave energy balance error nstep =        76 point =157575 imbalance =    4.556614 W/m2
66590   45: clm model is stopping
66591   45: ENDRUN:BalanceCheck: longwave energy balance error
66592   45:Abort(1) on node 45 (rank 15 in comm -1006632708): application called MPI_Abort(comm=0xC40000FC, 1) - process 15
66593   45:INFO: 0031-306  pm_atexit: pm_exit_value is 1.
66594 INFO: 0031-251  task 45 exited: rc=1
66595 ERROR: 0031-300  Forcing all remote tasks to exit due to exit code 1 in task 45</thetext>
  </long_desc><long_desc isprivate="0" >
    <commentid>7188</commentid>
    <comment_count>6</comment_count>
    <who name="Bill Sacks">sacks</who>
    <bug_when>2015-11-03 14:49:46 -0700</bug_when>
    <thetext>Adding Keith Oleson in case he has any insights.</thetext>
  </long_desc><long_desc isprivate="0" >
    <commentid>7189</commentid>
    <comment_count>7</comment_count>
    <who name="Keith Oleson">oleson</who>
    <bug_when>2015-11-03 15:56:57 -0700</bug_when>
    <thetext>The only thing I can say at the moment is that it doesn&apos;t look like Zack&apos;s original suggested bug fix for 1717 was put into the code. I.e.,

&quot;I found one error that is not just a typo but also shows up in a rarely
exercised portion of the code (most likely a sudden very intense
snowstorm-- ~8 cm/hr -- preceded by warmer weather) in SLakeHydrology,
where the top lake layer temperature is likely being set incorrectly.  I
haven&apos;t tested this, but after looking it over, I think line 794 should
be changed from
&quot;t_lake(c,1) = t_lake(c,1) - heatrem/(cpliq*denh2o*dz_lake(c,1))&quot;,
to
&quot;t_lake(c,1) = tfrz + heatrem/(cpliq*denh2o*dz_lake(c,1))&quot;.  So you
could make another low-priority bug report for that.&quot;

The next comment after that is from Erik regarding a longwave balance error and then suggested fixes for that from Sean.

I don&apos;t know if the above from Zack is related to Tim&apos;s error though.  But I guess you could try it.  I will check with Erik/Sean to see why Zack&apos;s suggestion wasn&apos;t put in.  Maybe Sean&apos;s changes took care of Zack&apos;s suggestion somehow.</thetext>
  </long_desc><long_desc isprivate="0" >
    <commentid>7190</commentid>
    <comment_count>8</comment_count>
    <who name="Tim Hoar">thoar</who>
    <bug_when>2015-11-03 16:08:15 -0700</bug_when>
    <thetext>(In reply to Keith Oleson from comment #7)
&gt; The only thing I can say at the moment is that it doesn&apos;t look like Zack&apos;s
&gt; original suggested bug fix for 1717 was put into the code. I.e.,
&gt; 
&gt; &quot;I found one error that is not just a typo but also shows up in a rarely
&gt; exercised portion of the code (most likely a sudden very intense
&gt; snowstorm-- ~8 cm/hr -- preceded by warmer weather) in SLakeHydrology,
&gt; where the top lake layer temperature is likely being set incorrectly.  I
&gt; haven&apos;t tested this, but after looking it over, I think line 794 should
&gt; be changed from
&gt; &quot;t_lake(c,1) = t_lake(c,1) - heatrem/(cpliq*denh2o*dz_lake(c,1))&quot;,
&gt; to
&gt; &quot;t_lake(c,1) = tfrz + heatrem/(cpliq*denh2o*dz_lake(c,1))&quot;.  So you
&gt; could make another low-priority bug report for that.&quot;
&gt; 
&gt; The next comment after that is from Erik regarding a longwave balance error
&gt; and then suggested fixes for that from Sean.
&gt; 
&gt; I don&apos;t know if the above from Zack is related to Tim&apos;s error though.  But I
&gt; guess you could try it.  I will check with Erik/Sean to see why Zack&apos;s
&gt; suggestion wasn&apos;t put in.  Maybe Sean&apos;s changes took care of Zack&apos;s
&gt; suggestion somehow.

I need some clarification, sorry ...

Are you saying I should back out the 20 or so lines from Sean that constitute the fix implemented in clm4_5_1_r096 in favor of Zack&apos;s one-liner:
t_lake(c,1) = tfrz + heatrem/(cpliq*denh2o*dz_lake(c,1))   ?

I already tried Sean&apos;s solution - and it did not help.</thetext>
  </long_desc><long_desc isprivate="0" >
    <commentid>7191</commentid>
    <comment_count>9</comment_count>
    <who name="Keith Oleson">oleson</who>
    <bug_when>2015-11-03 16:14:25 -0700</bug_when>
    <thetext>No, I was suggesting you could just substitute in Zack&apos;s one-liner.  Leave
Sean&apos;s code alone.</thetext>
  </long_desc><long_desc isprivate="0" >
    <commentid>7192</commentid>
    <comment_count>10</comment_count>
    <who name="Keith Oleson">oleson</who>
    <bug_when>2015-11-03 20:46:47 -0700</bug_when>
    <thetext>Tim, If you have a case I can clone easily I can take a closer look at this.  It will probably have to wait until next week though as we are trying to diagnose problems with CLM5 within the coupled model this week.

Keith</thetext>
  </long_desc><long_desc isprivate="0" >
    <commentid>7193</commentid>
    <comment_count>11</comment_count>
    <who name="Tim Hoar">thoar</who>
    <bug_when>2015-11-03 21:50:32 -0700</bug_when>
    <thetext>(In reply to Keith Oleson from comment #10)
&gt; Tim, If you have a case I can clone easily I can take a closer look at this.
&gt; It will probably have to wait until next week though as we are trying to
&gt; diagnose problems with CLM5 within the coupled model this week.
&gt; 
&gt; Keith

my case directory is:
/glade/p/work/thoar/cases/clm45_121_freerun2
the run directory is
/glade/scratch/thoar/clm45_121_freerun2/run

I appreciate the help. I have several people who want to use the multi-instance capability with CLM45 - at least one is BGC, and right now I cannot get it to run
when each instance has a separate stream file. My hunch is that (at least) one of the DATM input files (that work fine with CLM4.0) has a situation that causes CLM4.5BGC to blow up. I have not tracked down precisely which ensemble member has what I believe to be the culprit.</thetext>
  </long_desc><long_desc isprivate="0" >
    <commentid>7196</commentid>
    <comment_count>12</comment_count>
    <who name="Andy Fox">afox</who>
    <bug_when>2015-11-04 10:05:05 -0700</bug_when>
    <thetext>I never managed to figure out which DATMS were causing the issues either - but from what I recall I decided that it was certainly more than a couple, but by no means all of them. I think I speculated it was maybe 10 out of 80 DATMS caused this issue?</thetext>
  </long_desc><long_desc isprivate="0" >
    <commentid>7200</commentid>
    <comment_count>13</comment_count>
    <who name="Keith Oleson">oleson</who>
    <bug_when>2015-11-09 10:07:14 -0700</bug_when>
    <thetext>I&apos;d like to try to replicate the original balance error.  Will this script that Andy pointed to work for me?

/glade/p/work/afox/DART/models/clm/shell_scripts/CESM1_1_1_setup_pmo_test

I assume I would check out clm4_5_62 and then modify the above script for my directories/environment.</thetext>
  </long_desc><long_desc isprivate="0" >
    <commentid>7201</commentid>
    <comment_count>14</comment_count>
    <who name="Tim Hoar">thoar</who>
    <bug_when>2015-11-09 16:49:46 -0700</bug_when>
    <thetext>OK - I whittled it down to a single instance that (reliably) fails.
After a newton bisection process to figure out which of the 80 instances was failing, it is this (drumroll please ...) number 2  ... sigh.

1) CASEROOT /glade/scratch/thoar/clm45bgc_121_pmo2/run
2) RUNDIR   /glade/p/work/thoar/cases/clm45bgc_121_pmo2

please clone away. Thanks.</thetext>
  </long_desc><long_desc isprivate="0" >
    <commentid>7202</commentid>
    <comment_count>15</comment_count>
    <who name="Keith Oleson">oleson</who>
    <bug_when>2015-11-09 21:33:14 -0700</bug_when>
    <thetext>It looks like what is happening is that a negative sabg (solar absorbed) for a lake point is calculated by the albedo routine, because the incoming diffuse solar radiation is negative.  The sun is slightly above the horizon (coszen &gt; 0) so the model tries to use the negative incoming solar.  This causes a large value for lake surface temperature which generates a large outgoing longwave radiation (e+16) and the model can&apos;t quite compensate.

I checked all of the incoming diffuse solar from all of the ensemble members and several of the ensemble members have negative values in at least one grid cell.

Not sure why these forcing files worked with CLM4.0.  Maybe there is a check in the CLM4.0 source code that is not in CLM4.5 anymore.  Or maybe the CLM4.0 lake model is more forgiving of a negative solar radiation at a single time step than the CLM4.5 lake model is.  I assume that the same version of the datm is used to drive both CLM4.0 and CLM4.5.

I could see a few different fixes for this: 1) Simply zero out any negative values in the 6-hourly datm forcing files, 2) In the interpolation of 6-hourly values to 1/2 hourly in the datm code (or whatever time step CLM is using), zero out negative values, 2) Put a check into the SurfaceAlbedo code to zero out negative values before computing an albedo.

It seems to me like the best solution is 1).  Although maybe there should also be a check in CLM for negative solar radiation.  I don&apos;t know why those forcing files would have negative solar radiation.  Are those files generated by CAM?

I&apos;ll see if I can figure out why CLM4.0 works and CLM4.5 doesn&apos;t...it might be a useful exercise...</thetext>
  </long_desc><long_desc isprivate="0" >
    <commentid>7203</commentid>
    <comment_count>16</comment_count>
    <who name="Tim Hoar">thoar</who>
    <bug_when>2015-11-10 09:53:50 -0700</bug_when>
    <thetext>Those files have origins in CESM/CAM and the CESM coupler. We do have to do some processing to concatenate them into annual files, but we don&apos;t do any &apos;math&apos; on them,
so I&apos;m not sure where the negative values are coming from, and the assimilation
doesn&apos;t screw with the diffuse solar (to my knowledge).

There are 1121 files of this nature. I&apos;m not looking forward to the prospect of hunting down all those values and replacing them with zeros. Solutions 2 or 3 might be a bit faster given the timeframe I&apos;m working with.

I&apos;d just as soon try to figure out where those are read and replace the negative values at that point.</thetext>
  </long_desc><long_desc isprivate="0" >
    <commentid>7204</commentid>
    <comment_count>17</comment_count>
    <who name="Keith Oleson">oleson</who>
    <bug_when>2015-11-10 11:26:23 -0700</bug_when>
    <thetext>Ok, I will see if I can figure out how to zero out negative values when the datm reads them in.</thetext>
  </long_desc><long_desc isprivate="0" >
    <commentid>7205</commentid>
    <comment_count>18</comment_count>
    <who name="Bill Sacks">sacks</who>
    <bug_when>2015-11-10 11:28:59 -0700</bug_when>
    <thetext>This discussion makes me feel like we should have some sanity checks in CLM (e.g., in atm2lndMod) that check for reasonable values of all of the forcing fields, so that problems like this can be caught more easily....</thetext>
  </long_desc><long_desc isprivate="0" >
    <commentid>7206</commentid>
    <comment_count>19</comment_count>
    <who name="Keith Oleson">oleson</who>
    <bug_when>2015-11-10 11:44:27 -0700</bug_when>
    <thetext>Yes, I agree.  One problem with forcing fields that appears every once in a while is negative incoming longwave radiation from the atmosphere.  This manifests itself as a longwave balance error in the urban model because the urban model has an internal check on longwave balance during the time step.  It&apos;s not obvious to users what the problem really is.  Establishing lower bounds on some fields is probably not too hard, e.g., incoming solar and longwave, humidity, precip should not be negative. Establishing upper bounds would be more challenging. Might also be a challenge for other fields such as temperature where we could be simulating climates far in the past and far in the future that have values that we would consider to be extreme relative to present day.</thetext>
  </long_desc><long_desc isprivate="0" >
    <commentid>7207</commentid>
    <comment_count>20</comment_count>
    <who name="Bill Sacks">sacks</who>
    <bug_when>2015-11-10 11:55:38 -0700</bug_when>
    <thetext>We could tackle the easiest part first: make sure that things that should be non-negative truly are non-negative.</thetext>
  </long_desc><long_desc isprivate="0" >
    <commentid>7209</commentid>
    <comment_count>21</comment_count>
    <who name="Andy Fox">afox</who>
    <bug_when>2015-11-10 13:40:38 -0700</bug_when>
    <thetext>Its great you guys have figured this out. Thanks so much for doing this Keith. 

I must admit back in the day when I looked in to this I didn&apos;t concentrate on errors in the DATMs as they had worked just fine with CLM4.0...</thetext>
  </long_desc><long_desc isprivate="0" >
    <commentid>7211</commentid>
    <comment_count>22</comment_count>
    <who name="Keith Oleson">oleson</who>
    <bug_when>2015-11-10 14:56:26 -0700</bug_when>
    <thetext>Ok, I have a couple of suggested options.  They are really just to get you going with your specific CLM45 simulations, I don&apos;t recommend either as permanent bug fixes because I think we need a software engineer who is familiar with the datm code to take a look at this.  And as Bill suggested we may want to implement a more robust approach to bounding all of the forcing data under any situation, uncoupled or coupled to an active atmosphere model.

The first is to modify this file as I&apos;ve done in my SourceMods for your particular case:

/glade/p/work/oleson/cesm1_2_1/scripts/clm45bgc_121_pmo2/SourceMods/src.share/shr_strdata_mod.F90

My changes are marked with &quot;!KO&quot;:

!KO
    SDAT%avFLB(n)%rAttr(:,i) = max(SDAT%avFLB(n)%rAttr(:,i),0._r8)
!KO

This ensures that the solar radiation fields are greater than zero before the cosine normalization step to interpolate the 6-hourly data to half-hourly is performed.  The cosine normalization is only done for solar fields so we don&apos;t have to check the field names here. 

The second is to modify this file:

 /glade/p/work/oleson/cesm1_2_1/scripts/clm45bgc_121_pmo2/SourceMods/src.share/shr_dmodel_mod.F90

Changes are:
!KO
   if (sfldName == &quot;a2x6h_Faxa_swndr&quot; .or. sfldName == &quot;a2x6h_Faxa_swvdr&quot; .or. &amp;
       sfldName == &quot;a2x6h_Faxa_swndf&quot; .or. sfldName == &quot;a2x6h_Faxa_swvdf&quot;) then
      av%rattr(k,:) = max(av%rattr(k,:),0._r8)
   end if
!KO


The advantage of this is that the check for negative solar radiation is done right after the data is read in.  The disadvantage is that I&apos;m looking for specific atm fields, the four incoming solar fields on your forcing files.
NOTE that I&apos;m only doing this here for the case where &quot;pio_iotype&quot; is not &quot;iotype_std_netcdf&quot;, which is true for your particular case.  The same thing would have to be done for the other situation.

I&apos;ve tested both of these separately and they both work and get the simulation past the longwave balance error.
Ideally we would probably want to identify the negative solar radiation as it was read in, stop the model, and flag this to the user so that the user knows they have spurious incoming solar values.

If anyone can suggest a better temporary fix, let me know, thanks.</thetext>
  </long_desc><long_desc isprivate="0" >
    <commentid>7215</commentid>
    <comment_count>23</comment_count>
    <who name="Tim Hoar">thoar</who>
    <bug_when>2015-11-13 16:35:42 -0700</bug_when>
    <thetext>Keith, Bill, Andy;

Thank you very much. I tried your first method (modifying shr_strdata_mod.F90)
and it got past the part that stymied me before. When I get back from PTO, I will spin up an 80 member CLM4.5 BGC run for 12 years, maybe more. (I have 12 years of DATM forcing).

Again - Thanks very much and I&apos;ll keep you posted.</thetext>
  </long_desc><long_desc isprivate="0" >
    <commentid>7567</commentid>
    <comment_count>24</comment_count>
    <who name="Bill Sacks">sacks</who>
    <bug_when>2016-06-29 16:01:52 -0600</bug_when>
    <thetext>Looking back at this quickly, we want to do three things:

(1) CAM should have some checks to not output negative values for some fluxes

(2) DATM should have similar checks, which convert negative values to 0

(3) CLM should check incoming values for sanity, and die with a meaningful message if values are outside the physically possible range.


(3) has come up a number of times recently. We should at least do this.</thetext>
  </long_desc><long_desc isprivate="0" >
    <commentid>7732</commentid>
    <comment_count>25</comment_count>
    <who name="Bill Sacks">sacks</who>
    <bug_when>2016-11-07 14:44:04 -0700</bug_when>
    <thetext>Renaming this based on what we still want to do.</thetext>
  </long_desc>
      
      

    </bug>
    <bug>
          <bug_id>1940</bug_id>
          
          <creation_ts>2014-03-01 21:20:54 -0700</creation_ts>
          <short_desc>Problems with override_nsrest namelist option</short_desc>
          <delta_ts>2016-06-29 16:07:27 -0600</delta_ts>
          <reporter_accessible>1</reporter_accessible>
          <cclist_accessible>1</cclist_accessible>
          <classification_id>1</classification_id>
          <classification>Unclassified</classification>
          <product>CCSM/CESM CLM</product>
          <component>CLM 5.0</component>
          <version>CESM1.2.z Release</version>
          <rep_platform>PC</rep_platform>
          <op_sys>All</op_sys>
          <bug_status>ASSIGNED</bug_status>
          <resolution></resolution>
          
          
          <bug_file_loc></bug_file_loc>
          <status_whiteboard></status_whiteboard>
          <keywords></keywords>
          <priority>P3</priority>
          <bug_severity>normal</bug_severity>
          <target_milestone>CLM5</target_milestone>
          
          
          <everconfirmed>1</everconfirmed>
          <reporter name="Erik Kluzek">erik</reporter>
          <assigned_to name="Erik Kluzek">erik</assigned_to>
          <cc>muszala</cc>
    
    <cc>rfisher</cc>
    
    <cc>sacks</cc>
    
    <cc>slevis</cc>
          
          <cf_fixedinversion></cf_fixedinversion>

      

      

      

          <comment_sort_order>oldest_to_newest</comment_sort_order>  
          <long_desc isprivate="0" >
    <commentid>5952</commentid>
    <comment_count>0</comment_count>
    <who name="Erik Kluzek">erik</who>
    <bug_when>2014-03-01 21:20:54 -0700</bug_when>
    <thetext>The override_nsrest option is not working correctly.

A case with the following in user_nl_clm:

nrevsn = &apos;/glade/p/cesmdata/cseg/inputdata/lnd/clm2/initdata_map/clmi.ICRUCLM45BGCCROPmp24.0241-01-01.10x15_USGS_simyr2000_c131028.nc&apos;
override_nsrest=3


Here&apos;s an example issue

   0:(   13)  ys6223
   0:(   14)  ys6223
   0:(shr_sys_abort) ERROR: control_init                     ERROR: nsrest NOT set to a valid value
   0:(shr_sys_abort) WARNING: calling shr_mpi_abort() and stopping
   5:(shr_sys_abort) ERROR: control_init                     ERROR: nsrest NOT set to a valid value</thetext>
  </long_desc><long_desc isprivate="0" >
    <commentid>5967</commentid>
    <comment_count>1</comment_count>
    <who name="Erik Kluzek">erik</who>
    <bug_when>2014-03-04 14:18:33 -0700</bug_when>
    <thetext>The namelist changes to make to get it to start are as follows...

--- bld/build-namelist	(revision 57227)
+++ bld/build-namelist	(working copy)
@@ -1508,9 +1508,9 @@
   my $nsrest         = $nl-&gt;get_value(&apos;override_nsrest&apos;);
 
   if ( defined($nsrest) ) {
-    if ( $nsrest == 0 ) { $my_start_type = &quot;startup&quot;;  }
-    if ( $nsrest == 1 ) { $my_start_type = &quot;continue&quot;; }
-    if ( $nsrest == 3 ) { $my_start_type = &quot;branch&quot;;   }
+    if ( $nsrest == 0 ) { $my_start_type = &quot;&apos;startup&apos;&quot;;  }
+    if ( $nsrest == 1 ) { $my_start_type = &quot;&apos;continue&apos;&quot;; }
+    if ( $nsrest == 2 ) { $my_start_type = &quot;&apos;branch&apos;&quot;;   }
     if ( &quot;$my_start_type&quot; eq &quot;$drv_start_type&quot; ) {
       fatal_error(&quot;no need to set override_nsrest to same as start_type.\n&quot;);
     }
Index: bld/namelist_files/namelist_definition_clm4_0.xml
===================================================================
--- bld/namelist_files/namelist_definition_clm4_0.xml	(revision 57227)
+++ bld/namelist_files/namelist_definition_clm4_0.xml	(working copy)
@@ -113,9 +113,9 @@
 &lt;/entry&gt;
 
 &lt;entry id=&quot;override_nsrest&quot; type=&quot;integer&quot;  category=&quot;clm_restart&quot; 
-       group=&quot;clm_inparm&quot; valid_values=&quot;3&quot;&gt;
+       group=&quot;clm_inparm&quot; valid_values=&quot;2&quot;&gt;
 Override the start type from the driver: it can only be
-set to 3 meaning branch.
+set to 2 meaning branch.
 &lt;/entry&gt;
 
 &lt;entry id=&quot;fglcmask&quot; type=&quot;char*256&quot; category=&quot;datasets&quot;
Index: bld/namelist_files/namelist_definition_clm4_5.xml
===================================================================
--- bld/namelist_files/namelist_definition_clm4_5.xml	(revision 57227)
+++ bld/namelist_files/namelist_definition_clm4_5.xml	(working copy)
@@ -132,9 +132,9 @@
 &lt;/entry&gt;
 
 &lt;entry id=&quot;override_nsrest&quot; type=&quot;integer&quot;  category=&quot;clm_restart&quot; 
-       group=&quot;clm_inparm&quot; valid_values=&quot;3&quot;&gt;
+       group=&quot;clm_inparm&quot; valid_values=&quot;2&quot;&gt;
 Override the start type from the driver: it can only be
-set to 3 meaning branch.
+set to 2 meaning branch.
 &lt;/entry&gt;
 
 &lt;entry id=&quot;fglcmask&quot; type=&quot;char*256&quot; category=&quot;datasets&quot;</thetext>
  </long_desc><long_desc isprivate="0" >
    <commentid>5976</commentid>
    <comment_count>2</comment_count>
    <who name="Erik Kluzek">erik</who>
    <bug_when>2014-03-05 14:33:33 -0700</bug_when>
    <thetext>I tried some cases for f10 and f19 with CROP compsets and they fail to run because of Balance Check errors. And numaIA doesn&apos;t have initial conditions which is the point of this.

So I don&apos;t have a good case for this, but I&apos;ll try to reproduce it with a non-CROP compset just to showcase the override functionality.</thetext>
  </long_desc><long_desc isprivate="0" >
    <commentid>7568</commentid>
    <comment_count>3</comment_count>
    <who name="Bill Sacks">sacks</who>
    <bug_when>2016-06-29 16:07:27 -0600</bug_when>
    <thetext>We&apos;re not sure why override_nsrest would be needed, so will probably just remove it.</thetext>
  </long_desc>
      
      

    </bug>
    <bug>
          <bug_id>1964</bug_id>
          
          <creation_ts>2014-04-03 12:05:38 -0600</creation_ts>
          <short_desc>canopy bottom height greater than canopy top height</short_desc>
          <delta_ts>2016-07-28 16:02:44 -0600</delta_ts>
          <reporter_accessible>1</reporter_accessible>
          <cclist_accessible>1</cclist_accessible>
          <classification_id>1</classification_id>
          <classification>Unclassified</classification>
          <product>CCSM/CESM CLM</product>
          <component>CLM 5.0</component>
          <version>unspecified</version>
          <rep_platform>All</rep_platform>
          <op_sys>All</op_sys>
          <bug_status>NEW</bug_status>
          <resolution></resolution>
          
          
          <bug_file_loc></bug_file_loc>
          <status_whiteboard></status_whiteboard>
          <keywords></keywords>
          <priority>P2</priority>
          <bug_severity>minor</bug_severity>
          <target_milestone>Future</target_milestone>
          
          
          <everconfirmed>1</everconfirmed>
          <reporter name="Keith Oleson">oleson</reporter>
          <assigned_to name="Erik Kluzek">erik</assigned_to>
          <cc>dlawren</cc>
    
    <cc>muszala</cc>
    
    <cc>oleson</cc>
    
    <cc>rfisher</cc>
          
          <cf_fixedinversion></cf_fixedinversion>

      

      

      

          <comment_sort_order>oldest_to_newest</comment_sort_order>  
          <long_desc isprivate="0" >
    <commentid>6073</commentid>
    <comment_count>0</comment_count>
    <who name="Keith Oleson">oleson</who>
    <bug_when>2014-04-03 12:05:38 -0600</bug_when>
    <thetext>A user lowered the canopy top height of a tree pft without also lowering the canopy bottom height (in a surface dataset for SP mode), such that the canopy top height was lower than the canopy bottom height.
The CLM4 model runs happily with this inconsistency (I haven&apos;t tried the CLM4.5), the apparent effect of this is to act as a multiplier on TLAI such that ELAI is greater than TLAI.
We should probably put in a call to endrun in STATICEcosysDynMod if canopy bottom height is greater than canopy top height.</thetext>
  </long_desc>
      
      

    </bug>
    <bug>
          <bug_id>1984</bug_id>
          
          <creation_ts>2014-05-28 13:18:41 -0600</creation_ts>
          <short_desc>Add warning when using single instance of start file...</short_desc>
          <delta_ts>2016-07-28 16:07:31 -0600</delta_ts>
          <reporter_accessible>1</reporter_accessible>
          <cclist_accessible>1</cclist_accessible>
          <classification_id>1</classification_id>
          <classification>Unclassified</classification>
          <product>CCSM/CESM CLM</product>
          <component>CLM 5.0</component>
          <version>CESM1.2.z Release</version>
          <rep_platform>All</rep_platform>
          <op_sys>All</op_sys>
          <bug_status>ASSIGNED</bug_status>
          <resolution></resolution>
          
          
          <bug_file_loc></bug_file_loc>
          <status_whiteboard></status_whiteboard>
          <keywords></keywords>
          <priority>P2</priority>
          <bug_severity>normal</bug_severity>
          <target_milestone>Future</target_milestone>
          
          
          <everconfirmed>1</everconfirmed>
          <reporter name="Erik Kluzek">erik</reporter>
          <assigned_to name="Erik Kluzek">erik</assigned_to>
          <cc>cacraig</cc>
    
    <cc>muszala</cc>
    
    <cc>rfisher</cc>
    
    <cc>sacks</cc>
    
    <cc>thoar</cc>
          
          <cf_fixedinversion></cf_fixedinversion>

      

      

      

          <comment_sort_order>oldest_to_newest</comment_sort_order>  
          <long_desc isprivate="0" >
    <commentid>6170</commentid>
    <comment_count>0</comment_count>
    <who name="Erik Kluzek">erik</who>
    <bug_when>2014-05-28 13:18:41 -0600</bug_when>
    <thetext>I was looking through old email and found the following thing that needs to be addressed...

On 3/6/2014 3:13 PM, Jim Edwards wrote:
Hi Cheryl and Tim,

This is more than just for testing.    When you are doing the first hybrid or branch run of a new ensemble the ${inst_string} files don&apos;t exist so you need to start all of the instances from the inputdata archive of the single instance version of the same case.   That said I don&apos;t have any problem with adding the warning.    


On Thu, Mar 6, 2014 at 2:56 PM, Cheryl Craig &lt;cacraig@ucar.edu&gt; wrote:
Tim-

I am cc&apos;ing Jim as he is the original author of this section of code.  Once he agrees to your proposed change, I can implement this in CAM.  Someone else will need to implement this in CLM.

Cheryl

On 3/5/2014 5:31 PM, Tim Hoar wrote:
Hello Cheryl,

Mariana suggested that I talk to you about adding a message to the 1_2_2 versions of
[cam,clm].buildnml.csh

There is a block of logic that is (I believe) useful for testing but could be really misleading for &apos;production&apos;. If the inst_string is set to something like 0023
and the clm_startfile does not exist for a hybrid or branch case, evasive action is taken and a single-instance file is used. In the production world, this is alarming.

I would like a message printed that this is happening so instead of silently &apos;failing&apos;, you might notice it.

set clm_startfile = &quot; &quot;
if ( $RUN_TYPE == &quot;hybrid&quot; || $RUN_TYPE == &quot;branch&quot; ) then
     set clm_startfile = &quot;${RUN_REFCASE}.clm2${inst_string}.r.${RUN_REFDATE}-${RUN_REFTOD}.nc&quot;
     if ( -e &quot;$RUNDIR/$clm_startfile&quot;) then
       set clm_startfile = &quot;-clm_startfile $clm_startfile&quot;
     else
       set clm_startfile = &quot;-clm_startfile ${RUN_REFCASE}.clm2.r.${RUN_REFDATE}-${RUN_REFTOD}.nc&quot;
       echo &quot;WARNING: $clm_startfile is being used.&quot;
       echo &quot;WARNING: $clm_startfile is being used.&quot;
     endif
endif

In particular, now that cesm_setup calls preview_namelist, this gets executed before RUNDIR even exists, so I think it always fails the first time. I know it gets called again in the *run script before execution, but by that time the user does not have a chance to correct it.</thetext>
  </long_desc><long_desc isprivate="0" >
    <commentid>6185</commentid>
    <comment_count>1</comment_count>
    <who name="Erik Kluzek">erik</who>
    <bug_when>2014-06-02 16:11:57 -0600</bug_when>
    <thetext>Here&apos;s what this looks like in cesm1_2_2...

Index: bld/clm.buildnml.csh
===================================================================
--- bld/clm.buildnml.csh	(revision 60806)
+++ bld/clm.buildnml.csh	(working copy)
@@ -80,6 +80,8 @@
       set clm_startfile = &quot;$clm_startfile&quot;
     else
       set clm_startfile = &quot;${RUN_REFCASE}.clm2.r.${RUN_REFDATE}-${RUN_REFTOD}.nc&quot;
+      echo &quot;WARNING: $clm_startfile is being used.&quot;
+      echo &quot;WARNING: $clm_startfile is being used.&quot;
     endif
     set clmicfile = &quot; $startfiletype = &apos;$clm_startfile&apos;&quot;
 endif</thetext>
  </long_desc>
      
      

    </bug>
    <bug>
          <bug_id>1992</bug_id>
          
          <creation_ts>2014-06-09 15:33:41 -0600</creation_ts>
          <short_desc>Make ed_mode a BGC option</short_desc>
          <delta_ts>2016-07-28 16:09:46 -0600</delta_ts>
          <reporter_accessible>1</reporter_accessible>
          <cclist_accessible>1</cclist_accessible>
          <classification_id>1</classification_id>
          <classification>Unclassified</classification>
          <product>CCSM/CESM CLM</product>
          <component>CLM 5.0</component>
          <version>unspecified</version>
          <rep_platform>All</rep_platform>
          <op_sys>All</op_sys>
          <bug_status>ASSIGNED</bug_status>
          <resolution></resolution>
          
          
          <bug_file_loc></bug_file_loc>
          <status_whiteboard></status_whiteboard>
          <keywords></keywords>
          <priority>P2</priority>
          <bug_severity>normal</bug_severity>
          <target_milestone>CLM5</target_milestone>
          
          
          <everconfirmed>1</everconfirmed>
          <reporter name="Erik Kluzek">erik</reporter>
          <assigned_to name="Erik Kluzek">erik</assigned_to>
          <cc>bandre</cc>
    
    <cc>cdkoven</cc>
    
    <cc>dlawren</cc>
    
    <cc>muszala</cc>
    
    <cc>mvertens</cc>
    
    <cc>rfisher</cc>
    
    <cc>sacks</cc>
          
          <cf_fixedinversion></cf_fixedinversion>

      

      

      

          <comment_sort_order>oldest_to_newest</comment_sort_order>  
          <long_desc isprivate="0" >
    <commentid>6200</commentid>
    <comment_count>0</comment_count>
    <who name="Erik Kluzek">erik</who>
    <bug_when>2014-06-09 15:33:41 -0600</bug_when>
    <thetext>Currently, ed_mode is an option on top of the bgc setting in CLM build-namelist, and there are compsets for ED with CN as well as ED with BGC. And it appears that you can set bgc to any valid setting (sp, cn, cndv, or bgc) and combine it with ed_mode. And you would think that you&apos;d get different results with this. In reality, ed_mode turns cn off and adds switches that pretty much duplicate the logic of use_cn=.false. switches. The only difference for ED with CN and with BGC is BGC turns methane on. But, without fully enabled BGC, I don&apos;t think methane works correctly. Rosie said there is an intention to eventually have ED run with below-ground BGC, but that&apos;s not working yet, and undoubtably it would be enabled as a ed_mode switch.

I met with Rosie, and she agrees with me that having ED as a BGC mode makes more sense. She did say, that originally she couldn&apos;t get things to work without CN on, as certain arrays weren&apos;t allocated. I&apos;m pretty sure at this point, we allocate everything whether CN is on or not, so that issue wouldn&apos;t come up anymore.

To set this up would require some changes both to scripts (for compsets) and to CLM (to code and to CLM build-namelist).</thetext>
  </long_desc><long_desc isprivate="0" >
    <commentid>6223</commentid>
    <comment_count>1</comment_count>
    <who name="Erik Kluzek">erik</who>
    <bug_when>2014-06-13 12:07:51 -0600</bug_when>
    <thetext>There actually is a &quot;use_ed&quot; statement in EDPhotosynthesisMod, so there was some effort to make ED run parallel to other bgc modes.

The statement requires the following change before it works, but after that ED will run without CN on.

Index: models/lnd/clm/src/clm4_5/biogeophys/ED/EDPhotosynthesisMod.F90
===================================================================
--- models/lnd/clm/src/clm4_5/biogeophys/ED/EDPhotosynthesisMod.F90	(revision 60800)
+++ models/lnd/clm/src/clm4_5/biogeophys/ED/EDPhotosynthesisMod.F90	(working copy)
@@ -476,7 +476,7 @@
         lmr25top(FT) = lmr25top(FT) * lnc(FT) / 12.e-06_r8
      else
         ! Leaf maintenance respiration in proportion to vcmax25top
-        lmr25top(FT) = vcmax25top(FT) * dr(nint(c3psn(FT)))
+        lmr25top(FT) = vcmax25top(FT) * dr(nint(c3psn(FT)+1))
      end if
   end do !FT 
 
I&apos;m also not sure if this is correct or not, as it&apos;s using c3psn, for the two ED types, but is that correct?</thetext>
  </long_desc><long_desc isprivate="0" >
    <commentid>6224</commentid>
    <comment_count>2</comment_count>
    <who name="Erik Kluzek">erik</who>
    <bug_when>2014-06-13 13:12:18 -0600</bug_when>
    <thetext>I also turned more things off with (use_cn) when use_ed is on, to show that ED is NOT dependent on anything CN has.

Index: main/initTimeConstMod.F90
===================================================================
--- main/initTimeConstMod.F90	(revision 60800)
+++ main/initTimeConstMod.F90	(working copy)
@@ -1309,7 +1309,7 @@
 
    end do ! end pft level initialization
    
-   if (use_cn) then
+   if (use_cn .and. .NOT. use_ed) then
       if (masterproc) write(iulog,*) &apos; initializing decomposition pools and transitions ...&apos;
       if (use_century_decomp) then
          call init_decompcascade_bgc(bounds)
Index: main/clm_initializeMod.F90
===================================================================
--- main/clm_initializeMod.F90	(revision 60800)
+++ main/clm_initializeMod.F90	(working copy)
@@ -380,7 +380,7 @@
     ! Initialize CN Ecosystem Dynamics (must be after time-manager initialization)
     ! ------------------------------------------------------------------------
 
-    if (use_cn) then 
+    if (use_cn .and. .NOT. use_ed) then 
        call CNEcosystemDynInit(bounds_proc)
     end if
 
@@ -536,7 +536,7 @@
     ! Initialize nitrogen deposition
     ! ------------------------------------------------------------------------
 
-    if (use_cn) then
+    if (use_cn .and. .NOT. use_ed ) then
        call t_startf(&apos;init_ndep&apos;)
        call ndep_init(bounds_proc)
        call ndep_interp(bounds_proc)
Index: main/initColdMod.F90
===================================================================
--- main/initColdMod.F90	(revision 60800)
+++ main/initColdMod.F90	(working copy)
@@ -31,7 +31,7 @@
     ! non-blank fields
     !
     ! USES:
-    use clm_varctl   , only : use_cn, use_cndv, use_lch4, iulog
+    use clm_varctl   , only : use_cn, use_cndv, use_lch4, iulog, use_ed
     use UrbanInitMod , only : initColdUrban
     use SLakeInitMod , only : initColdSLake
     use CNInitMod    , only : initColdCN
@@ -57,11 +57,13 @@
 
     call initColdUrban(bounds)
 
+    if ( .not. use_ed )then
     if (use_cn)   call initColdCN(bounds)
 
     if (use_cndv) call initColdCNDV(bounds)
 
     if (use_lch4) call initColdCH4(bounds)
+    end if
 
   end subroutine initCold
 
Index: main/restFileMod.F90
===================================================================
--- main/restFileMod.F90	(revision 60800)
+++ main/restFileMod.F90	(working copy)
@@ -105,7 +105,7 @@
 
     call BiogeophysRest(bounds, ncid, flag=&apos;define&apos; )
 
-    if (use_cn) then
+    if (use_cn .and. .NOT. use_ed) then
        call CNRest(bounds,  ncid, flag=&apos;define&apos;)
        if ( crop_prog ) call CropRest( bounds, ncid, flag=&apos;define&apos; )
     end if
@@ -138,7 +138,7 @@
 
     call BiogeophysRest( bounds, ncid, flag=&apos;write&apos; )
 
-    if (use_cn) then
+    if (use_cn .and. .NOT. use_ed) then
        call CNRest( bounds, ncid, flag=&apos;write&apos; )
        if ( crop_prog ) call CropRest( bounds, ncid, flag=&apos;write&apos; )
     end if
@@ -217,7 +217,7 @@
 
     call BiogeophysRest( bounds, ncid, flag=&apos;read&apos; )
 
-    if (use_cn) then
+    if (use_cn .and. .NOT. use_ed) then
        call CNRest( bounds, ncid, flag=&apos;read&apos; )
        if ( crop_prog ) call CropRest( bounds, ncid, flag=&apos;read&apos; )
     end if
Index: main/clm_driver.F90
===================================================================
--- main/clm_driver.F90	(revision 60800)
+++ main/clm_driver.F90	(working copy)
@@ -130,7 +130,7 @@
   ! Specified phenology
   ! ============================================================================
   
-  if (use_cn) then 
+  if (use_cn) then
      ! For dry-deposition need to call CLMSP so that mlaidiff is obtained
      if ( n_drydep &gt; 0 .and. drydep_method == DD_XLND ) then
         call t_startf(&apos;interpMonthlyVeg&apos;)
@@ -166,7 +166,7 @@
       call t_startf(&quot;decomp_vert&quot;)
       call alt_calc(filter(nc)%num_soilc, filter(nc)%soilc)
 
-      if (use_cn) then
+      if (use_cn .and. .NOT. use_ed) then
          !  Note (WJS, 6-12-13): Because of this routine&apos;s placement in the driver sequence
          !  (it is called very early in each timestep, before weights are adjusted and
          !  filters are updated), it may be necessary for this routine to compute values over
@@ -195,7 +195,7 @@
    do nc = 1,nclumps
       call get_clump_bounds(nc, bounds_clump)
       
-      if (use_cn) then
+      if (use_cn .and. .NOT. use_ed) then
          call t_startf(&apos;begcnbal&apos;)
          call BeginCBalance(bounds_clump, filter(nc)%num_soilc, filter(nc)%soilc)
          call BeginNBalance(bounds_clump, filter(nc)%num_soilc, filter(nc)%soilc)
@@ -247,7 +247,7 @@
   ! ============================================================================
   
   call t_startf(&apos;ndep_interp&apos;)
-  if (use_cn) then
+  if (use_cn .and. .NOT. use_ed) then
      ! PET: switching CN timestep
      call ndep_interp(bounds_proc)
      call CNFireInterp(bounds_proc)
Index: main/histFldsMod.F90
===================================================================
--- main/histFldsMod.F90	(revision 60800)
+++ main/histFldsMod.F90	(working copy)
@@ -261,7 +261,7 @@
     ! End new lake fields
 
     ! Allow active layer fields to be optionally output even if not running CN
-    if (.not. use_cn) then
+    if (.not. use_cn .and. .NOT. use_ed ) then
        call hist_addfld1d (fname=&apos;ALT&apos;, units=&apos;m&apos;, &amp;
             avgflag=&apos;A&apos;, long_name=&apos;current active layer thickness&apos;, &amp;
             ptr_col=cps%alt, default=&apos;inactive&apos;)
@@ -1326,7 +1326,7 @@
                avgflag=&apos;A&apos;, long_name=&apos;lagged saturation status of layer in unsat. zone&apos;, &amp;
                ptr_col=cch4%layer_sat_lag)
 
-          if (use_cn) then
+          if (use_cn .and. .NOT. use_ed ) then
              call hist_addfld_decomp (fname=&apos;FPHR&apos;//trim(vr_suffix), units=&apos;unitless&apos;, type2d=&apos;levdcmp&apos;, &amp;
                   avgflag=&apos;A&apos;, long_name=&apos;fraction of potential HR due to N limitation&apos;, &amp;
                   ptr_col=cch4%fphr)
@@ -1392,7 +1392,7 @@
     end if ! CH4
 
 
-    if (use_cn) then
+    if (use_cn .and. .NOT. use_ed ) then
 
        call hist_addfld2d (fname=&apos;SOILPSI&apos;, units=&apos;MPa&apos;, type2d=&apos;levgrnd&apos;, &amp;
             avgflag=&apos;A&apos;, long_name=&apos;soil water potential in each soil layer&apos;, &amp;</thetext>
  </long_desc><long_desc isprivate="0" >
    <commentid>6239</commentid>
    <comment_count>3</comment_count>
    <who name="Erik Kluzek">erik</who>
    <bug_when>2014-06-25 14:01:11 -0600</bug_when>
    <thetext>I did fix the issue in comment 1, in clm4_6_00, so that you can run ED with SP.</thetext>
  </long_desc><long_desc isprivate="0" >
    <commentid>7595</commentid>
    <comment_count>4</comment_count>
    <who name="Erik Kluzek">erik</who>
    <bug_when>2016-07-08 09:59:41 -0600</bug_when>
    <thetext>Add Charlie to this bug. We are going to get this going on the NGEE-T repo first, before bringing to the CLM trunk.</thetext>
  </long_desc>
      
      

    </bug>
    <bug>
          <bug_id>2025</bug_id>
          
          <creation_ts>2014-08-12 11:02:51 -0600</creation_ts>
          <short_desc>Crop simulations, do not properly ignore year when picking initial conditions</short_desc>
          <delta_ts>2017-06-13 15:30:55 -0600</delta_ts>
          <reporter_accessible>1</reporter_accessible>
          <cclist_accessible>1</cclist_accessible>
          <classification_id>1</classification_id>
          <classification>Unclassified</classification>
          <product>CCSM/CESM CLM</product>
          <component>CLM 5.0</component>
          <version>unspecified</version>
          <rep_platform>All</rep_platform>
          <op_sys>All</op_sys>
          <bug_status>ASSIGNED</bug_status>
          <resolution></resolution>
          
          
          <bug_file_loc></bug_file_loc>
          <status_whiteboard></status_whiteboard>
          <keywords></keywords>
          <priority>P2</priority>
          <bug_severity>normal</bug_severity>
          <target_milestone>CLM5</target_milestone>
          
          
          <everconfirmed>1</everconfirmed>
          <reporter name="Erik Kluzek">erik</reporter>
          <assigned_to name="Erik Kluzek">erik</assigned_to>
          <cc>dlawren</cc>
    
    <cc>muszala</cc>
    
    <cc>mvertens</cc>
    
    <cc>rfisher</cc>
    
    <cc>sacks</cc>
    
    <cc>slevis</cc>
          
          <cf_fixedinversion></cf_fixedinversion>

      

      

      

          <comment_sort_order>oldest_to_newest</comment_sort_order>  
          <long_desc isprivate="0" >
    <commentid>6311</commentid>
    <comment_count>0</comment_count>
    <who name="Erik Kluzek">erik</who>
    <bug_when>2014-08-12 11:02:51 -0600</bug_when>
    <thetext>Previously, when running with CROP on, we would set the flag to build-namelist to ignore the year when picking an initial condition (ID) file to use. Currently that doesn&apos;t happen by default when the model is run. There is the following vestige of that in scripts...

&lt;CLM_BLDNML_OPTS compset=&quot;%CNCR&quot;&gt;-ignore_ic_year&lt;/CLM_BLDNML_OPTS&gt;

but, it can NEVER be matched, so it doesn&apos;t do anything. And the logic in clm.buildnml.csh doesn&apos;t turn it on either (nor does build-namelist). The above field goes way back to when the new compsets were introduced by Mariana April of 2013.

Potentially, adding the correct line to scripts, would change answers as it makes it more likely that there are IC files that you can match. From looking at the clm4_5 namelist_defaults file, I do think it would match more IC files, as there are several files with an IC date with a year of &quot;0001&quot;. CLM4.0 just has one crop IC file with a year of &quot;2000&quot;, so probably wouldn&apos;t make a difference.</thetext>
  </long_desc><long_desc isprivate="0" >
    <commentid>8074</commentid>
    <comment_count>1</comment_count>
    <who name="Bill Sacks">sacks</who>
    <bug_when>2017-06-13 15:30:55 -0600</bug_when>
    <thetext>I&apos;m confused about the status of this bug. The line in config_compsets.xml referenced in the original report (%CNCR) no longer seems to be there. Should this issue be closed? Or is there something else still responsible for this problem?

Note that we have this confusing and seemingly-wrong statement in CLM&apos;s config_component.xml:

  &lt;!-- CLM_BLDNML_OPTS is not additive, we must list all possible combinations --&gt;
  &lt;!-- ERROR: the node below is never matched, see bug 2025 --&gt;
  &lt;entry id=&quot;CLM_BLDNML_OPTS&quot;&gt;

I think that ERROR message is wrong.</thetext>
  </long_desc>
      
      

    </bug>
    <bug>
          <bug_id>2027</bug_id>
          
          <creation_ts>2014-08-15 15:54:33 -0600</creation_ts>
          <short_desc>Balance check error with the new B1850BPRPL45BGC compset</short_desc>
          <delta_ts>2017-05-02 13:45:04 -0600</delta_ts>
          <reporter_accessible>1</reporter_accessible>
          <cclist_accessible>1</cclist_accessible>
          <classification_id>1</classification_id>
          <classification>Unclassified</classification>
          <product>CCSM/CESM CLM</product>
          <component>CLM 5.0</component>
          <version>CESM1.2.z Release</version>
          <rep_platform>PC</rep_platform>
          <op_sys>Linux</op_sys>
          <bug_status>ASSIGNED</bug_status>
          <resolution></resolution>
          
          
          <bug_file_loc></bug_file_loc>
          <status_whiteboard></status_whiteboard>
          <keywords></keywords>
          <priority>P2</priority>
          <bug_severity>normal</bug_severity>
          <target_milestone>CLM5</target_milestone>
          <dependson>2026</dependson>
          <blocked>2310</blocked>
    
    <blocked>2439</blocked>
    
    <blocked>2048</blocked>
          <everconfirmed>1</everconfirmed>
          <reporter name="Erik Kluzek">erik</reporter>
          <assigned_to name="Erik Kluzek">erik</assigned_to>
          <cc>dlawren</cc>
    
    <cc>jshollen</cc>
    
    <cc>klindsay</cc>
    
    <cc>muszala</cc>
    
    <cc>mvertens</cc>
    
    <cc>rfisher</cc>
    
    <cc>sacks</cc>
          
          <cf_fixedinversion></cf_fixedinversion>

      

      

      

          <comment_sort_order>oldest_to_newest</comment_sort_order>  
          <long_desc isprivate="0" >
    <commentid>6323</commentid>
    <comment_count>0</comment_count>
    <who name="Erik Kluzek">erik</who>
    <bug_when>2014-08-15 15:54:33 -0600</bug_when>
    <thetext>We added a new compset B1850BPRPL45BGC that blows up shortly after initialization with a balance check error.

 300: memory_write: model date =    10101   82800 memory =     272.46 MB (highwater)         -0.00 MB (usage)  (pe=  300 comps= OCN)
 300: memory_write: model date =    10101   84600 memory =     272.46 MB (highwater)         -0.00 MB (usage)  (pe=  300 comps= OCN)
 300: memory_write: model date =    10102       0 memory =     272.46 MB (highwater)         -0.00 MB (usage)  (pe=  300 comps= OCN)
 102: WARNING:  snow balance error
 100: WARNING:  snow balance error
 100:forrtl: severe (40): recursive I/O operation, unit 6, file unknown
 100:Image              PC                Routine            Line        Source
 100:libirc.so          00002AE45FB70A1E  Unknown               Unknown  Unknown
 100:libirc.so          00002AE45FB6F4B6  Unknown               Unknown  Unknown
 100:cesm.exe           000000000237A6F2  Unknown               Unknown  Unknown
 100:cesm.exe           00000000022FB33C  Unknown               Unknown  Unknown
 100:cesm.exe           000000000235542C  Unknown               Unknown  Unknown
 100:cesm.exe           0000000001CBCE47  shr_sys_mod_mp_pr         498  shr_sys_mod.F90
 100:cesm.exe           0000000001CBD590  shr_sys_mod_mp_sh         280  shr_sys_mod.F90
 100:cesm.exe           0000000001101A2B  decompmod_mp_get_         209  decompMod.F90
 100:cesm.exe           00000000013E02A1  getglobalvaluesmo          44  GetGlobalValuesMod.F90
 100:cesm.exe           00000000012467B6  balancecheckmod_m         439  BalanceCheckMod.F90
 100:cesm.exe           0000000000FC79BA  clm_driver_mp_clm         544  clm_driver.F90
 100:libiomp5.so        00002AE46003D4F3  Unknown               Unknown  Unknown
 102:forrtl: severe (40): recursive I/O operation, unit 6, file unknown
 102:Image              PC                Routine            Line        Source
 102:libirc.so          00002B0CA5E86A1E  Unknown               Unknown  Unknown
 102:libirc.so          00002B0CA5E854B6  Unknown               Unknown  Unknown
 102:cesm.exe           000000000237A6F2  Unknown               Unknown  Unknown
 102:cesm.exe           00000000022FB33C  Unknown               Unknown  Unknown
 102:cesm.exe           000000000235542C  Unknown               Unknown  Unknown
 102:cesm.exe           0000000001CBCE47  shr_sys_mod_mp_pr         498  shr_sys_mod.F90
 102:cesm.exe           0000000001CBD590  shr_sys_mod_mp_sh         280  shr_sys_mod.F90
 102:cesm.exe           0000000001101A2B  decompmod_mp_get_         209  decompMod.F90
 102:cesm.exe           00000000013E02A1  getglobalvaluesmo          44  GetGlobalValuesMod.F90
 102:cesm.exe           00000000012467B6  balancecheckmod_m         439  BalanceCheckMod.F90
 102:cesm.exe           0000000000FC79BA  clm_driver_mp_clm         544  clm_driver.F90
 102:libiomp5.so        00002B0CA63534F3  Unknown               Unknown  Unknown
 100:INFO: 0031-306  pm_atexit: pm_exit_value is 40.
 102:INFO: 0031-306  pm_atexit: pm_exit_value is 40.

This is with cesm1_3_alpha12b externals and

scripts                            https://svn-ccsm-models.cgd.ucar.edu/scripts/trunk_tags/scripts4_140814a
scripts/ccsm_utils/Machines        https://svn-ccsm-models.cgd.ucar.edu/Machines/trunk_tags/Machines_140811


out of the box for a SMS.f09_g16.B1850BPRPL45BGC.yellowstone_intel case.</thetext>
  </long_desc><long_desc isprivate="0" >
    <commentid>6324</commentid>
    <comment_count>1</comment_count>
    <who name="Erik Kluzek">erik</who>
    <bug_when>2014-08-15 16:42:00 -0600</bug_when>
    <thetext>The abort seems to be on this line in BalanceCheck...

       write(iulog,*)&apos;nstep= &apos;,nstep, &amp;
            &apos; local indexc= &apos;,indexc, &amp;
            &apos; global indexc= &apos;,GetGlobalIndex(decomp_index=indexc, clmlevel=namec)

But, then GetGlobalIndex calls get_proc_bounds, and ends up trying to 
execute the line...

#ifdef _OPENMP
     if ( OMP_GET_NUM_THREADS() &gt; 1 )then
        call shr_sys_abort( trim(subname)//&apos; ERROR: Calling from inside  a threaded region&apos;)
     end if
#endif

so then you are trying to do a shr_sys_abort that writes out an error message that is itself a write statement. So the OS blows up in your face.

So one change is to do send the results of GetGlobalIndex to an integer temporary that you write out. The other issue is that this is being done from within a threaded region and it shouldn&apos;t be.

So another way to get around this would be change the PE layout to NOT be threaded. Right now it&apos;s sending 2 threads to every component. I&apos;m trying a case with only 1 thread per component, and we&apos;ll see what it does.</thetext>
  </long_desc><long_desc isprivate="0" >
    <commentid>6325</commentid>
    <comment_count>2</comment_count>
    <who name="Erik Kluzek">erik</who>
    <bug_when>2014-08-15 17:25:06 -0600</bug_when>
    <thetext>Using a non-threaded layout (300x1) the compset is now running. The snow balance warning at the beginning is...

 275: WARNING:  snow balance error
 275: nstep=            0  local indexc=       233779  global indexc=       167423
 275:  ctype=           75  ltype=            9  errh2osno=   9.359429059187598E-003
 278: WARNING:  snow balance error
 278: nstep=            0  local indexc=       236445  global indexc=       150425
 278:  ctype=           75  ltype=            9  errh2osno=   9.917991872539743E-003
   1: Opened file

Note, that I also made the change in 2026, as I thought that might also be a problem here as well.</thetext>
  </long_desc><long_desc isprivate="0" >
    <commentid>6326</commentid>
    <comment_count>3</comment_count>
    <who name="Erik Kluzek">erik</who>
    <bug_when>2014-08-15 19:31:06 -0600</bug_when>
    <thetext>Yep, non-threaded layout PASS&apos;es...

PASS  SMS_D_P300x1.f09_g16.B1850BPRPL45BGC.yellowstone_intel 
PASS  SMS_D_P300x1.f09_g16.B1850BPRPL45BGC.yellowstone_intel.memleak</thetext>
  </long_desc><long_desc isprivate="0" >
    <commentid>6327</commentid>
    <comment_count>4</comment_count>
    <who name="Erik Kluzek">erik</who>
    <bug_when>2014-08-16 14:25:26 -0600</bug_when>
    <thetext>IT turns out the aux_clm_short tests on goldbach for intel, nag and pgi show this same problem with the tests...

PET_P16x2_D.f10_f10.I1850CLM45BGC.goldbach_nag.clm-ciso

(for each compiler in turn).

For the nag compiler, the build of MCT fails, because of an issue with the gcc compiler...

configure:2398: checking whether the C compiler works
configure:2420: gcc  -g  -Wl,--as-needed,--allow-shlib-undefined  -DLINUX  -DMCT_INTERFACE -DHAVE_MPI -DTHREADED_OMP -DFORTRANUNDERSCORE -DNO_CRAY_POINTERS -DNO_SHR_VMATH  -DNO_C_SIZEOF  -DLINUX -DCPRNAG  -DHAVE_SLASHPROC -I.. -I.  -I/scratch/cluster/erik/sharedlibroot.140814-235435/nag/openmpi/debug/threads/include -I/scratch/cluster/erik/sharedlibroot.140814-235435/nag/openmpi/debug/threads/MCT/noesmf/a1l1r1i1o1g1w1/csm_share -I/usr/local/netcdf-gcc-nag/include -I/usr/local/openmpi-gcc-nag/include -I/scratch/cluster/erik/sharedlibroot.140814-235435/nag/openmpi/debug/threads/include -I/fs/cgd/data0/erik/clm_beta12ext/models/csm_share/shr  -L/home/santos/lib/fake_omp -lfake_omp -Wl,-Wl,,--rpath=/home/santos/lib/fake_omp  conftest.c -L/usr/local/netcdf_c-4.3.0_f-4.4-beta1-gcc-g++-4.4.7-3-nag-5.3.1-907/lib -lnetcdff -L/usr/local/hdf5/lib -lnetcdf -lnetcdf -L/usr/local/nag-5.3.1-907/lib/NAG_Fortran -lf53 &gt;&amp;5
/usr/bin/ld: unrecognized option &apos;-Wl&apos;
/usr/bin/ld: use the --help option for usage information
collect2: ld returned 1 exit status</thetext>
  </long_desc><long_desc isprivate="0" >
    <commentid>6329</commentid>
    <comment_count>5</comment_count>
    <who name="Erik Kluzek">erik</who>
    <bug_when>2014-08-22 10:36:20 -0600</bug_when>
    <thetext>OK, I thought this was coming from a non-threaded region -- but it&apos;s NOT. Balance check is inside a threaded loop in clm_driver. So I think this is correctly identifying a problem.</thetext>
  </long_desc><long_desc isprivate="0" >
    <commentid>6334</commentid>
    <comment_count>6</comment_count>
    <who name="Erik Kluzek">erik</who>
    <bug_when>2014-08-22 17:53:40 -0600</bug_when>
    <thetext>OK, I was able to make some changes to the threaded version to get it to work. The problem is that GetGlobalIndex is figuring out the bounds (and assuming processor bounds, over clump bounds), rather than having the bounds sent into it. If you send bounds into GetGlobalIndex, it works. That ended up being a lot harder than I wanted it to, but I was able to do that, and now it works. The code diff is about a thousand lines, so I won&apos;t show the total, but here&apos;s an example...


-  function initial_template_col_soil(c_new) result(c_template)
+  function initial_template_col_soil(bounds, c_new) result(c_template)
     !
     ! !DESCRIPTION:
     ! Find column to use as a template for a vegetated column that has newly become active.
@@ -148,8 +148,9 @@
     use clm_varcon, only : ispval
     !
     ! !ARGUMENTS:
-    integer              :: c_template ! function result
-    integer , intent(in) :: c_new        ! column index that needs initialization
+    type(bounds_type) , intent(in) :: bounds     ! bounds
+    integer                        :: c_template ! function result
+    integer           , intent(in) :: c_new      ! column index that needs initialization
     !
     ! !LOCAL VARIABLES:
     
@@ -159,7 +160,7 @@
     if (col%wtgcell(c_new) &gt; 0._r8) then
        write(iulog,*) subname// &apos; ERROR: Expectation is that the only vegetated columns that&amp;
             &amp; can newly become active are ones with 0 weight on the grid cell&apos;
-       call endrun(decomp_index=c_new, clmlevel=namec, msg=errMsg(__FILE__, __LINE__))
+       call endrun(bounds, decomp_index=c_new, clmlevel=namec, msg=errMsg(__FILE__, __LINE__))
     end if
 
     c_template = ispval


Bill might be concerned, that the above might break unit-tests, but I will look at and make sure they can still work.</thetext>
  </long_desc><long_desc isprivate="0" >
    <commentid>6519</commentid>
    <comment_count>7</comment_count>
    <who name="Erik Kluzek">erik</who>
    <bug_when>2014-11-18 13:19:17 -0700</bug_when>
    <thetext>This issue shows up in cesm1_3_alpha14d with the following tests that fail...

FAIL  SMS_D.f09_g16.BPIPDC5L45BGC.edison_intel 

FAIL  ERI_PT.f09_g16.B1850C5L45BGC.edison_intel 

RUN   ERS.f09_g16.BPIPDC5L45BGC.edison_intel.GC.cesm1_3_alpha14d

RUN   ERS_PT.f09_g16.BRCP85C5L45BGC.edison_intel.GC.cesm1_3_alpha14d

and the same tests fail on yellowstone_intel.</thetext>
  </long_desc><long_desc isprivate="0" >
    <commentid>6554</commentid>
    <comment_count>8</comment_count>
    <who name="Bill Sacks">sacks</who>
    <bug_when>2014-11-20 14:40:36 -0700</bug_when>
    <thetext>I think the solution is to add an optional argument to get_proc_bounds, like &apos;force&apos;, and if that&apos;s provided, then it gets the proc bounds even if you&apos;re in a threaded region.</thetext>
  </long_desc><long_desc isprivate="0" >
    <commentid>6555</commentid>
    <comment_count>9</comment_count>
    <who name="Bill Sacks">sacks</who>
    <bug_when>2014-11-20 14:41:02 -0700</bug_when>
    <thetext>Mariana put a temporary workaround in her branch to become r097.</thetext>
  </long_desc><long_desc isprivate="0" >
    <commentid>6789</commentid>
    <comment_count>10</comment_count>
    <who name="Erik Kluzek">erik</who>
    <bug_when>2015-04-03 15:32:07 -0600</bug_when>
    <thetext>The new test: ERP_P15x2_D_Ld5.f10_f10.I1850CLM45BGC.goldbach_nag.clm-ciso shows this same problem.</thetext>
  </long_desc><long_desc isprivate="0" >
    <commentid>7293</commentid>
    <comment_count>11</comment_count>
    <who name="Erik Kluzek">erik</who>
    <bug_when>2016-01-07 16:14:35 -0700</bug_when>
    <thetext>Still seems to be an issue on hobart_nag as of clm4_5_6_r158, with the following notes in expected fails file.

&lt;entry bugz=&quot;2027&quot; &gt;FAIL PET_P12x2_D.f10_f10.I1850CLM45BGC.hobart_intel.clm-ciso&lt;/entry&gt;

   &lt;entry bugz=&quot;2027&quot; &gt;CFAIL PET_P12x2_D.f10_f10.I1850CLM45BGC.hobart_nag.clm-ciso&lt;/entry&gt;

   &lt;entry bugz=&quot;2027&quot; &gt;FAIL PET_P12x2_D.f10_f10.I1850CLM45BGC.hobart_pgi.clm-ciso&lt;/entry&gt;

However, we removed all the threaded ciso tests from hobart_nag.

But, we do have a threaded test on yellowstone that is working (as of clm4_5_7_r164)...

ERP_P15x2_D_Ld5.f10_f10.I1850CLM45BGC.yellowstone_pgi.clm-ciso</thetext>
  </long_desc>
      
      

    </bug>
    <bug>
          <bug_id>2047</bug_id>
          
          <creation_ts>2014-09-19 11:27:16 -0600</creation_ts>
          <short_desc>Example 1.7 typo</short_desc>
          <delta_ts>2016-08-22 14:27:18 -0600</delta_ts>
          <reporter_accessible>1</reporter_accessible>
          <cclist_accessible>1</cclist_accessible>
          <classification_id>1</classification_id>
          <classification>Unclassified</classification>
          <product>CCSM/CESM CLM</product>
          <component>CLM 5.0</component>
          <version>CESM1.1.z Release</version>
          <rep_platform>PC</rep_platform>
          <op_sys>All</op_sys>
          <bug_status>NEW</bug_status>
          <resolution></resolution>
          
          
          <bug_file_loc>http://www.cesm.ucar.edu/models/cesm1.1/clm/models/lnd/clm/doc/UsersGuide/clm_ug.pdf</bug_file_loc>
          <status_whiteboard></status_whiteboard>
          <keywords></keywords>
          <priority>P3</priority>
          <bug_severity>minor</bug_severity>
          <target_milestone>CLM5</target_milestone>
          
          
          <everconfirmed>1</everconfirmed>
          <reporter name="Tim Hoar">thoar</reporter>
          <assigned_to name="Erik Kluzek">erik</assigned_to>
          <cc>rfisher</cc>
    
    <cc>sacks</cc>
          
          <cf_fixedinversion></cf_fixedinversion>

      

      

      

          <comment_sort_order>oldest_to_newest</comment_sort_order>  
          <long_desc isprivate="0" >
    <commentid>6382</commentid>
    <comment_count>0</comment_count>
    <who name="Tim Hoar">thoar</who>
    <bug_when>2014-09-19 11:27:16 -0600</bug_when>
    <thetext>Example 1.7 in the CLM 1_1 users guide has a typo. (page 66)
http://www.cesm.ucar.edu/models/cesm1.1/clm/models/lnd/clm/doc/UsersGuide/clm_ug.pdf

The commentary indicates you set hist_type1d_pertape  but the example has hist_type2d_pertape (which doesn&apos;t exist).


Chapter 1. How to customize the configuration for a case with CLM
Sometimes it’s important to understand how different land-units or vegetation types are acting within a
grid-cell. The way to do this is to output history files as a 1D-vector of all land-units and vegetation
types. In order to display this, you’ll need to do extensive post-processing to make sense of the output.
Often you may only be interested in a few points, so once you figure out the 1D indices for the grid-cells
of interest, you can easily view that data. 1D vector output can also be useful for single point datasets,
since it’s then obvious that all data is for the same grid cell.
To do this you use hist_dov2xy which is an array of rank six for each history stream. Set it to
.false. if you want one of the history streams to be a 1D vector. You can also use
hist_type1d_pertape if you want to average over all the: Plant-Function-Types, columns, land-units,
or grid-cells. A sample user namelist user_nl_clm leaving the primary monthly files as 2D, and then
doing grid-cell (GRID), column (COLS), and no averaging over auxiliary tapes output daily for a single
field (ground temperature) is:
Example 1-7. Example user_nl_clm namelist outputting some files in 1D Vector format
hist_fincl2 = ’TG’
hist_fincl3 = ’TG’
hist_fincl4 = ’TG’
hist_fincl5 = ’TG’
hist_fincl6 = ’TG’
hist_dov2xy = .true., .false., .false., .false.
hist_type2d_pertape = ’ ’, ’GRID’, ’COLS’, ’ ’
hist_nhtfrq = 0, -24, -24, -24</thetext>
  </long_desc><long_desc isprivate="0" >
    <commentid>7664</commentid>
    <comment_count>1</comment_count>
    <who name="Bill Sacks">sacks</who>
    <bug_when>2016-08-22 14:27:18 -0600</bug_when>
    <thetext>Won&apos;t fix old user&apos;s guide, but want to make sure this is addressed in the new (CLM5) user&apos;s guide, if it isn&apos;t already.</thetext>
  </long_desc>
      
      

    </bug>
    <bug>
          <bug_id>2051</bug_id>
          
          <creation_ts>2014-09-26 14:16:40 -0600</creation_ts>
          <short_desc>dtime declarations are inconsistent</short_desc>
          <delta_ts>2016-08-26 06:33:34 -0600</delta_ts>
          <reporter_accessible>1</reporter_accessible>
          <cclist_accessible>1</cclist_accessible>
          <classification_id>1</classification_id>
          <classification>Unclassified</classification>
          <product>CCSM/CESM CLM</product>
          <component>CLM 5.0</component>
          <version>unspecified</version>
          <rep_platform>All</rep_platform>
          <op_sys>All</op_sys>
          <bug_status>NEW</bug_status>
          <resolution></resolution>
          
          
          <bug_file_loc></bug_file_loc>
          <status_whiteboard></status_whiteboard>
          <keywords></keywords>
          <priority>P3</priority>
          <bug_severity>normal</bug_severity>
          <target_milestone>CLM5</target_milestone>
          
          
          <everconfirmed>1</everconfirmed>
          <reporter name="Stefan">muszala</reporter>
          <assigned_to name="Erik Kluzek">erik</assigned_to>
          <cc>andre</cc>
    
    <cc>rfisher</cc>
    
    <cc>sacks</cc>
          
          <cf_fixedinversion></cf_fixedinversion>

      

      

      

          <comment_sort_order>oldest_to_newest</comment_sort_order>  
          <long_desc isprivate="0" >
    <commentid>6398</commentid>
    <comment_count>0</comment_count>
    <who name="Stefan">muszala</who>
    <bug_when>2014-09-26 14:16:40 -0600</bug_when>
    <thetext>sometimes dtime is declared as an integer, sometimes as a real(r8) but it is always set using the return value from get_step_size(), which returns the type of integer.  I&apos;ve also noticed casts of dtime from real to integer which don&apos;t need to be there.

This very basic use of dtime needs clean up in CLM.

one example:

main/clm_initializeMod.F90:    real(r8)              :: dtime        ! time step increment (sec)
main/clm_initializeMod.F90:    dtime = get_step_size()
main/clm_initializeMod.F90:    caldaym1 = get_curr_calday(offset=-int(dtime))</thetext>
  </long_desc><long_desc isprivate="0" >
    <commentid>7666</commentid>
    <comment_count>1</comment_count>
    <who name="Bill Sacks">sacks</who>
    <bug_when>2016-08-22 14:36:21 -0600</bug_when>
    <thetext>Ben Andre suggests: we should have a get_step_size_real and get_step_size_int.

It feels like the biggest practical problem in what we have now are the uses of int(dtime): if dtime (real) were 1799.9999999, then int(dtime) would be 1799. So if we don&apos;t do Ben&apos;s suggestion, then at the very least we should change int(dtime) to nint(dtime).</thetext>
  </long_desc><long_desc isprivate="0" >
    <commentid>7672</commentid>
    <comment_count>2</comment_count>
    <who name="Bill Sacks">sacks</who>
    <bug_when>2016-08-26 06:32:44 -0600</bug_when>
    <thetext>On a branch that will come to the trunk soon, I&apos;m adding get_step_size_real. I&apos;m keeping the int-valued version as get_step_size for now so that I don&apos;t need to change a bunch of existing code.</thetext>
  </long_desc>
      
      

    </bug>
    <bug>
          <bug_id>2057</bug_id>
          
          <creation_ts>2014-10-13 15:13:12 -0600</creation_ts>
          <short_desc>Problem with getregional_datasets.ncl for lists of files at more than one resolution</short_desc>
          <delta_ts>2016-08-22 14:36:40 -0600</delta_ts>
          <reporter_accessible>1</reporter_accessible>
          <cclist_accessible>1</cclist_accessible>
          <classification_id>1</classification_id>
          <classification>Unclassified</classification>
          <product>CCSM/CESM CLM</product>
          <component>CLM 5.0</component>
          <version>unspecified</version>
          <rep_platform>All</rep_platform>
          <op_sys>All</op_sys>
          <bug_status>ASSIGNED</bug_status>
          <resolution></resolution>
          
          
          <bug_file_loc></bug_file_loc>
          <status_whiteboard></status_whiteboard>
          <keywords></keywords>
          <priority>P4</priority>
          <bug_severity>normal</bug_severity>
          <target_milestone>CLM5</target_milestone>
          
          
          <everconfirmed>1</everconfirmed>
          <reporter name="Erik Kluzek">erik</reporter>
          <assigned_to name="Erik Kluzek">erik</assigned_to>
          <cc>dlawren</cc>
    
    <cc>muszala</cc>
    
    <cc>oleson</cc>
    
    <cc>rfisher</cc>
    
    <cc>sacks</cc>
          
          <cf_fixedinversion></cf_fixedinversion>

      

      

      

          <comment_sort_order>oldest_to_newest</comment_sort_order>  
          <long_desc isprivate="0" >
    <commentid>6428</commentid>
    <comment_count>0</comment_count>
    <who name="Erik Kluzek">erik</who>
    <bug_when>2014-10-13 15:13:12 -0600</bug_when>
    <thetext>getregional_datasets.ncl assumes that ALL of the files that are entered in the list are at the same resolution and at the same resolution as the fatmlndfrc domain file that is entered. If this is NOT the case it will create a box of the wrong size/position for the files that are a different resolution.

So getregional_datasets.ncl, should ensure the files are all the same and also match the input fatmlndfrc domain file.</thetext>
  </long_desc><long_desc isprivate="0" >
    <commentid>6538</commentid>
    <comment_count>1</comment_count>
    <who name="Erik Kluzek">erik</who>
    <bug_when>2014-11-20 10:52:08 -0700</bug_when>
    <thetext>I added a simple check that the dimensions are at least consistent. And I split out the file lists appropriately. Checking the lat/long will take more work.

So this was partial fixed in clm4_5_1_r096</thetext>
  </long_desc>
      
      

    </bug>
    <bug>
          <bug_id>2058</bug_id>
          
          <creation_ts>2014-10-13 15:42:05 -0600</creation_ts>
          <short_desc>Create humanIndexMod method to encapsulate humanindex calculations</short_desc>
          <delta_ts>2014-10-13 15:42:05 -0600</delta_ts>
          <reporter_accessible>1</reporter_accessible>
          <cclist_accessible>1</cclist_accessible>
          <classification_id>1</classification_id>
          <classification>Unclassified</classification>
          <product>CCSM/CESM CLM</product>
          <component>CLM 5.0</component>
          <version>unspecified</version>
          <rep_platform>All</rep_platform>
          <op_sys>All</op_sys>
          <bug_status>ASSIGNED</bug_status>
          <resolution></resolution>
          
          
          <bug_file_loc></bug_file_loc>
          <status_whiteboard></status_whiteboard>
          <keywords></keywords>
          <priority>P2</priority>
          <bug_severity>normal</bug_severity>
          <target_milestone>CLM5</target_milestone>
          
          
          <everconfirmed>1</everconfirmed>
          <reporter name="Erik Kluzek">erik</reporter>
          <assigned_to name="Erik Kluzek">erik</assigned_to>
          <cc>dlawren</cc>
    
    <cc>oleson</cc>
          
          <cf_fixedinversion></cf_fixedinversion>

      

      

      

          <comment_sort_order>oldest_to_newest</comment_sort_order>  
          <long_desc isprivate="0" >
    <commentid>6429</commentid>
    <comment_count>0</comment_count>
    <who name="Erik Kluzek">erik</who>
    <bug_when>2014-10-13 15:42:05 -0600</bug_when>
    <thetext>Add methods to humanIndexMod to calculate the list of human index calculations...

calc_human_stress_indices()

run_indices_on_filter( numfilter, filter, … )</thetext>
  </long_desc>
      
      

    </bug>
    <bug>
          <bug_id>2059</bug_id>
          
          <creation_ts>2014-10-13 15:45:38 -0600</creation_ts>
          <short_desc>Move urban building constants to UrbBuildTempOleson2015Mod</short_desc>
          <delta_ts>2014-10-13 15:45:38 -0600</delta_ts>
          <reporter_accessible>1</reporter_accessible>
          <cclist_accessible>1</cclist_accessible>
          <classification_id>1</classification_id>
          <classification>Unclassified</classification>
          <product>CCSM/CESM CLM</product>
          <component>CLM 5.0</component>
          <version>unspecified</version>
          <rep_platform>PC</rep_platform>
          <op_sys>All</op_sys>
          <bug_status>ASSIGNED</bug_status>
          <resolution></resolution>
          
          
          <bug_file_loc></bug_file_loc>
          <status_whiteboard></status_whiteboard>
          <keywords></keywords>
          <priority>P2</priority>
          <bug_severity>normal</bug_severity>
          <target_milestone>CLM5</target_milestone>
          
          
          <everconfirmed>1</everconfirmed>
          <reporter name="Erik Kluzek">erik</reporter>
          <assigned_to name="Erik Kluzek">erik</assigned_to>
          <cc>dlawren</cc>
    
    <cc>oleson</cc>
          
          <cf_fixedinversion></cf_fixedinversion>

      

      

      

          <comment_sort_order>oldest_to_newest</comment_sort_order>  
          <long_desc isprivate="0" >
    <commentid>6430</commentid>
    <comment_count>0</comment_count>
    <who name="Erik Kluzek">erik</who>
    <bug_when>2014-10-13 15:45:38 -0600</bug_when>
    <thetext>Move the urban building constants in clm_varcon.F90 to UrbBuildTempOleson2015Mod. Eventually should be on params file.</thetext>
  </long_desc>
      
      

    </bug>
    <bug>
          <bug_id>2060</bug_id>
          
          <creation_ts>2014-10-13 15:51:57 -0600</creation_ts>
          <short_desc>Create UrbBuildTempOleson2013Mod.F90 module for older CLM4.5 building temperature</short_desc>
          <delta_ts>2014-10-13 15:51:57 -0600</delta_ts>
          <reporter_accessible>1</reporter_accessible>
          <cclist_accessible>1</cclist_accessible>
          <classification_id>1</classification_id>
          <classification>Unclassified</classification>
          <product>CCSM/CESM CLM</product>
          <component>CLM 5.0</component>
          <version>unspecified</version>
          <rep_platform>All</rep_platform>
          <op_sys>All</op_sys>
          <bug_status>ASSIGNED</bug_status>
          <resolution></resolution>
          
          
          <bug_file_loc></bug_file_loc>
          <status_whiteboard></status_whiteboard>
          <keywords></keywords>
          <priority>P2</priority>
          <bug_severity>normal</bug_severity>
          <target_milestone>CLM5</target_milestone>
          
          
          <everconfirmed>1</everconfirmed>
          <reporter name="Erik Kluzek">erik</reporter>
          <assigned_to name="Erik Kluzek">erik</assigned_to>
          <cc>dlawren</cc>
    
    <cc>oleson</cc>
          
          <cf_fixedinversion></cf_fixedinversion>

      

      

      

          <comment_sort_order>oldest_to_newest</comment_sort_order>  
          <long_desc isprivate="0" >
    <commentid>6431</commentid>
    <comment_count>0</comment_count>
    <who name="Erik Kluzek">erik</who>
    <bug_when>2014-10-13 15:51:57 -0600</bug_when>
    <thetext>Create a module for the older CLM4.5 building temperature. UrbBuildTempOleson2013Mod.F90

Would have cool_on, heat_on arrays as well as clm_varcon constants...

        ht_wasteheat_factor = 0.0_r8
        ac_wasteheat_factor = 0.0_r8</thetext>
  </long_desc>
      
      

    </bug>
    <bug>
          <bug_id>2068</bug_id>
          
          <creation_ts>2014-10-20 09:02:44 -0600</creation_ts>
          <short_desc>Use string to describe namelist option for urban_building_temp_method to make user-interface more clear</short_desc>
          <delta_ts>2014-10-20 09:02:44 -0600</delta_ts>
          <reporter_accessible>1</reporter_accessible>
          <cclist_accessible>1</cclist_accessible>
          <classification_id>1</classification_id>
          <classification>Unclassified</classification>
          <product>CCSM/CESM CLM</product>
          <component>CLM 5.0</component>
          <version>unspecified</version>
          <rep_platform>All</rep_platform>
          <op_sys>All</op_sys>
          <bug_status>ASSIGNED</bug_status>
          <resolution></resolution>
          
          
          <bug_file_loc></bug_file_loc>
          <status_whiteboard></status_whiteboard>
          <keywords></keywords>
          <priority>P2</priority>
          <bug_severity>normal</bug_severity>
          <target_milestone>CLM5</target_milestone>
          
          
          <everconfirmed>1</everconfirmed>
          <reporter name="Erik Kluzek">erik</reporter>
          <assigned_to name="Erik Kluzek">erik</assigned_to>
          <cc>oleson</cc>
          
          <cf_fixedinversion></cf_fixedinversion>

      

      

      

          <comment_sort_order>oldest_to_newest</comment_sort_order>  
          <long_desc isprivate="0" >
    <commentid>6464</commentid>
    <comment_count>0</comment_count>
    <who name="Erik Kluzek">erik</who>
    <bug_when>2014-10-20 09:02:44 -0600</bug_when>
    <thetext>Instead of using an integer in the namelist for urban building temperature method, use a string to make it more clear in the namelist, and then then an integer in the code (faster and ensures correct values on compilation).</thetext>
  </long_desc>
      
      

    </bug>
    <bug>
          <bug_id>2082</bug_id>
          
          <creation_ts>2014-11-02 14:26:06 -0700</creation_ts>
          <short_desc>problem with ED history files on restarts in clm4_5_1_r091</short_desc>
          <delta_ts>2016-08-22 14:42:35 -0600</delta_ts>
          <reporter_accessible>1</reporter_accessible>
          <cclist_accessible>1</cclist_accessible>
          <classification_id>1</classification_id>
          <classification>Unclassified</classification>
          <product>CCSM/CESM CLM</product>
          <component>CLM 5.0</component>
          <version>CESM1.3.z Development</version>
          <rep_platform>PC</rep_platform>
          <op_sys>All</op_sys>
          <bug_status>ASSIGNED</bug_status>
          <resolution></resolution>
          
          
          <bug_file_loc></bug_file_loc>
          <status_whiteboard></status_whiteboard>
          <keywords></keywords>
          <priority>P2</priority>
          <bug_severity>normal</bug_severity>
          <target_milestone>CLM5</target_milestone>
          
          
          <everconfirmed>1</everconfirmed>
          <reporter name="Mariana Vertenstein">mvertens</reporter>
          <assigned_to name="Ben Andre">andre</assigned_to>
          <cc>andre</cc>
    
    <cc>erik</cc>
    
    <cc>muszala</cc>
    
    <cc>rfisher</cc>
    
    <cc>sacks</cc>
          
          <cf_fixedinversion></cf_fixedinversion>

      

      

      

          <comment_sort_order>oldest_to_newest</comment_sort_order>  
          <long_desc isprivate="0" >
    <commentid>6492</commentid>
    <comment_count>0</comment_count>
    <who name="Mariana Vertenstein">mvertens</who>
    <bug_when>2014-11-02 14:26:06 -0700</bug_when>
    <thetext>I have found the that comparing the first ED history files upon restarts - they are not bit-for-bit - even though the model remains bit-for-bit and the restart test passes. In particular - for clm4_5_1_r091. As an example - if I look at the case 

ERS_D_Mmpi-serial.1x1_brazil.ICLM45CNED.yellowstone_gnu.clm-edTest

and write 1d history files daily  - I will see that upon restart (which starts from the beginning of day 7)

clm2.h0.0001-01-08-00000.nc is different between the initial and restart runs in the following fields:

 RMS GPP                              2.2001E-04            NORMALIZED  3.1505E-02
 RMS LITTER_OUT                       4.2088E+00            NORMALIZED  2.8284E+00
 RMS NPP                              1.1212E-04            NORMALIZED  3.2232E-02

However clm2.h0.0001-01-12-00000.nc are identical between the initial and restart runs.

The same thing holds for clm4_5_1_r091 with the koven refactoring  changes I have brought in. However, in this case there are now only 2 fields that are different.

 RMS GPP                              2.2001E-04            NORMALIZED  3.1505E-02
 RMS NPP                              1.1212E-04            NORMALIZED  3.2232E-02

The LITTER_OUT problem is not longer there - but the other two are still persistent.

This should be fixed - but it also points to the need to compare history files upon restart as well.</thetext>
  </long_desc>
      
      

    </bug>
    <bug>
          <bug_id>2141</bug_id>
          
          <creation_ts>2015-02-09 18:21:31 -0700</creation_ts>
          <short_desc>Precision of constants in SoilTemperature.F90 is not double</short_desc>
          <delta_ts>2017-10-31 16:05:03 -0600</delta_ts>
          <reporter_accessible>1</reporter_accessible>
          <cclist_accessible>1</cclist_accessible>
          <classification_id>1</classification_id>
          <classification>Unclassified</classification>
          <product>CCSM/CESM CLM</product>
          <component>CLM 5.0</component>
          <version>unspecified</version>
          <rep_platform>PC</rep_platform>
          <op_sys>All</op_sys>
          <bug_status>ASSIGNED</bug_status>
          <resolution></resolution>
          
          
          <bug_file_loc></bug_file_loc>
          <status_whiteboard></status_whiteboard>
          <keywords></keywords>
          <priority>P4</priority>
          <bug_severity>minor</bug_severity>
          <target_milestone>Future</target_milestone>
          
          <blocked>2336</blocked>
          <everconfirmed>1</everconfirmed>
          <reporter name="Gautam Bisht">gbisht</reporter>
          <assigned_to name="Erik Kluzek">erik</assigned_to>
          <cc>andre</cc>
    
    <cc>muszala</cc>
    
    <cc>rfisher</cc>
    
    <cc>sacks</cc>
          
          <cf_fixedinversion></cf_fixedinversion>

      

      

      

          <comment_sort_order>oldest_to_newest</comment_sort_order>  
          <long_desc isprivate="0" >
    <commentid>6718</commentid>
    <comment_count>0</comment_count>
    <who name="Gautam Bisht">gbisht</who>
    <bug_when>2015-02-09 18:21:31 -0700</bug_when>
    <thetext>The precision of a constant is incorrect at multiple locations in SoilTemperature.F90 (1 ---&gt; 1._r8). Below are the suggested modifications to fix the bug based of clm4_5_r104 tag.

&gt;hg diff
diff -r 90b9d2ff0302 models/lnd/clm/src/biogeophys/SoilTemperatureMod.F90
--- a/models/lnd/clm/src/biogeophys/SoilTemperatureMod.F90	Sat Jan 31 10:04:28 2015 -0800
+++ b/models/lnd/clm/src/biogeophys/SoilTemperatureMod.F90	Mon Feb 09 17:10:26 2015 -0800
@@ -533,7 +533,7 @@
 
          else
             if(frac_h2osfc(c) /= 0._r8) then
-               t_grnd(c) = (1 - frac_h2osfc(c)) * t_soisno(c,1) + frac_h2osfc(c) * t_h2osfc(c)
+               t_grnd(c) = (1._r8 - frac_h2osfc(c)) * t_soisno(c,1) + frac_h2osfc(c) * t_h2osfc(c)
             else
                t_grnd(c) = t_soisno(c,1)
             end if
@@ -786,7 +786,7 @@
             else if (lun%itype(l) /= istwet .AND. lun%itype(l) /= istice .AND. lun%itype(l) /= istice_mec &amp;
                  .AND. col%itype(c) /= icol_sunwall .AND. col%itype(c) /= icol_shadewall .AND. &amp;
                  col%itype(c) /= icol_roof) then
-               cv(c,j) = csol(c,j)*(1-watsat(c,j))*dz(c,j) + (h2osoi_ice(c,j)*cpice + h2osoi_liq(c,j)*cpliq)
+               cv(c,j) = csol(c,j)*(1._r8-watsat(c,j))*dz(c,j) + (h2osoi_ice(c,j)*cpice + h2osoi_liq(c,j)*cpliq)
             else if (lun%itype(l) == istwet) then 
                cv(c,j) = (h2osoi_ice(c,j)*cpice + h2osoi_liq(c,j)*cpliq)
                if (j &gt; nlevsoi) cv(c,j) = csol(c,j)*dz(c,j)
@@ -1541,21 +1541,21 @@
                if (patch%active(p)) then
                   if (.not. lun%urbpoi(l)) then
                      eflx_gnet(p) = sabg(p) + dlrad(p) &amp;
-                          + (1-frac_veg_nosno(p))*emg(c)*forc_lwrad(c) - lwrad_emit(c) &amp;
+                          + (1._r8-frac_veg_nosno(p))*emg(c)*forc_lwrad(c) - lwrad_emit(c) &amp;
                           - (eflx_sh_grnd(p)+qflx_evap_soi(p)*htvp(c))
                      ! save sabg for balancecheck, in case frac_sno is set to zero later
                      sabg_chk(p) = frac_sno_eff(c) * sabg_snow(p) + (1._r8 - frac_sno_eff(c) ) * sabg_soil(p)
 
                      eflx_gnet_snow = sabg_snow(p) + dlrad(p) &amp;
-                          + (1-frac_veg_nosno(p))*emg(c)*forc_lwrad(c) - lwrad_emit_snow(c) &amp;
+                          + (1._r8-frac_veg_nosno(p))*emg(c)*forc_lwrad(c) - lwrad_emit_snow(c) &amp;
                           - (eflx_sh_snow(p)+qflx_ev_snow(p)*htvp(c))
 
                      eflx_gnet_soil = sabg_soil(p) + dlrad(p) &amp;
-                          + (1-frac_veg_nosno(p))*emg(c)*forc_lwrad(c) - lwrad_emit_soil(c) &amp;
+                          + (1._r8-frac_veg_nosno(p))*emg(c)*forc_lwrad(c) - lwrad_emit_soil(c) &amp;
                           - (eflx_sh_soil(p)+qflx_ev_soil(p)*htvp(c))
 
                      eflx_gnet_h2osfc = sabg_soil(p) + dlrad(p) &amp;
-                          + (1-frac_veg_nosno(p))*emg(c)*forc_lwrad(c) - lwrad_emit_h2osfc(c) &amp;
+                          + (1._r8-frac_veg_nosno(p))*emg(c)*forc_lwrad(c) - lwrad_emit_h2osfc(c) &amp;
                           - (eflx_sh_h2osfc(p)+qflx_ev_h2osfc(p)*htvp(c))
                   else
                      ! For urban columns we use the net longwave radiation (eflx_lwrad_net) because of
@@ -1621,15 +1621,15 @@
                   l = patch%landunit(p)
                   if (.not. lun%urbpoi(l)) then
 
-                     eflx_gnet_top = sabg_lyr(p,lyr_top) + dlrad(p) + (1-frac_veg_nosno(p))*emg(c)*forc_lwrad(c) &amp;
+                     eflx_gnet_top = sabg_lyr(p,lyr_top) + dlrad(p) + (1._r8-frac_veg_nosno(p))*emg(c)*forc_lwrad(c) &amp;
                           - lwrad_emit(c) - (eflx_sh_grnd(p)+qflx_evap_soi(p)*htvp(c))
 
                      hs_top(c) = hs_top(c) + eflx_gnet_top*patch%wtcol(p)
 
-                     eflx_gnet_snow = sabg_lyr(p,lyr_top) + dlrad(p) + (1-frac_veg_nosno(p))*emg(c)*forc_lwrad(c) &amp;
+                     eflx_gnet_snow = sabg_lyr(p,lyr_top) + dlrad(p) + (1._r8-frac_veg_nosno(p))*emg(c)*forc_lwrad(c) &amp;
                           - lwrad_emit_snow(c) - (eflx_sh_snow(p)+qflx_ev_snow(p)*htvp(c))
 
-                     eflx_gnet_soil = sabg_lyr(p,lyr_top) + dlrad(p) + (1-frac_veg_nosno(p))*emg(c)*forc_lwrad(c) &amp;
+                     eflx_gnet_soil = sabg_lyr(p,lyr_top) + dlrad(p) + (1._r8-frac_veg_nosno(p))*emg(c)*forc_lwrad(c) &amp;
                           - lwrad_emit_soil(c) - (eflx_sh_soil(p)+qflx_ev_soil(p)*htvp(c))
 
                      hs_top_snow(c) = hs_top_snow(c) + eflx_gnet_snow*patch%wtcol(p)
@@ -3295,7 +3295,7 @@
                      if (j == col%snl(c)+1) then
                         dzp     = z(c,j+1)-z(c,j)
                         bmatrix_snow(c,4,j-1) = 0._r8
-                        bmatrix_snow(c,3,j-1) = 1+(1._r8-cnfac)*fact(c,j)*tk(c,j)/dzp-fact(c,j)*dhsdT(c)
+                        bmatrix_snow(c,3,j-1) = 1._r8+(1._r8-cnfac)*fact(c,j)*tk(c,j)/dzp-fact(c,j)*dhsdT(c)
                         if ( j /= 0) then
                            bmatrix_snow(c,2,j-1) =  -(1._r8-cnfac)*fact(c,j)*tk(c,j)/dzp
                         end if
@@ -3373,7 +3373,7 @@
                      if (j == col%snl(c)+1) then
                         dzp     = z(c,j+1)-z(c,j)
                         bmatrix_snow(c,4,j-1) = 0._r8
-                        bmatrix_snow(c,3,j-1) = 1+(1._r8-cnfac)*fact(c,j)*tk(c,j)/dzp-fact(c,j)*dhsdT(c)
+                        bmatrix_snow(c,3,j-1) = 1._r8+(1._r8-cnfac)*fact(c,j)*tk(c,j)/dzp-fact(c,j)*dhsdT(c)
                         if ( j /= 0) then
                            bmatrix_snow(c,2,j-1) =  -(1._r8-cnfac)*fact(c,j)*tk(c,j)/dzp
                         end if
@@ -3449,7 +3449,7 @@
                   if (j == col%snl(c)+1) then
                      dzp     = z(c,j+1)-z(c,j)
                      bmatrix_snow(c,4,j-1) = 0._r8
-                     bmatrix_snow(c,3,j-1) = 1+(1._r8-cnfac)*fact(c,j)*tk(c,j)/dzp-fact(c,j)*dhsdT(c)
+                     bmatrix_snow(c,3,j-1) = 1._r8+(1._r8-cnfac)*fact(c,j)*tk(c,j)/dzp-fact(c,j)*dhsdT(c)
                      if ( j /= 0) then
                         bmatrix_snow(c,2,j-1) =  -(1._r8-cnfac)*fact(c,j)*tk(c,j)/dzp
                      end if
@@ -3982,7 +3982,7 @@
                         if (j /= 1) then
                            bmatrix_soil(c,4,j) = 0._r8
                         end if
-                        bmatrix_soil(c,3,j) = 1+(1._r8-cnfac)*fact(c,j)*tk(c,j)/dzp-fact(c,j)*dhsdT(c)
+                        bmatrix_soil(c,3,j) = 1._r8+(1._r8-cnfac)*fact(c,j)*tk(c,j)/dzp-fact(c,j)*dhsdT(c)
                         bmatrix_soil(c,2,j) =  -(1._r8-cnfac)*fact(c,j)*tk(c,j)/dzp
                      else if (j &lt;= nlevurb-1) then
                         dzm     = (z(c,j)-z(c,j-1))
@@ -4074,7 +4074,7 @@
                         if (j /= 1) then
                            bmatrix_soil(c,4,j) = 0._r8
                         end if
-                        bmatrix_soil(c,3,j) = 1+(1._r8-cnfac)*fact(c,j)*tk(c,j)/dzp-fact(c,j)*dhsdT(c)
+                        bmatrix_soil(c,3,j) = 1.r8+(1._r8-cnfac)*fact(c,j)*tk(c,j)/dzp-fact(c,j)*dhsdT(c)
                         bmatrix_soil(c,2,j) =  -(1._r8-cnfac)*fact(c,j)*tk(c,j)/dzp
                      else if (j == 1) then
                         ! this is the snow/soil interface layer
@@ -4170,7 +4170,7 @@
                      if (j /= 1) then
                         bmatrix_soil(c,4,j) = 0._r8
                      end if
-                     bmatrix_soil(c,3,j) = 1+(1._r8-cnfac)*fact(c,j)*tk(c,j)/dzp-fact(c,j)*dhsdT(c)
+                     bmatrix_soil(c,3,j) = 1._r8+(1._r8-cnfac)*fact(c,j)*tk(c,j)/dzp-fact(c,j)*dhsdT(c)
                      bmatrix_soil(c,2,j) =  -(1._r8-cnfac)*fact(c,j)*tk(c,j)/dzp
                   else if (j == 1) then
                      ! this is the snow/soil interface layer
@@ -4570,7 +4570,7 @@
        ! surface water layer has two coefficients
        dzm=(0.5*dz_h2osfc(c)+col%z(c,1))
 
-       bmatrix_ssw(c,3,0)= 1+(1._r8-cnfac)*(dtime/c_h2osfc(c)) &amp;
+       bmatrix_ssw(c,3,0)= 1._r8+(1._r8-cnfac)*(dtime/c_h2osfc(c)) &amp;
             *tk_h2osfc(c)/dzm -(dtime/c_h2osfc(c))*dhsdT(c) !interaction from atm
 
     enddo</thetext>
  </long_desc><long_desc isprivate="0" >
    <commentid>6719</commentid>
    <comment_count>1</comment_count>
    <who name="Gautam Bisht">gbisht</who>
    <bug_when>2015-02-09 21:43:44 -0700</bug_when>
    <thetext>Btw, bug 2061 (http://bugs.cgd.ucar.edu/show_bug.cgi?id=2061) was similar to this reported bug and fixed in clm4_5_1_r096.</thetext>
  </long_desc><long_desc isprivate="0" >
    <commentid>8316</commentid>
    <comment_count>2</comment_count>
    <who name="Erik Kluzek">erik</who>
    <bug_when>2017-10-31 16:05:03 -0600</bug_when>
    <thetext>These changes don&apos;t appear to actually change answers. At least for: SMS_D_P24x1_Ld5.f10_f10_musgs.I2000Clm50BgcCrop.hobart_nag.clm-irrig_spunup. I think it&apos;s a better practice to make it clear that double precision constants are being used. But, this change should go with other non-answer changing modifications.</thetext>
  </long_desc>
      
      

    </bug>
    <bug>
          <bug_id>2142</bug_id>
          
          <creation_ts>2015-02-11 16:14:09 -0700</creation_ts>
          <short_desc>Add &quot;tillage&quot; to bgc-crop model</short_desc>
          <delta_ts>2016-09-06 16:11:14 -0600</delta_ts>
          <reporter_accessible>1</reporter_accessible>
          <cclist_accessible>1</cclist_accessible>
          <classification_id>1</classification_id>
          <classification>Unclassified</classification>
          <product>CCSM/CESM CLM</product>
          <component>CLM 5.0</component>
          <version>CESM1.3.z Development</version>
          <rep_platform>Other</rep_platform>
          <op_sys>All</op_sys>
          <bug_status>ASSIGNED</bug_status>
          <resolution></resolution>
          
          
          <bug_file_loc></bug_file_loc>
          <status_whiteboard></status_whiteboard>
          <keywords></keywords>
          <priority>P4</priority>
          <bug_severity>enhancement</bug_severity>
          <target_milestone>Future</target_milestone>
          
          
          <everconfirmed>1</everconfirmed>
          <reporter name="Erik Kluzek">erik</reporter>
          <assigned_to name="Erik Kluzek">erik</assigned_to>
          <cc>dlawren</cc>
    
    <cc>mvertens</cc>
    
    <cc>rfisher</cc>
    
    <cc>sacks</cc>
    
    <cc>slevis</cc>
          
          <cf_fixedinversion></cf_fixedinversion>

      

      

      

          <comment_sort_order>oldest_to_newest</comment_sort_order>  
          <long_desc isprivate="0" >
    <commentid>6721</commentid>
    <comment_count>0</comment_count>
    <who name="Erik Kluzek">erik</who>
    <bug_when>2015-02-11 16:14:09 -0700</bug_when>
    <thetext>Here are the changes from Sam (relative to clm4_5_06).

[erik@yslogin1 clm45bgccltv_0.5deg4506_1973-2004]$ diff -c /glade/p/work/slevis/clm4_5_06/models/lnd/clm/src/clm4_5/main/clmtype.F90 SourceMods/src.clm/
*** /glade/p/work/slevis/clm4_5_06/models/lnd/clm/src/clm4_5/main/clmtype.F90	2013-05-22 17:53:49.764464745 -0600
--- SourceMods/src.clm/clmtype.F90	2013-07-17 11:46:50.777948000 -0600
***************
*** 2361,2366 ****
--- 2361,2367 ----
     real(r8), pointer :: aais_mask(:)    !Antarctic ice sheet mask 
     real(r8), pointer :: aais_area(:)    !Antarctic ice-covered area per gridcell (km^2)
     real(r8), pointer :: tws(:)          !total water storage (mm H2O)
+    real(r8), pointer :: developed(:)
  
  #if (defined CNDV)
     ! dgvm variables defined at the gridcell level
[erik@yslogin1 clm45bgccltv_0.5deg4506_1973-2004]$ diff -c /glade/p/work/slevis/clm4_5_06/models/lnd/clm/src/clm4_5/biogeophys/BalanceCheckMod.F90  SourceMods/src.clm/
*** /glade/p/work/slevis/clm4_5_06/models/lnd/clm/src/clm4_5/biogeophys/BalanceCheckMod.F90	2013-05-22 17:53:50.930877831 -0600
--- SourceMods/src.clm/BalanceCheckMod.F90	2013-07-17 12:01:55.936740000 -0600
***************
*** 549,555 ****
                  endif
               endif
  
!              if (ltype(l) == istsoil .or. ltype(l) == istcrop .or. ltype(l) == istwet ) then
                   if ( do_capsnow(c) ) then
                      snow_sources(c) = frac_sno_eff(c) * (qflx_dew_snow(c) + qflx_dew_grnd(c) ) &amp;
                           + qflx_h2osfc_to_ice(c) + qflx_prec_grnd(c)
--- 549,555 ----
                  endif
               endif
  
!              if (ctype(c) == icol_road_perv .or. ltype(l) == istsoil .or. ltype(l) == istcrop .or. ltype(l) == istwet ) then
                   if ( do_capsnow(c) ) then
                      snow_sources(c) = frac_sno_eff(c) * (qflx_dew_snow(c) + qflx_dew_grnd(c) ) &amp;
                           + qflx_h2osfc_to_ice(c) + qflx_prec_grnd(c) 
[erik@yslogin1 clm45bgccltv_0.5deg4506_1973-2004]$ diff -c /glade/p/work/slevis/clm4_5_06/models/lnd/clm/src/clm4_5/biogeochem/CNDecompCascadeMod_CENTURY.F90  SourceMods/src.clm/
*** /glade/p/work/slevis/clm4_5_06/models/lnd/clm/src/clm4_5/biogeochem/CNDecompCascadeMod_CENTURY.F90	2013-05-22 17:53:47.078278215 -0600
--- SourceMods/src.clm/CNDecompCascadeMod_CENTURY.F90	2013-08-05 17:23:21.163550471 -0600
***************
*** 406,412 ****
  ! !IROUTINE: decomp_rate_constants
  !
  ! !INTERFACE:
! subroutine decomp_rate_constants(lbc, ubc, num_soilc, filter_soilc)
   !
  ! !DESCRIPTION:
  !
--- 406,412 ----
  ! !IROUTINE: decomp_rate_constants
  !
  ! !INTERFACE:
! subroutine decomp_rate_constants(lbc, ubc, num_soilc, filter_soilc, num_soilp, filter_soilp)
   !
  ! !DESCRIPTION:
  !
***************
*** 418,423 ****
--- 418,427 ----
     use shr_const_mod, only : SHR_CONST_PI
     use clm_varcon, only: secspday
     use clm_time_manager, only : get_days_per_year
+    ! slevis additions
+    use clm_time_manager, only : get_curr_calday,is_first_restart_step
+    use fileutils, only : getfil
+    use ncdio_pio
  
     !
  ! !ARGUMENTS:
***************
*** 425,430 ****
--- 429,437 ----
     integer, intent(in) :: lbc, ubc        ! column bounds
     integer, intent(in) :: num_soilc       ! number of soil columns in filter
     integer, intent(in) :: filter_soilc(:) ! filter for soil columns
+    ! slevis additions
+    integer, intent(in) :: num_soilp       ! number of soil pfts in filter
+    integer, intent(in) :: filter_soilp(:) ! filter for soil pfts
  !
  ! !CALLED FROM:
  ! 
***************
*** 491,496 ****
--- 498,509 ----
     real(r8) :: normalization_factor ! factor by which to offset the decomposition rates frm century to a q10 formulation
     real(r8):: days_per_year         ! days per year
  
+    ! slevis additions
+    character(len=256):: locfn ! local file name
+    type(file_desc_t) :: ncid  ! netcdf id
+    logical :: readvar         ! true =&gt; variable is on input file 
+    integer :: day, fp, p, g
+    real(r8) :: clteff_scalar(lbc:ubc,1:7) ! plowing modifies decomp_k
  
  #if (defined VERTSOILC)
     real(r8) :: depth_scalar(lbc:ubc,1:nlevdecomp) 
***************
*** 801,818 ****
        end do
     end do
  #endif
!    
  #if (defined VERTSOILC)
     do j = 1,nlevdecomp
        do fc = 1,num_soilc
           c = filter_soilc(fc)
           decomp_k(c,j,i_litr1) = k_l1 * t_scalar(c,j) * w_scalar(c,j) * depth_scalar(c,j) * o_scalar(c,j)
!          decomp_k(c,j,i_litr2) = k_l2_l3 * t_scalar(c,j) * w_scalar(c,j) * depth_scalar(c,j) * o_scalar(c,j)
!          decomp_k(c,j,i_litr3) = k_l2_l3 * t_scalar(c,j) * w_scalar(c,j) * depth_scalar(c,j) * o_scalar(c,j)
           decomp_k(c,j,i_cwd) = k_frag * t_scalar(c,j) * w_scalar(c,j) * depth_scalar(c,j) * o_scalar(c,j)
!          decomp_k(c,j,i_soil1) = k_s1 * t_scalar(c,j) * w_scalar(c,j) * depth_scalar(c,j) * o_scalar(c,j)
!          decomp_k(c,j,i_soil2) = k_s2 * t_scalar(c,j) * w_scalar(c,j) * depth_scalar(c,j) * o_scalar(c,j)
!          decomp_k(c,j,i_soil3) = k_s3 * t_scalar(c,j) * w_scalar(c,j) * depth_scalar(c,j) * o_scalar(c,j)
        end do
     end do
  #else
--- 814,968 ----
        end do
     end do
  #endif
! 
!    ! -----------------------------------------------------
!    ! slevis adding effect of cultivation (e.g., plowing)
!    !        on soil C decomposition
!    ! -----------------------------------------------------
!    ! 1) hardwired read of Melannie Hartmann&apos;s file
!    ! -----------------------------------------------------
! 
!    day = get_curr_calday()
! 
!    call getfil(&apos;/glade/scratch/slevis/clm45bgccltv_0.5deg4506_1972/run/dev_countries_0-360.nc&apos;, locfn, 0 )
!    call ncd_pio_openfile (ncid, trim(locfn), 0)
!    call ncd_io(ncid=ncid, varname=&apos;DEVELOPED&apos;, flag=&apos;read&apos;, data=clm3%g%developed, dim1name=grlnd, readvar=readvar)
!    if (.not. readvar) call endrun(&apos;ERROR: DEVELOPED not on dev_countries file&apos;)
! 
!    do fp = 1,num_soilp
!       p = filter_soilp(fp)
!       c = clm3%g%l%c%p%column(p)
!       g = clm3%g%l%c%p%gridcell(p)
!       ! -----------------------------------------------------
!       ! 2) error check
!       ! -----------------------------------------------------
!       if (clm3%g%developed(g) &gt; 1._r8 .or. &amp;
!           clm3%g%developed(g) &lt; 0._r8) then
!          write(iulog,*) &apos;ERROR: this variable - developed - should not take on this value:&apos;
!          write(iulog,*) clm3%g%developed(g), g
!          call endrun()
! 
!       ! -----------------------------------------------------
!       ! 3) assigning cultivation practices and mapping to the
!       !    effect on soil C decomposition
!       ! -----------------------------------------------------
!       ! About the next two ELSE IFs:
!       ! CLM does not know the day of planting before it happens because the
!       ! CLM calculates day of planting from indexes that respond to
!       ! environmental conditions at every time step. Hence,
!       ! I see two options:
!       ! a) start DAYCENT&apos;s farming practices on the day of planting
!       !    rather than 30 d before planting OR
!       ! b) start DAYCENT&apos;s farming practices on April 15th, which assumes
!       !    planting on May 15th. This option seems simpler for now. Later we
!       !    may test whether choice a or b makes much difference.
!       else if (clm3%g%developed(g) &gt; 0._r8) then ! == 1
!          ! More developed country; info from DAYCENT (Melannie Hartman CSU)
!          ! temp. cereals: I 30 d bef, D on day of planting
!          ! corn, soy    : I           D           &amp; ROW 30 d aftr planting
! 
!          if (day &lt; 105) then
!             clteff_scalar(c,:) = 1._r8
!          else if (day &gt;= 105 .and. day &lt; 135) then ! April 15
!             clteff_scalar(c,:) = 1._r8
!             if (clm3%g%l%c%p%itype(p) &gt;= 17) then
!                clteff_scalar(c,i_litr2) = 6.67_r8
!                clteff_scalar(c,i_litr3) = 6.67_r8
!                clteff_scalar(c,i_soil1) = 6.67_r8
!                clteff_scalar(c,i_soil2) = 6.67_r8
!             end if
!          else if (day &gt;= 135 .and. day &lt; 165) then ! May 15
!             clteff_scalar(c,:) = 1._r8
!             if (clm3%g%l%c%p%itype(p) &gt;= 17) then
!                clteff_scalar(c,i_litr2) = 3.41_r8
!                clteff_scalar(c,i_litr3) = 3.41_r8
!                clteff_scalar(c,i_soil1) = 3.41_r8
!                clteff_scalar(c,i_soil2) = 3.41_r8
!             end if
!          else if (day &gt;= 165 .and. day &lt; 195) then ! June 14
!             clteff_scalar(c,:) = 1._r8
!             if (clm3%g%l%c%p%itype(p) == 17 .or. &amp;
!                 clm3%g%l%c%p%itype(p) == 18 .or. &amp;
!                 clm3%g%l%c%p%itype(p) == 23 .or. &amp;
!                 clm3%g%l%c%p%itype(p) == 24      ) then
!                clteff_scalar(c,i_litr2) = 3.41_r8
!                clteff_scalar(c,i_litr3) = 3.41_r8
!                clteff_scalar(c,i_soil1) = 3.41_r8
!                clteff_scalar(c,i_soil2) = 3.41_r8
!             end if
!          else if (day &gt;= 195) then ! July 14
!             clteff_scalar(c,:) = 1._r8
!          end if
! 
!       else if (clm3%g%developed(g) &lt; 1._r8) then ! == 0
!          ! less developed country; info from DAYCENT (Melannie Hartman CSU)
!          ! temp. cereals: P 30 d bef, C 15 d bef, D on day of planting
!          ! corn, soy    : P           C           D           &amp; HW-7 30 d aftr
! 
!          if (day &lt; 105) then
!             clteff_scalar(c,:) = 1._r8
!          else if (day &gt;= 105 .and. day &lt; 120) then ! April 15
!             clteff_scalar(c,:) = 1._r8
!             if (clm3%g%l%c%p%itype(p) &gt;= 17) then
!                clteff_scalar(c,i_litr2) = 10.00_r8
!                clteff_scalar(c,i_litr3) = 10.00_r8
!                clteff_scalar(c,i_soil1) = 10.00_r8
!                clteff_scalar(c,i_soil2) = 10.00_r8
!             end if
!          else if (day &gt;= 120 .and. day &lt; 135) then ! April 30
!             clteff_scalar(c,:) = 1._r8
!             if (clm3%g%l%c%p%itype(p) &gt;= 17) then
!                clteff_scalar(c,i_litr2) = 2.69_r8
!                clteff_scalar(c,i_litr3) = 2.69_r8
!                clteff_scalar(c,i_soil1) = 2.69_r8
!                clteff_scalar(c,i_soil2) = 2.69_r8
!             end if
!          else if (day &gt;= 135 .and. day &lt; 165) then ! May 15
!             clteff_scalar(c,:) = 1._r8
!             if (clm3%g%l%c%p%itype(p) &gt;= 17) then
!                clteff_scalar(c,i_litr2) = 3.41_r8
!                clteff_scalar(c,i_litr3) = 3.41_r8
!                clteff_scalar(c,i_soil1) = 3.41_r8
!                clteff_scalar(c,i_soil2) = 3.41_r8
!             end if
!          else if (day &gt;= 165 .and. day &lt; 195) then ! June 14
!             clteff_scalar(c,:) = 1._r8
!             if (clm3%g%l%c%p%itype(p) == 17 .or. &amp;
!                 clm3%g%l%c%p%itype(p) == 18 .or. &amp;
!                 clm3%g%l%c%p%itype(p) == 23 .or. &amp;
!                 clm3%g%l%c%p%itype(p) == 24      ) then
!                clteff_scalar(c,i_litr2) = 1.10_r8
!                clteff_scalar(c,i_litr3) = 1.10_r8
!                clteff_scalar(c,i_soil1) = 1.10_r8
!                clteff_scalar(c,i_soil2) = 1.10_r8
!                clteff_scalar(c,i_soil3) = 1.10_r8
!             end if
!          else if (day &gt;= 195) then ! July 14
!             clteff_scalar(c,:) = 1._r8
!          end if
!       end if
!    enddo
! 
!    call ncd_pio_closefile(ncid)
! ! -----------------------------------------------------
! 
  #if (defined VERTSOILC)
     do j = 1,nlevdecomp
        do fc = 1,num_soilc
           c = filter_soilc(fc)
           decomp_k(c,j,i_litr1) = k_l1 * t_scalar(c,j) * w_scalar(c,j) * depth_scalar(c,j) * o_scalar(c,j)
!          decomp_k(c,j,i_litr2) = k_l2_l3 * t_scalar(c,j) * w_scalar(c,j) * depth_scalar(c,j) * o_scalar(c,j) * clteff_scalar(c,i_litr2)
!          decomp_k(c,j,i_litr3) = k_l2_l3 * t_scalar(c,j) * w_scalar(c,j) * depth_scalar(c,j) * o_scalar(c,j) * clteff_scalar(c,i_litr3)
           decomp_k(c,j,i_cwd) = k_frag * t_scalar(c,j) * w_scalar(c,j) * depth_scalar(c,j) * o_scalar(c,j)
!          decomp_k(c,j,i_soil1) = k_s1 * t_scalar(c,j) * w_scalar(c,j) * depth_scalar(c,j) * o_scalar(c,j) * clteff_scalar(c,i_soil1)
!          decomp_k(c,j,i_soil2) = k_s2 * t_scalar(c,j) * w_scalar(c,j) * depth_scalar(c,j) * o_scalar(c,j) * clteff_scalar(c,i_soil2)
!          decomp_k(c,j,i_soil3) = k_s3 * t_scalar(c,j) * w_scalar(c,j) * depth_scalar(c,j) * o_scalar(c,j) * clteff_scalar(c,i_soil3)
!          if (c==115688) then ! begin slevis diag
!          write(iulog,*) &apos;day, clteff_scalar&apos;
!          write(iulog,*) day, clteff_scalar(c,:)
!          write(iulog,*) &apos;i_litr1,i_litr2,i_litr3,i_cwd,i_soil1,i_soil2,i_soil3&apos;
!          write(iulog,*) i_litr1,i_litr2,i_litr3,i_cwd,i_soil1,i_soil2,i_soil3
!          end if ! end slevis diag
        end do
     end do
  #else
[erik@yslogin1 clm45bgccltv_0.5deg4506_1973-2004]$ diff -c /glade/p/work/slevis/clm4_5_06/models/lnd/clm/src/clm4_5/biogeochem/CNDecompMod.F90  SourceMods/src.clm/*** /glade/p/work/slevis/clm4_5_06/models/lnd/clm/src/clm4_5/biogeochem/CNDecompMod.F90	2013-05-22 17:53:47.061045089 -0600
--- SourceMods/src.clm/CNDecompMod.F90	2013-07-17 11:46:50.863425000 -0600
***************
*** 188,194 ****
     
     
     
!    call decomp_rate_constants(lbc, ubc, num_soilc, filter_soilc)
     
     
     ! set initial values for potential C and N fluxes
--- 188,194 ----
     
     
     
!    call decomp_rate_constants(lbc, ubc, num_soilc, filter_soilc, num_soilp, filter_soilp)
     
     
     ! set initial values for potential C and N fluxes
[erik@yslogin1 clm45bgccltv_0.5deg4506_1973-2004]$ diff -c /glade/p/work/slevis/clm4_5_06/models/lnd/clm/src/clm4_5/main/clmtypeInitMod.F90  SourceMods/src.clm/
*** /glade/p/work/slevis/clm4_5_06/models/lnd/clm/src/clm4_5/main/clmtypeInitMod.F90	2013-05-22 17:53:49.720922909 -0600
--- SourceMods/src.clm/clmtypeInitMod.F90	2013-07-17 11:46:50.800493000 -0600
***************
*** 553,563 ****
--- 553,565 ----
     allocate(g%aais_mask(beg:end))
     allocate(g%aais_area(beg:end))
     allocate(g%tws(beg:end))
+    allocate(g%developed(beg:end))
     g%gris_mask(beg:end) = nan
     g%gris_area(beg:end) = nan
     g%aais_mask(beg:end) = nan
     g%aais_area(beg:end) = nan
     g%tws(beg:end) = nan
+    g%developed(beg:end) = nan
  
    end subroutine init_gridcell_type</thetext>
  </long_desc><long_desc isprivate="0" >
    <commentid>6722</commentid>
    <comment_count>1</comment_count>
    <who name="Erik Kluzek">erik</who>
    <bug_when>2015-02-11 16:14:29 -0700</bug_when>
    <thetext>Namelist changes are:

hist_mfilt     = 1,1
hist_nhtfrq    = 0,0
hist_fincl2    = &apos;TLAI&apos;,&apos;TSAI&apos;,&apos;HTOP&apos;,&apos;HBOT&apos;,&apos;NPP&apos;
hist_dov2xy    = .true.,.false.
finidat=&apos;/glade/scratch/slevis/clm45bgccrop_0.5deg4506_1972/run/clm45bgccrop_0.5deg4506_1972.clm2.r.0301-01-01-00000.nc&apos;
fsurdat=&apos;/glade/p/work/slevis/clm4_5_06/models/lnd/clm/tools/clm4_5/mksurfdata_map/surfdata_360x720cru_simyr2000_c130523.nc&apos;
fpftdyn=&apos;&apos;
stream_year_first_ndep = 1972
stream_year_last_ndep = 2005
stream_year_first_popdens = 1972
stream_year_last_popdens = 2005</thetext>
  </long_desc><long_desc isprivate="0" >
    <commentid>6723</commentid>
    <comment_count>2</comment_count>
    <who name="Erik Kluzek">erik</who>
    <bug_when>2015-02-11 16:18:29 -0700</bug_when>
    <thetext>Sam&apos;s case:

create_newcase -case /glade/u/home/slevis/clm45bgccrop_0.5deg4506_1972 -mach yellowstone -compset 1850_DATM%QIA_CLM45%BGC_SICE_SOCN_RTM_SGLC_SWAV -res a%360x720cru_l%360x720cru_oi%360x720cru_r%r05_m%360x720cru_g%null_w%null</thetext>
  </long_desc><long_desc isprivate="0" >
    <commentid>6724</commentid>
    <comment_count>3</comment_count>
    <who name="Erik Kluzek">erik</who>
    <bug_when>2015-02-11 16:28:40 -0700</bug_when>
    <thetext>Surface dataset difference (versus standard surfdata_360x720cru_simyr2000_c130418.nc:

&lt;               :Lai_raw_data_file_name = &quot;mksrf_lai24pftnontrop_c120712.nc&quot; ;
---
&gt;               :Lai_raw_data_file_name = &quot;mksrf_lai_global_c090506.nc&quot; ;
298c298
&lt;               :Vegetation_type_raw_data_filename = &quot;mksrf_24pftirrNT_landuse_rc2000_c120712.nc&quot; ;
---
&gt;               :Vegetation_type_raw_data_filename = &quot;mksrf_landuse_rc2000_c090630.nc&quot; ;</thetext>
  </long_desc><long_desc isprivate="0" >
    <commentid>6726</commentid>
    <comment_count>4</comment_count>
    <who name="Erik Kluzek">erik</who>
    <bug_when>2015-02-12 10:07:29 -0700</bug_when>
    <thetext>Here&apos;s the difference for the file called: CNDecompCascadeMod_CENTURY.F90fromYumaPlow
I think it might be from a different base version of CLM.

[erik@yslogin2 biogeochem]$ cp ~slevis/archivedRUNS.mvHereToUse/levisetal2014gmd/clm45bgccltv_0.5deg4506_1973-2004/SourceMods/src.clm/CNDecompCascadeMod_CENTURY.F90fromYumaPlow CNDecompCascadeMod_CENTURY.F90 
[erik@yslogin2 biogeochem]$ svn diff
Index: CNDecompCascadeMod_CENTURY.F90
===================================================================
--- CNDecompCascadeMod_CENTURY.F90	(revision 68110)
+++ CNDecompCascadeMod_CENTURY.F90	(working copy)
@@ -16,9 +16,9 @@
 ! !USES:
    use shr_kind_mod , only: r8 =&gt; shr_kind_r8
    use shr_const_mod, only: SHR_CONST_TKFRZ
-   use clm_varpar   , only: nlevsoi, nlevgrnd, nlevdecomp, ndecomp_cascade_transitions, ndecomp_pools, nsompools 
+   use clm_varpar   , only: nlevsoi,nlevgrnd,nlevdecomp,ndecomp_cascade_transitions,ndecomp_pools 
    use clm_varpar   , only: i_met_lit, i_cel_lit, i_lig_lit, i_cwd
-   use clm_varctl   , only: iulog, spinup_state
+   use clm_varctl   , only: iulog
    use clm_varcon   , only: zsoi
 #ifdef LCH4
    use clm_varctl   , only: anoxia
@@ -46,9 +46,6 @@
    real(r8), public :: froz_q10 = 1.5_r8                     ! separate q10 for frozen soil respiration rates.  default to same as above zero rates
    integer, public :: nlev_soildecomp_standard               ! used here and in ch4Mod
 
-   !! parameters for AD spinup
-   real(r8), public, parameter :: spinup_vector(nsompools) = (/ 1.0_r8, 15.0_r8, 675.0_r8 /) ! multipliers for soil decomp during accelerated spinup
-
 !EOP
 !-----------------------------------------------------------------------
 
@@ -72,6 +69,8 @@
    use clmtype
    use clm_time_manager    , only : get_step_size
 
+   use clm_varcon, only: spinup_vector
+
 ! !ARGUMENTS:
    implicit none
 !
@@ -406,7 +405,7 @@
 ! !IROUTINE: decomp_rate_constants
 !
 ! !INTERFACE:
-subroutine decomp_rate_constants(lbc, ubc, num_soilc, filter_soilc, num_soilp, filter_soilp)
+subroutine decomp_rate_constants(lbc, ubc, num_soilc, filter_soilc)
  !
 ! !DESCRIPTION:
 !
@@ -416,12 +415,10 @@
 ! !USES:
    use clmtype
    use shr_const_mod, only : SHR_CONST_PI
-   use clm_varcon, only: secspday
+   use clm_varcon, only: spinup_vector, secspday
    use clm_time_manager, only : get_days_per_year
-   ! slevis additions
-   use clm_time_manager, only : get_curr_calday,is_first_restart_step
-   use fileutils, only : getfil
-   use ncdio_pio
+   use clm_time_manager, only : get_curr_date, get_curr_calday ! slevis adding
+   use spmdMod, only : masterproc                  ! for hardwired read statmt
 
    !
 ! !ARGUMENTS:
@@ -429,9 +426,6 @@
    integer, intent(in) :: lbc, ubc        ! column bounds
    integer, intent(in) :: num_soilc       ! number of soil columns in filter
    integer, intent(in) :: filter_soilc(:) ! filter for soil columns
-   ! slevis additions
-   integer, intent(in) :: num_soilp       ! number of soil pfts in filter
-   integer, intent(in) :: filter_soilp(:) ! filter for soil pfts
 !
 ! !CALLED FROM:
 ! 
@@ -446,7 +440,11 @@
 
    real(r8), pointer :: dz(:,:)           ! soil layer thickness (m)
    real(r8), pointer :: t_soisno(:,:)     ! soil temperature (Kelvin)  (-nlevsno+1:nlevgrnd)
-   real(r8), pointer :: sucsat(:,:)      ! minimum soil suction (mm)
+#ifndef STNDRD_BSW_FOR_SOILPSI_CALC
+   real(r8), pointer :: psisat(:,:)       ! soil water potential at saturation for CN code (MPa)
+#else
+    real(r8), pointer :: sucsat(:,:)      ! minimum soil suction (mm)
+#endif
    real(r8), pointer :: soilpsi(:,:)      ! soil water potential in each soil layer (MPa)
 #ifdef LCH4
    real(r8), pointer :: o2stress_unsat(:,:) ! Ratio of oxygen available to that demanded by roots, aerobes, &amp; methanotrophs (nlevsoi)
@@ -483,6 +481,16 @@
    real(r8):: cwdc_loss             ! fragmentation rate for CWD carbon (gC/m2/s)
    real(r8):: cwdn_loss             ! fragmentation rate for CWD nitrogen (gN/m2/s)
 
+   integer :: yr, mon, day, tod      ! slevis needs tod (time of day in sec) +
+   integer :: iostatcropschedule     ! error code for hardwired read statement
+   integer :: year = 0               ! init year+jday (julian day) here; then
+   integer :: jday = 0               ! read from cropschedule file and
+   real(r8) :: clteff_scalar(1:7)    ! modify decomp_k in response to plowing...
+   character :: clteffcode = &apos;Z&apos;     ! ...according to cultivation effect code
+   integer :: yearold = 0
+   integer :: jdayold = 0
+   data clteff_scalar /7*1._r8/      ! initialize all 7 slots incl. unused ones
+   character :: clteffcodeold = &apos;Z&apos;  ! end slevis variable declarations
    integer :: i_litr1
    integer :: i_litr2
    integer :: i_litr3
@@ -498,12 +506,6 @@
    real(r8) :: normalization_factor ! factor by which to offset the decomposition rates frm century to a q10 formulation
    real(r8):: days_per_year         ! days per year
 
-   ! slevis additions
-   character(len=256):: locfn ! local file name
-   type(file_desc_t) :: ncid  ! netcdf id
-   logical :: readvar         ! true =&gt; variable is on input file 
-   integer :: day, fp, p, g
-   real(r8) :: clteff_scalar(lbc:ubc,1:7) ! plowing modifies decomp_k
 
 #if (defined VERTSOILC)
    real(r8) :: depth_scalar(lbc:ubc,1:nlevdecomp) 
@@ -514,7 +516,11 @@
 
    ! Assign local pointers to derived type arrays
    t_soisno              =&gt; clm3%g%l%c%ces%t_soisno
+#ifndef STNDRD_BSW_FOR_SOILPSI_CALC
+   psisat                =&gt; clm3%g%l%c%cps%psisat
+#else
    sucsat            =&gt; clm3%g%l%c%cps%sucsat
+#endif
    soilpsi               =&gt; clm3%g%l%c%cps%soilpsi
    dz                    =&gt; clm3%g%l%c%cps%dz
    t_scalar           =&gt; clm3%g%l%c%ccf%t_scalar
@@ -565,11 +571,11 @@
    catanf_30 = catanf(30._r8)
    ! The following code implements the acceleration part of the AD spinup algorithm
 
-if ( spinup_state .eq. 1 ) then
+#if (defined AD_SPINUP)
    k_s1 = k_s1 * spinup_vector(1)
    k_s2 = k_s2 * spinup_vector(2)
    k_s3 = k_s3 * spinup_vector(3)
-endif
+#endif
 
    i_litr1 = 1
    i_litr2 = 2
@@ -654,7 +660,12 @@
          do fc = 1,num_soilc
             c = filter_soilc(fc)
             if (j==1) w_scalar(c,:) = 0._r8
+
+#ifndef STNDRD_BSW_FOR_SOILPSI_CALC
+            maxpsi = psisat(c,j)
+#else
             maxpsi = sucsat(c,j) * (-9.8e-6_r8)
+#endif
             psi = min(soilpsi(c,j),maxpsi)
             ! decomp only if soilpsi is higher than minpsi
             if (psi &gt; minpsi) then
@@ -751,7 +762,11 @@
       do j = 1,nlevdecomp
          do fc = 1,num_soilc
             c = filter_soilc(fc)
+#ifndef STNDRD_BSW_FOR_SOILPSI_CALC
+            maxpsi = psisat(c,j)
+#else
             maxpsi = sucsat(c,j) * (-9.8e-6_r8)
+#endif
             psi = min(soilpsi(c,j),maxpsi)
             ! decomp only if soilpsi is higher than minpsi
             if (psi &gt; minpsi) then
@@ -815,154 +830,129 @@
    end do
 #endif
 
-   ! -----------------------------------------------------
-   ! slevis adding effect of cultivation (e.g., plowing)
-   !        on soil C decomposition
-   ! -----------------------------------------------------
-   ! 1) hardwired read of Melannie Hartmann&apos;s file
-   ! -----------------------------------------------------
+   if (masterproc) then ! slevis adds hardwired read statmt; see also pftvarcon
 
-   day = get_curr_calday()
+      call get_curr_date( yr, mon, day, tod )
+      day = get_curr_calday() ! replace day of the month with julian day
 
-   call getfil(&apos;/glade/scratch/slevis/clm45bgccltv_0.5deg4506_1972/run/dev_countries_0-360.nc&apos;, locfn, 0 )
-   call ncd_pio_openfile (ncid, trim(locfn), 0)
-   call ncd_io(ncid=ncid, varname=&apos;DEVELOPED&apos;, flag=&apos;read&apos;, data=clm3%g%developed, dim1name=grlnd, readvar=readvar)
-   if (.not. readvar) call endrun(&apos;ERROR: DEVELOPED not on dev_countries file&apos;)
+! Apply plowing event
+! In the same timestep, the read statmt below loads info about the next event
+! Hence I use yearold, jdayold, and clteffcodeold in the following &quot;if&quot;
 
-   do fp = 1,num_soilp
-      p = filter_soilp(fp)
-      c = clm3%g%l%c%p%column(p)
-      g = clm3%g%l%c%p%gridcell(p)
-      ! -----------------------------------------------------
-      ! 2) error check
-      ! -----------------------------------------------------
-      if (clm3%g%developed(g) &gt; 1._r8 .or. &amp;
-          clm3%g%developed(g) &lt; 0._r8) then
-         write(iulog,*) &apos;ERROR: this variable - developed - should not take on this value:&apos;
-         write(iulog,*) clm3%g%developed(g), g
-         call endrun()
-
-      ! -----------------------------------------------------
-      ! 3) assigning cultivation practices and mapping to the
-      !    effect on soil C decomposition
-      ! -----------------------------------------------------
-      ! About the next two ELSE IFs:
-      ! CLM does not know the day of planting before it happens because the
-      ! CLM calculates day of planting from indexes that respond to
-      ! environmental conditions at every time step. Hence,
-      ! I see two options:
-      ! a) start DAYCENT&apos;s farming practices on the day of planting
-      !    rather than 30 d before planting OR
-      ! b) start DAYCENT&apos;s farming practices on April 15th, which assumes
-      !    planting on May 15th. This option seems simpler for now. Later we
-      !    may test whether choice a or b makes much difference.
-      else if (clm3%g%developed(g) &gt; 0._r8) then ! == 1
-         ! More developed country; info from DAYCENT (Melannie Hartman CSU)
-         ! temp. cereals: I 30 d bef, D on day of planting
-         ! corn, soy    : I           D           &amp; ROW 30 d aftr planting
-
-         if (day &lt; 105) then
-            clteff_scalar(c,:) = 1._r8
-         else if (day &gt;= 105 .and. day &lt; 135) then ! April 15
-            clteff_scalar(c,:) = 1._r8
-            if (clm3%g%l%c%p%itype(p) &gt;= 17) then
-               clteff_scalar(c,i_litr2) = 6.67_r8
-               clteff_scalar(c,i_litr3) = 6.67_r8
-               clteff_scalar(c,i_soil1) = 6.67_r8
-               clteff_scalar(c,i_soil2) = 6.67_r8
-            end if
-         else if (day &gt;= 135 .and. day &lt; 165) then ! May 15
-            clteff_scalar(c,:) = 1._r8
-            if (clm3%g%l%c%p%itype(p) &gt;= 17) then
-               clteff_scalar(c,i_litr2) = 3.41_r8
-               clteff_scalar(c,i_litr3) = 3.41_r8
-               clteff_scalar(c,i_soil1) = 3.41_r8
-               clteff_scalar(c,i_soil2) = 3.41_r8
-            end if
-         else if (day &gt;= 165 .and. day &lt; 195) then ! June 14
-            clteff_scalar(c,:) = 1._r8
-            if (clm3%g%l%c%p%itype(p) == 17 .or. &amp;
-                clm3%g%l%c%p%itype(p) == 18 .or. &amp;
-                clm3%g%l%c%p%itype(p) == 23 .or. &amp;
-                clm3%g%l%c%p%itype(p) == 24      ) then
-               clteff_scalar(c,i_litr2) = 3.41_r8
-               clteff_scalar(c,i_litr3) = 3.41_r8
-               clteff_scalar(c,i_soil1) = 3.41_r8
-               clteff_scalar(c,i_soil2) = 3.41_r8
-            end if
-         else if (day &gt;= 195) then ! July 14
-            clteff_scalar(c,:) = 1._r8
+      if (yr==yearold .and. day&gt;=jdayold .and. day&lt;jdayold+30) then
+         if (clteffcodeold==&apos;Z&apos;) then
+            clteff_scalar(i_litr2) = 1._r8 ! no effect
+            clteff_scalar(i_litr3) = 1._r8 ! no effect
+            clteff_scalar(i_soil1) = 1._r8 ! no effect
+            clteff_scalar(i_soil2) = 1._r8 ! no effect
+            clteff_scalar(i_soil3) = 1._r8 ! no effect
+         else if (clteffcodeold==&apos;A&apos;) then
+            clteff_scalar(i_litr2) = 1.100_r8
+            clteff_scalar(i_litr3) = 1.100_r8
+            clteff_scalar(i_soil1) = 1.000_r8
+            clteff_scalar(i_soil2) = 2.554_r8
+            clteff_scalar(i_soil3) = 2.554_r8
+         else if (clteffcodeold==&apos;B&apos;) then
+            clteff_scalar(i_litr2) = 1.200_r8
+            clteff_scalar(i_litr3) = 1.200_r8
+            clteff_scalar(i_soil1) = 1.000_r8
+            clteff_scalar(i_soil2) = 2.815_r8
+            clteff_scalar(i_soil3) = 2.815_r8
+         else if (clteffcodeold==&apos;C&apos;) then
+            clteff_scalar(i_litr2) = 1.241_r8
+            clteff_scalar(i_litr3) = 1.241_r8
+            clteff_scalar(i_soil1) = 1.041_r8
+            clteff_scalar(i_soil2) = 3.041_r8
+            clteff_scalar(i_soil3) = 3.041_r8
+         else if (clteffcodeold==&apos;D&apos;) then
+            clteff_scalar(i_litr2) = 1.50_r8
+            clteff_scalar(i_litr3) = 1.50_r8
+            clteff_scalar(i_soil1) = 1.00_r8
+            clteff_scalar(i_soil2) = 3.50_r8
+            clteff_scalar(i_soil3) = 3.50_r8
+         else if (clteffcodeold==&apos;E&apos;) then
+            clteff_scalar(i_litr2) = 1.600_r8
+            clteff_scalar(i_litr3) = 1.600_r8
+            clteff_scalar(i_soil1) = 1.100_r8
+            clteff_scalar(i_soil2) = 3.691_r8
+            clteff_scalar(i_soil3) = 3.691_r8
+         else if (clteffcodeold==&apos;F&apos;) then
+            clteff_scalar(i_litr2) = 1.649_r8
+            clteff_scalar(i_litr3) = 1.649_r8
+            clteff_scalar(i_soil1) = 1.149_r8
+            clteff_scalar(i_soil2) = 3.849_r8
+            clteff_scalar(i_soil3) = 3.849_r8
+         else if (clteffcodeold==&apos;G&apos;) then
+            clteff_scalar(i_litr2) = 1.735_r8
+            clteff_scalar(i_litr3) = 1.735_r8
+            clteff_scalar(i_soil1) = 1.235_r8
+            clteff_scalar(i_soil2) = 4.435_r8
+            clteff_scalar(i_soil3) = 4.435_r8
+         else if (clteffcodeold==&apos;H&apos;) then
+            clteff_scalar(i_litr2) = 1.8_r8
+            clteff_scalar(i_litr3) = 1.8_r8
+            clteff_scalar(i_soil1) = 1.2_r8
+            clteff_scalar(i_soil2) = 4.8_r8
+            clteff_scalar(i_soil3) = 4.8_r8
+         else if (clteffcodeold==&apos;I&apos;) then
+            clteff_scalar(i_litr2) = 2.034_r8
+            clteff_scalar(i_litr3) = 2.034_r8
+            clteff_scalar(i_soil1) = 1.234_r8
+            clteff_scalar(i_soil2) = 5.434_r8
+            clteff_scalar(i_soil3) = 5.434_r8
+         else if (clteffcodeold==&apos;J&apos;) then
+            clteff_scalar(i_litr2) = 3.396_r8
+            clteff_scalar(i_litr3) = 3.396_r8
+            clteff_scalar(i_soil1) = 1.396_r8
+            clteff_scalar(i_soil2) = 7.396_r8
+            clteff_scalar(i_soil3) = 7.396_r8
+         else if (clteffcodeold==&apos;K&apos;) then
+            clteff_scalar(i_litr2) = 3.5_r8
+            clteff_scalar(i_litr3) = 3.5_r8
+            clteff_scalar(i_soil1) = 8.0_r8
+            clteff_scalar(i_soil2) = 8.0_r8
+            clteff_scalar(i_soil3) = 8.0_r8
+         else
+            write(iulog,*) &apos;clteffcodeold=&apos;, clteffcodeold
+            call endrun( &apos;decomp_rate_constants ERROR: unexpected clteffcode.&apos; )
          end if
+      else
+         clteff_scalar(i_litr2) = 1._r8 ! no effect
+         clteff_scalar(i_litr3) = 1._r8 ! no effect
+         clteff_scalar(i_soil1) = 1._r8 ! no effect
+         clteff_scalar(i_soil2) = 1._r8 ! no effect
+         clteff_scalar(i_soil3) = 1._r8 ! no effect
+      end if
+      write(iulog,*) &apos;yr,day,clteffcodeold,clteff_scalar=&apos;,yr,day,clteffcodeold,clteff_scalar
 
-      else if (clm3%g%developed(g) &lt; 1._r8) then ! == 0
-         ! less developed country; info from DAYCENT (Melannie Hartman CSU)
-         ! temp. cereals: P 30 d bef, C 15 d bef, D on day of planting
-         ! corn, soy    : P           C           D           &amp; HW-7 30 d aftr
+! read next plowing event while applying the previous one
 
-         if (day &lt; 105) then
-            clteff_scalar(c,:) = 1._r8
-         else if (day &gt;= 105 .and. day &lt; 120) then ! April 15
-            clteff_scalar(c,:) = 1._r8
-            if (clm3%g%l%c%p%itype(p) &gt;= 17) then
-               clteff_scalar(c,i_litr2) = 10.00_r8
-               clteff_scalar(c,i_litr3) = 10.00_r8
-               clteff_scalar(c,i_soil1) = 10.00_r8
-               clteff_scalar(c,i_soil2) = 10.00_r8
+      do while (yr&gt;=year .and. day&gt;=jday)
+         if (tod == 0) then ! time of day = 0 at the beginning of every day
+            yearold = year
+            jdayold = jday
+            clteffcodeold = clteffcode
+            read(unit=42, fmt=&apos;(i4,1x,i3,1x,a1)&apos;, iostat=iostatcropschedule) year, jday, clteffcode
+            if (iostatcropschedule.ne.0) then
+               call endrun( &apos;decomp_rate_constants ERROR: failed to read cropschedule.&apos; )
+            else
+               write(iulog,*) &apos;Successfully read cropschedule&apos;
             end if
-         else if (day &gt;= 120 .and. day &lt; 135) then ! April 30
-            clteff_scalar(c,:) = 1._r8
-            if (clm3%g%l%c%p%itype(p) &gt;= 17) then
-               clteff_scalar(c,i_litr2) = 2.69_r8
-               clteff_scalar(c,i_litr3) = 2.69_r8
-               clteff_scalar(c,i_soil1) = 2.69_r8
-               clteff_scalar(c,i_soil2) = 2.69_r8
-            end if
-         else if (day &gt;= 135 .and. day &lt; 165) then ! May 15
-            clteff_scalar(c,:) = 1._r8
-            if (clm3%g%l%c%p%itype(p) &gt;= 17) then
-               clteff_scalar(c,i_litr2) = 3.41_r8
-               clteff_scalar(c,i_litr3) = 3.41_r8
-               clteff_scalar(c,i_soil1) = 3.41_r8
-               clteff_scalar(c,i_soil2) = 3.41_r8
-            end if
-         else if (day &gt;= 165 .and. day &lt; 195) then ! June 14
-            clteff_scalar(c,:) = 1._r8
-            if (clm3%g%l%c%p%itype(p) == 17 .or. &amp;
-                clm3%g%l%c%p%itype(p) == 18 .or. &amp;
-                clm3%g%l%c%p%itype(p) == 23 .or. &amp;
-                clm3%g%l%c%p%itype(p) == 24      ) then
-               clteff_scalar(c,i_litr2) = 1.10_r8
-               clteff_scalar(c,i_litr3) = 1.10_r8
-               clteff_scalar(c,i_soil1) = 1.10_r8
-               clteff_scalar(c,i_soil2) = 1.10_r8
-               clteff_scalar(c,i_soil3) = 1.10_r8
-            end if
-         else if (day &gt;= 195) then ! July 14
-            clteff_scalar(c,:) = 1._r8
          end if
-      end if
-   enddo
-
-   call ncd_pio_closefile(ncid)
-! -----------------------------------------------------
-
+      end do
+   end if ! end slevis adding hardwired read statmt
+   
 #if (defined VERTSOILC)
    do j = 1,nlevdecomp
       do fc = 1,num_soilc
          c = filter_soilc(fc)
          decomp_k(c,j,i_litr1) = k_l1 * t_scalar(c,j) * w_scalar(c,j) * depth_scalar(c,j) * o_scalar(c,j)
-         decomp_k(c,j,i_litr2) = k_l2_l3 * t_scalar(c,j) * w_scalar(c,j) * depth_scalar(c,j) * o_scalar(c,j) * clteff_scalar(c,i_litr2)
-         decomp_k(c,j,i_litr3) = k_l2_l3 * t_scalar(c,j) * w_scalar(c,j) * depth_scalar(c,j) * o_scalar(c,j) * clteff_scalar(c,i_litr3)
+         decomp_k(c,j,i_litr2) = k_l2_l3 * t_scalar(c,j) * w_scalar(c,j) * depth_scalar(c,j) * o_scalar(c,j) * clteff_scalar(i_litr2)
+         decomp_k(c,j,i_litr3) = k_l2_l3 * t_scalar(c,j) * w_scalar(c,j) * depth_scalar(c,j) * o_scalar(c,j) * clteff_scalar(i_litr3)
          decomp_k(c,j,i_cwd) = k_frag * t_scalar(c,j) * w_scalar(c,j) * depth_scalar(c,j) * o_scalar(c,j)
-         decomp_k(c,j,i_soil1) = k_s1 * t_scalar(c,j) * w_scalar(c,j) * depth_scalar(c,j) * o_scalar(c,j) * clteff_scalar(c,i_soil1)
-         decomp_k(c,j,i_soil2) = k_s2 * t_scalar(c,j) * w_scalar(c,j) * depth_scalar(c,j) * o_scalar(c,j) * clteff_scalar(c,i_soil2)
-         decomp_k(c,j,i_soil3) = k_s3 * t_scalar(c,j) * w_scalar(c,j) * depth_scalar(c,j) * o_scalar(c,j) * clteff_scalar(c,i_soil3)
-         if (c==115688) then ! begin slevis diag
-         write(iulog,*) &apos;day, clteff_scalar&apos;
-         write(iulog,*) day, clteff_scalar(c,:)
-         write(iulog,*) &apos;i_litr1,i_litr2,i_litr3,i_cwd,i_soil1,i_soil2,i_soil3&apos;
-         write(iulog,*) i_litr1,i_litr2,i_litr3,i_cwd,i_soil1,i_soil2,i_soil3
-         end if ! end slevis diag
+         decomp_k(c,j,i_soil1) = k_s1 * t_scalar(c,j) * w_scalar(c,j) * depth_scalar(c,j) * o_scalar(c,j) * clteff_scalar(i_soil1)
+         decomp_k(c,j,i_soil2) = k_s2 * t_scalar(c,j) * w_scalar(c,j) * depth_scalar(c,j) * o_scalar(c,j) * clteff_scalar(i_soil2)
+         decomp_k(c,j,i_soil3) = k_s3 * t_scalar(c,j) * w_scalar(c,j) * depth_scalar(c,j) * o_scalar(c,j) * clteff_scalar(i_soil3)
       end do
    end do
 #else
@@ -970,12 +960,12 @@
       do fc = 1,num_soilc
          c = filter_soilc(fc)
          decomp_k(c,j,i_litr1) = k_l1 * t_scalar(c,j) * w_scalar(c,j) * o_scalar(c,j)
-         decomp_k(c,j,i_litr2) = k_l2_l3 * t_scalar(c,j) * w_scalar(c,j) * o_scalar(c,j)
-         decomp_k(c,j,i_litr3) = k_l2_l3 * t_scalar(c,j) * w_scalar(c,j) * o_scalar(c,j)
+         decomp_k(c,j,i_litr2) = k_l2_l3 * t_scalar(c,j) * w_scalar(c,j) * o_scalar(c,j) * clteff_scalar(i_litr2)
+         decomp_k(c,j,i_litr3) = k_l2_l3 * t_scalar(c,j) * w_scalar(c,j) * o_scalar(c,j) * clteff_scalar(i_litr3)
          decomp_k(c,j,i_cwd) = k_frag * t_scalar(c,j) * w_scalar(c,j) * o_scalar(c,j)
-         decomp_k(c,j,i_soil1) = k_s1 * t_scalar(c,j) * w_scalar(c,j) * o_scalar(c,j)
-         decomp_k(c,j,i_soil2) = k_s2 * t_scalar(c,j) * w_scalar(c,j) * o_scalar(c,j)
-         decomp_k(c,j,i_soil3) = k_s3 * t_scalar(c,j) * w_scalar(c,j) * o_scalar(c,j)
+         decomp_k(c,j,i_soil1) = k_s1 * t_scalar(c,j) * w_scalar(c,j) * o_scalar(c,j) * clteff_scalar(i_soil1)
+         decomp_k(c,j,i_soil2) = k_s2 * t_scalar(c,j) * w_scalar(c,j) * o_scalar(c,j) * clteff_scalar(i_soil2)
+         decomp_k(c,j,i_soil3) = k_s3 * t_scalar(c,j) * w_scalar(c,j) * o_scalar(c,j) * clteff_scalar(i_soil3)
       end do
    end do
 #endif</thetext>
  </long_desc><long_desc isprivate="0" >
    <commentid>6727</commentid>
    <comment_count>5</comment_count>
    <who name="Erik Kluzek">erik</who>
    <bug_when>2015-02-12 10:10:45 -0700</bug_when>
    <thetext>I&apos;ve put this work on a branch...

https://svn-ccsm-models.cgd.ucar.edu/clm2/branches/tillage</thetext>
  </long_desc><long_desc isprivate="0" >
    <commentid>6729</commentid>
    <comment_count>6</comment_count>
    <who name="Sam Levis">slevis</who>
    <bug_when>2015-02-12 11:26:01 -0700</bug_when>
    <thetext>(In reply to Erik Kluzek from comment #4)
&gt; Here&apos;s the difference for the file called:
&gt; CNDecompCascadeMod_CENTURY.F90fromYumaPlow
&gt; I think it might be from a different base version of CLM.
&gt;[...]

Gordon wanted the global version of my tillage mods. The *YumaPlow file was used in 1x1 runs for a county named Yuma, CO.</thetext>
  </long_desc><long_desc isprivate="0" >
    <commentid>6732</commentid>
    <comment_count>7</comment_count>
    <who name="Erik Kluzek">erik</who>
    <bug_when>2015-02-13 12:06:20 -0700</bug_when>
    <thetext>OK, I was able to exactly reproduce Sam&apos;s case with the branch I&apos;ve checked in. Now, I&apos;ll try it with the change using GDP and see what happens...</thetext>
  </long_desc><long_desc isprivate="0" >
    <commentid>6737</commentid>
    <comment_count>8</comment_count>
    <who name="Sam Levis">slevis</who>
    <bug_when>2015-02-17 08:47:43 -0700</bug_when>
    <thetext>Found this in my &quot;enhanced decomposition by cultivation&quot; notes:

In future implementations apply enhanced decomp. to top 5 layers only!</thetext>
  </long_desc><long_desc isprivate="0" >
    <commentid>6739</commentid>
    <comment_count>9</comment_count>
    <who name="David Lawrence">dlawren</who>
    <bug_when>2015-02-17 17:11:55 -0700</bug_when>
    <thetext>In response to Sam&apos;s prior comment, about only tilling first 5 layers.  Since the vertical resolution of the model could change, this should be implemented as tilling only to a certain depth.  First 5 layers is about 0.25m.</thetext>
  </long_desc><long_desc isprivate="0" >
    <commentid>6740</commentid>
    <comment_count>10</comment_count>
    <who name="Erik Kluzek">erik</who>
    <bug_when>2015-02-18 11:30:03 -0700</bug_when>
    <thetext>OK to implement the reduction in number of layers applied over.  At initialization for cultivation, zsoi can be examined for the first layer that is above 0.25, and the index stored as ncult_layers. Then in CNDecompCascade_CENTURY a loop would be separated out for cultivation that loops over ncult_layers and applies clteff_scalar to only the top ncult_layers.</thetext>
  </long_desc>
      
      

    </bug>
    <bug>
          <bug_id>2143</bug_id>
          
          <creation_ts>2015-02-12 10:49:13 -0700</creation_ts>
          <short_desc>Move manure code from Stuart Riddick and Dan Ward to trunk</short_desc>
          <delta_ts>2016-09-06 16:07:33 -0600</delta_ts>
          <reporter_accessible>1</reporter_accessible>
          <cclist_accessible>1</cclist_accessible>
          <classification_id>1</classification_id>
          <classification>Unclassified</classification>
          <product>CCSM/CESM CLM</product>
          <component>CLM 5.0</component>
          <version>CESM1.3.z Development</version>
          <rep_platform>All</rep_platform>
          <op_sys>All</op_sys>
          <bug_status>ASSIGNED</bug_status>
          <resolution></resolution>
          
          
          <bug_file_loc></bug_file_loc>
          <status_whiteboard></status_whiteboard>
          <keywords></keywords>
          <priority>P4</priority>
          <bug_severity>enhancement</bug_severity>
          <target_milestone>Future</target_milestone>
          
          
          <everconfirmed>1</everconfirmed>
          <reporter name="Erik Kluzek">erik</reporter>
          <assigned_to name="Erik Kluzek">erik</assigned_to>
          <cc>dlawren</cc>
    
    <cc>muszala</cc>
    
    <cc>rfisher</cc>
    
    <cc>sacks</cc>
    
    <cc>slevis</cc>
          
          <cf_fixedinversion></cf_fixedinversion>

      

      

      

          <comment_sort_order>oldest_to_newest</comment_sort_order>  
          <long_desc isprivate="0" >
    <commentid>6728</commentid>
    <comment_count>0</comment_count>
    <who name="Erik Kluzek">erik</who>
    <bug_when>2015-02-12 10:49:13 -0700</bug_when>
    <thetext>I&apos;ve created a branch for this work at:

https://svn-ccsm-models.cgd.ucar.edu/clm2/branches/MF11manure

It has Dan&apos;s initial code from the clm45_MFmodel_1.1 case checked into it.</thetext>
  </long_desc><long_desc isprivate="0" >
    <commentid>7683</commentid>
    <comment_count>1</comment_count>
    <who name="Bill Sacks">sacks</who>
    <bug_when>2016-09-06 16:07:33 -0600</bug_when>
    <thetext>Keith and Will are working on this.</thetext>
  </long_desc>
      
      

    </bug>
    <bug>
          <bug_id>2159</bug_id>
          
          <creation_ts>2015-03-17 15:07:27 -0600</creation_ts>
          <short_desc>refactor pft initialization to read mxpft from the params file</short_desc>
          <delta_ts>2016-09-06 16:10:42 -0600</delta_ts>
          <reporter_accessible>1</reporter_accessible>
          <cclist_accessible>1</cclist_accessible>
          <classification_id>1</classification_id>
          <classification>Unclassified</classification>
          <product>CCSM/CESM CLM</product>
          <component>CLM 5.0</component>
          <version>CESM1.3.z Development</version>
          <rep_platform>All</rep_platform>
          <op_sys>All</op_sys>
          <bug_status>NEW</bug_status>
          <resolution></resolution>
          
          
          <bug_file_loc></bug_file_loc>
          <status_whiteboard></status_whiteboard>
          <keywords></keywords>
          <priority>P3</priority>
          <bug_severity>normal</bug_severity>
          <target_milestone>Future</target_milestone>
          
          
          <everconfirmed>1</everconfirmed>
          <reporter name="Ben Andre">andre</reporter>
          <assigned_to name="Erik Kluzek">erik</assigned_to>
          <cc>rfisher</cc>
    
    <cc>sacks</cc>
          
          <cf_fixedinversion></cf_fixedinversion>

      

      

      

          <comment_sort_order>oldest_to_newest</comment_sort_order>  
          <long_desc isprivate="0" >
    <commentid>6761</commentid>
    <comment_count>0</comment_count>
    <who name="Ben Andre">andre</who>
    <bug_when>2015-03-17 15:07:27 -0600</bug_when>
    <thetext>mxpft should be moved out of clm_varpar and made a module level variable in pftconMod. Once it is in pftconMod, it should be read from the params file rather than hard coded as a parameter. This may require some refactoring during initialization to ensure numpft is set correctly in clm_varpar.

use of maxpft in ED should be replaced with the ed num pft variable. It should also be read from the ed parameters file.</thetext>
  </long_desc>
      
      

    </bug>
    <bug>
          <bug_id>2176</bug_id>
          
          <creation_ts>2015-05-11 16:17:41 -0600</creation_ts>
          <short_desc>ED doesn&apos;t work with MEGAN</short_desc>
          <delta_ts>2016-09-06 16:11:30 -0600</delta_ts>
          <reporter_accessible>1</reporter_accessible>
          <cclist_accessible>1</cclist_accessible>
          <classification_id>1</classification_id>
          <classification>Unclassified</classification>
          <product>CCSM/CESM CLM</product>
          <component>CLM 5.0</component>
          <version>CESM1.4.z Development</version>
          <rep_platform>All</rep_platform>
          <op_sys>All</op_sys>
          <bug_status>ASSIGNED</bug_status>
          <resolution></resolution>
          
          
          <bug_file_loc></bug_file_loc>
          <status_whiteboard></status_whiteboard>
          <keywords></keywords>
          <priority>P3</priority>
          <bug_severity>normal</bug_severity>
          <target_milestone>Future</target_milestone>
          
          
          <everconfirmed>1</everconfirmed>
          <reporter name="Erik Kluzek">erik</reporter>
          <assigned_to name="Erik Kluzek">erik</assigned_to>
          <cc>rfisher</cc>
    
    <cc>sacks</cc>
          
          <cf_fixedinversion></cf_fixedinversion>

      

      

      

          <comment_sort_order>oldest_to_newest</comment_sort_order>  
          <long_desc isprivate="0" >
    <commentid>6851</commentid>
    <comment_count>0</comment_count>
    <who name="Erik Kluzek">erik</who>
    <bug_when>2015-05-11 16:17:41 -0600</bug_when>
    <thetext>MEGAN at least functioned before clm4_5_1_r106, but in clm4_5_1_r106, MEGAN fails here...
    if ( (cisun_in .eq. cisun_in) .and. (cisha_in .eq. cisha_in) .and. (forc_pbot_in &gt; 0._r8) .and. (fsun_in &gt; 0._r8) ) then
       ci = ( fsun_in*cisun_in + (1._r8-fsun_in)*cisha_in )/forc_pbot_in * 1.e6_r8
 &gt;&gt;&gt;      gamma_ci = Ismax - ( (Ismax*ci**h)/(Cstar**h+ci**h) )

cisun_in and cisha_in are still set to missing value (-999.) and hence the calculation fails.</thetext>
  </long_desc><long_desc isprivate="0" >
    <commentid>6853</commentid>
    <comment_count>1</comment_count>
    <who name="Erik Kluzek">erik</who>
    <bug_when>2015-05-12 15:19:59 -0600</bug_when>
    <thetext>These are the two tests that failed.

ERS_D_Mmpi-serial_Ld5.1x1_brazil.ICLM45ED.yellowstone_intel.clm-edTest
SMS_Ld5.f19_g16.ICLM45ED.yellowstone_gnu.clm-edTest

There are some tests that actually passed even with the issue. So it must be partially dependent on the compiler. 

But, I&apos;m having build-namelist to make sure MEGAN is off if ED is on, and the ED tests will now be with MEGAN off. And there was an issue in clm.buildnml that didn&apos;t allow MEGAN to be off, so I fixed that as well.</thetext>
  </long_desc><long_desc isprivate="0" >
    <commentid>6854</commentid>
    <comment_count>2</comment_count>
    <who name="Erik Kluzek">erik</who>
    <bug_when>2015-05-12 16:12:09 -0600</bug_when>
    <thetext>The SMS gnu test still fails with the following error...

   1: NetCDF: Numeric conversion not representable
   1: pio_support::pio_die:: myrank=          -1 : ERROR: pionfwrite_mod::write_nfdarray_double:         249 : NetCDF: Numeric conversion not representable
   1:Abort(1) on node 1 (rank 1 in comm 1140850688): application called MPI_Abort(MPI_COMM_WORLD, 1) - process 1

That is with MEGAN turned off.</thetext>
  </long_desc><long_desc isprivate="0" >
    <commentid>6855</commentid>
    <comment_count>3</comment_count>
    <who name="Erik Kluzek">erik</who>
    <bug_when>2015-05-14 10:50:41 -0600</bug_when>
    <thetext>By turning off a bunch of history fields, I got it to run further. Then it stopped in RTM, so I turned RTM off...

Change user_nl_clm hist_fincl1 to...

hist_fincl1       = &apos;GPP&apos;,&apos;BTRAN&apos;,&apos;H2OSOI&apos;,&apos;LITTER_IN&apos;,
   &apos;FIRE_AREA&apos;,&apos;FIRE_INTENSITY&apos;,&apos;FIRE_TFC_ROS&apos;
   &apos;FIRE_NESTEROV_INDEX&apos;,
   &apos;FIRE_ROS&apos;,&apos;DISPVEGC&apos;,&apos;AREA_TREES&apos;,&apos;AREA_PLANT&apos; 

And make a bunch of those fields inactive...

Index: ../../components/clm/src/ED/main/EDCLMLinkMod.F90
===================================================================
--- ../../components/clm/src/ED/main/EDCLMLinkMod.F90	(revision 70648)
+++ ../../components/clm/src/ED/main/EDCLMLinkMod.F90	(working copy)
@@ -221,19 +221,23 @@
 
     call hist_addfld2d (fname=&apos;PFTbiomass&apos;,  units=&apos;kgC/m2&apos;, type2d=&apos;levgrnd&apos;, &amp;
          avgflag=&apos;A&apos;, long_name=&apos;total PFT level biomass&apos;, &amp;
-         ptr_patch=this%PFTbiomass_patch, set_lake=0._r8, set_urb=0._r8)
+         ptr_patch=this%PFTbiomass_patch, set_lake=0._r8, set_urb=0._r8, &amp;
+         default=&apos;inactive&apos; )
 
     call hist_addfld2d (fname=&apos;PFTleafbiomass&apos;,  units=&apos;kgC/m2&apos;, type2d=&apos;levgrnd&apos;, &amp;
          avgflag=&apos;A&apos;, long_name=&apos;total PFT level biomass&apos;, &amp;
-         ptr_patch=this%PFTleafbiomass_patch, set_lake=0._r8, set_urb=0._r8)
+         ptr_patch=this%PFTleafbiomass_patch, set_lake=0._r8, set_urb=0._r8, &amp;
+         default=&apos;inactive&apos; )
 
     call hist_addfld2d (fname=&apos;PFTstorebiomass&apos;,  units=&apos;kgC/m2&apos;, type2d=&apos;levgrnd&apos;, &amp;
          avgflag=&apos;A&apos;, long_name=&apos;total PFT level biomass&apos;, &amp;
-         ptr_patch=this%PFTstorebiomass_patch, set_lake=0._r8, set_urb=0._r8)
+         ptr_patch=this%PFTstorebiomass_patch, set_lake=0._r8, set_urb=0._r8, &amp;
+         default=&apos;inactive&apos; )
 
     call hist_addfld2d (fname=&apos;PFTnindivs&apos;,  units=&apos;kgC/m2&apos;, type2d=&apos;levgrnd&apos;, &amp;
          avgflag=&apos;A&apos;, long_name=&apos;total PFT level biomass&apos;, &amp;
-         ptr_patch=this%PFTnindivs_patch, set_lake=0._r8, set_urb=0._r8)
+         ptr_patch=this%PFTnindivs_patch, set_lake=0._r8, set_urb=0._r8, &amp;
+         default=&apos;inactive&apos; )
 
     call hist_addfld1d (fname=&apos;FIRE_NESTEROV_INDEX&apos;, units=&apos;none&apos;,  &amp;
          avgflag=&apos;A&apos;, long_name=&apos;nesterov_fire_danger index&apos;, &amp;
@@ -249,7 +253,8 @@
 
     call hist_addfld1d (fname=&apos;FIRE_TFC_ROS&apos;, units=&apos;none&apos;,  &amp;
          avgflag=&apos;A&apos;, long_name=&apos;total fuel consumed&apos;, &amp;
-         ptr_patch=this%TFC_ROS_patch, set_lake=0._r8, set_urb=0._r8)
+         ptr_patch=this%TFC_ROS_patch, set_lake=0._r8, set_urb=0._r8, &amp;
+         default=&apos;inactive&apos;)
 
     call hist_addfld1d (fname=&apos;FIRE_INTENSITY&apos;, units=&apos;kJ/m/s&apos;,  &amp;
          avgflag=&apos;A&apos;, long_name=&apos;spitfire fire intensity: kJ/m/s&apos;, &amp;
@@ -261,27 +266,33 @@
 
     call hist_addfld1d (fname=&apos;SCORCH_HEIGHT&apos;, units=&apos;m&apos;,  &amp;
          avgflag=&apos;A&apos;, long_name=&apos;spitfire fire area:m2&apos;, &amp;
-         ptr_patch=this%scorch_height_patch, set_lake=0._r8, set_urb=0._r8)
+         ptr_patch=this%scorch_height_patch, set_lake=0._r8, set_urb=0._r8, &amp;
+         default=&apos;inactive&apos; )
 
     call hist_addfld1d (fname=&apos;fire_fuel_mef&apos;, units=&apos;m&apos;,  &amp;
          avgflag=&apos;A&apos;, long_name=&apos;spitfire fuel moisture&apos;, &amp;
-         ptr_patch=this%fire_fuel_mef_patch, set_lake=0._r8, set_urb=0._r8)
+         ptr_patch=this%fire_fuel_mef_patch, set_lake=0._r8, set_urb=0._r8, &amp;
+         default=&apos;inactive&apos; )
 
     call hist_addfld1d (fname=&apos;fire_fuel_bulkd&apos;, units=&apos;m&apos;,  &amp;
          avgflag=&apos;A&apos;, long_name=&apos;spitfire fuel bulk density&apos;, &amp;
-         ptr_patch=this%fire_fuel_bulkd_patch, set_lake=0._r8, set_urb=0._r8)
+         ptr_patch=this%fire_fuel_bulkd_patch, set_lake=0._r8, set_urb=0._r8, &amp;
+         default=&apos;inactive&apos; )
 
     call hist_addfld1d (fname=&apos;fire_fuel_eff_moist&apos;, units=&apos;m&apos;,  &amp;
          avgflag=&apos;A&apos;, long_name=&apos;spitfire fuel moisture&apos;, &amp;
-         ptr_patch=this%fire_fuel_eff_moist_patch, set_lake=0._r8, set_urb=0._r8)
+         ptr_patch=this%fire_fuel_eff_moist_patch, set_lake=0._r8, set_urb=0._r8, &amp;
+         default=&apos;inactive&apos; )
 
     call hist_addfld1d (fname=&apos;fire_fuel_sav&apos;, units=&apos;m&apos;,  &amp;
          avgflag=&apos;A&apos;, long_name=&apos;spitfire fuel surface/volume &apos;, &amp;
-         ptr_patch=this%fire_fuel_sav_patch, set_lake=0._r8, set_urb=0._r8)
+         ptr_patch=this%fire_fuel_sav_patch, set_lake=0._r8, set_urb=0._r8, &amp;
+         default=&apos;inactive&apos; )
 
     call hist_addfld1d (fname=&apos;TFC_ROS&apos;, units=&apos;m&apos;,  &amp;
          avgflag=&apos;A&apos;, long_name=&apos;spitfire fuel surface/volume &apos;, &amp;
-         ptr_patch=this%TFC_ROS_patch, set_lake=0._r8, set_urb=0._r8)
+         ptr_patch=this%TFC_ROS_patch, set_lake=0._r8, set_urb=0._r8, &amp;
+         default=&apos;inactive&apos;)
 
     call hist_addfld1d (fname=&apos;SUM_FUEL&apos;, units=&apos; KgC m-2 y-1&apos;,  &amp;
          avgflag=&apos;A&apos;, long_name=&apos;Litter flux in leaves&apos;, &amp;
@@ -293,7 +304,8 @@
 
     call hist_addfld1d (fname=&apos;LITTER_OUT&apos;, units=&apos; KgC m-2 y-1&apos;,  &amp;
          avgflag=&apos;A&apos;, long_name=&apos;Litter flux out leaves&apos;, &amp;
-         ptr_patch=this%litter_out_patch, set_lake=0._r8, set_urb=0._r8)
+         ptr_patch=this%litter_out_patch, set_lake=0._r8, set_urb=0._r8, &amp;
+         default=&apos;inactive&apos;)
 
     call hist_addfld1d (fname=&apos;SEED_BANK&apos;, units=&apos; KgC m-2&apos;,  &amp;
          avgflag=&apos;A&apos;, long_name=&apos;Total Seed Mass of all PFTs&apos;, &amp;
@@ -347,7 +359,8 @@
     this%storvegc_patch(begp:endp) = spval
     call hist_addfld1d (fname=&apos;STORVEGC&apos;, units=&apos;gC/m^2&apos;, &amp;
          avgflag=&apos;A&apos;, long_name=&apos;stored vegetation carbon, excluding cpool&apos;, &amp;
-         ptr_patch=this%storvegc_patch)
+         ptr_patch=this%storvegc_patch, &amp;
+         default=&apos;inactive&apos;)
 
     this%leafc_patch(begp:endp) = spval
     call hist_addfld1d (fname=&apos;LEAFC&apos;, units=&apos;gC/m^2&apos;, &amp;
@@ -377,7 +390,7 @@
     this%npp_patch(begp:endp) = spval
     call hist_addfld1d (fname=&apos;NPP&apos;, units=&apos;gC/m^2/s&apos;, &amp;
          avgflag=&apos;A&apos;, long_name=&apos;net primary production&apos;, &amp;
-         ptr_patch=this%npp_patch)
+         ptr_patch=this%npp_patch, default=&apos;inactive&apos;)
 
   end subroutine InitHistory
 
Index: ../../components/clm/src/biogeophys/CanopyStateType.F90
===================================================================
--- ../../components/clm/src/biogeophys/CanopyStateType.F90	(revision 70648)
+++ ../../components/clm/src/biogeophys/CanopyStateType.F90	(working copy)
@@ -168,7 +168,7 @@
     this%tlai_patch(begp:endp) = spval
     call hist_addfld1d (fname=&apos;TLAI&apos;, units=&apos;none&apos;, &amp;
          avgflag=&apos;A&apos;, long_name=&apos;total projected leaf area index&apos;, &amp;
-         ptr_patch=this%tlai_patch)
+         ptr_patch=this%tlai_patch, default=&apos;inactive&apos;)
 
     this%tsai_patch(begp:endp) = spval
     call hist_addfld1d (fname=&apos;TSAI&apos;, units=&apos;none&apos;, &amp;
Index: ../../components/clm/src/main/atm2lndType.F90
===================================================================
--- ../../components/clm/src/main/atm2lndType.F90	(revision 70648)
+++ ../../components/clm/src/main/atm2lndType.F90	(working copy)
@@ -255,7 +255,7 @@
     this%forc_wind_grc(begg:endg) = spval
     call hist_addfld1d (fname=&apos;WIND&apos;, units=&apos;m/s&apos;,  &amp;
          avgflag=&apos;A&apos;, long_name=&apos;atmospheric wind velocity magnitude&apos;, &amp;
-         ptr_lnd=this%forc_wind_grc)
+         ptr_lnd=this%forc_wind_grc, default=&apos;inactive&apos;)
     ! Rename of WIND for Urban intercomparision project
     call hist_addfld1d (fname=&apos;Wind&apos;, units=&apos;m/s&apos;,  &amp;
          avgflag=&apos;A&apos;, long_name=&apos;atmospheric wind velocity magnitude&apos;, &amp;</thetext>
  </long_desc><long_desc isprivate="0" >
    <commentid>6858</commentid>
    <comment_count>4</comment_count>
    <who name="Erik Kluzek">erik</who>
    <bug_when>2015-05-14 13:28:37 -0600</bug_when>
    <thetext>In clm4_5_1_r106 when ED is on, MEGAN is NOT allowed to be on in the build-namelist.</thetext>
  </long_desc>
      
      

    </bug>
    <bug>
          <bug_id>2188</bug_id>
          
          <creation_ts>2015-07-15 11:07:45 -0600</creation_ts>
          <short_desc>CLM slows down significantly after writing out many time-samples and over-writing time-constant variables</short_desc>
          <delta_ts>2015-07-15 11:28:01 -0600</delta_ts>
          <reporter_accessible>1</reporter_accessible>
          <cclist_accessible>1</cclist_accessible>
          <classification_id>1</classification_id>
          <classification>Unclassified</classification>
          <product>CCSM/CESM CLM</product>
          <component>CLM 4.5</component>
          <version>unspecified</version>
          <rep_platform>All</rep_platform>
          <op_sys>All</op_sys>
          <bug_status>NEW</bug_status>
          <resolution></resolution>
          
          
          <bug_file_loc></bug_file_loc>
          <status_whiteboard></status_whiteboard>
          <keywords></keywords>
          <priority>P3</priority>
          <bug_severity>normal</bug_severity>
          <target_milestone>CLM5</target_milestone>
          
          
          <everconfirmed>1</everconfirmed>
          <reporter name="Erik Kluzek">erik</reporter>
          <assigned_to name="Erik Kluzek">erik</assigned_to>
          <cc>andre</cc>
    
    <cc>dlawren</cc>
    
    <cc>oleson</cc>
    
    <cc>rfisher</cc>
    
    <cc>sacks</cc>
          
          <cf_fixedinversion></cf_fixedinversion>

      

      

      

          <comment_sort_order>oldest_to_newest</comment_sort_order>  
          <long_desc isprivate="0" >
    <commentid>6884</commentid>
    <comment_count>0</comment_count>
    <who name="Erik Kluzek">erik</who>
    <bug_when>2015-07-15 11:07:45 -0600</bug_when>
    <thetext>Keith noticed that after last week his single point simulations slowed down SIGNIFICANTLY after writing about 2 years of data every time-step to a single file (only writing about a dozen variables). If you cut the number of time-samples to one per year -- performance goes back to normal. This behavior is new on yellowstone this week, and didn&apos;t occur in the same cases last week. My guess is that maybe the GPFS upgrade last week created this behavior?

Here&apos;s also a note from Keith about what he found was the culprit...

Hi Erik,

Just a followup on the performance issues I am seeing.  I was comparing the two timing files and noticed that most of the extra time is actually being spent in &quot;hist_htapes_wrapup_tconst&quot; which includes the write call for subroutine &quot;htapes_timeconst&quot;.
One thing that is happening in that subroutine is writing some time constant values, e.g., area.  However, those fields are apparently being overwritten every time step into my h1 file.  When I enclose those statements within an if statement to just write them during the first time step, the model runs as fast as it used to.  I.e.,

       if (tape(t)%ntimes == 1) then

       if (ldomain%isgrid2d) then
          call ncd_io(varname=&apos;lon&apos;, data=lon1d, ncid=nfid(t), flag=&apos;write&apos;)
          call ncd_io(varname=&apos;lat&apos;, data=lat1d, ncid=nfid(t), flag=&apos;write&apos;)
       else
          call ncd_io(varname=&apos;lon&apos;, data=ldomain%lonc, dim1name=grlnd, ncid=nfid(t), flag=&apos;write&apos;)
          call ncd_io(varname=&apos;lat&apos;, data=ldomain%latc, dim1name=grlnd, ncid=nfid(t), flag=&apos;write&apos;)
       end if
       call ncd_io(varname=&apos;area&apos;    , data=ldomain%area, dim1name=grlnd, ncid=nfid(t), flag=&apos;write&apos;)
       call ncd_io(varname=&apos;landfrac&apos;, data=ldomain%frac, dim1name=grlnd, ncid=nfid(t), flag=&apos;write&apos;)
       call ncd_io(varname=&apos;landmask&apos;, data=ldomain%mask, dim1name=grlnd, ncid=nfid(t), flag=&apos;write&apos;)
       call ncd_io(varname=&apos;pftmask&apos; , data=ldomain%pftm, dim1name=grlnd, ncid=nfid(t), flag=&apos;write&apos;)

       end if

There is a note about the fact that some of these fields may eventually become time-dependent, so what I&apos;ve done isn&apos;t a robust solution.  And more importantly I don&apos;t know what might have changed in the system such that overwriting these variables every time step in a netcdf file would suddenly be a problem.</thetext>
  </long_desc><long_desc isprivate="0" >
    <commentid>6885</commentid>
    <comment_count>1</comment_count>
      <attachid>53</attachid>
    <who name="Erik Kluzek">erik</who>
    <bug_when>2015-07-15 11:10:44 -0600</bug_when>
    <thetext>Created attachment 53
cpl log file with &quot;normal&quot; behavior

Log file when yellowstone was acting fine.</thetext>
  </long_desc><long_desc isprivate="0" >
    <commentid>6886</commentid>
    <comment_count>2</comment_count>
      <attachid>54</attachid>
    <who name="Erik Kluzek">erik</who>
    <bug_when>2015-07-15 11:12:06 -0600</bug_when>
    <thetext>Created attachment 54
cpl log file with &quot;slowed&quot; behavior

This is the most recent cpl log file when the behavior is slowed after about 2 years is written to the output CLM history file.</thetext>
  </long_desc><long_desc isprivate="0" >
    <commentid>6887</commentid>
    <comment_count>3</comment_count>
      <attachid>55</attachid>
    <who name="Erik Kluzek">erik</who>
    <bug_when>2015-07-15 11:13:34 -0600</bug_when>
    <thetext>Created attachment 55
cesm timing file with &quot;normal&quot; behavior

This is the timing file when performance was unhindered by writing out data to the CLM history file.</thetext>
  </long_desc><long_desc isprivate="0" >
    <commentid>6888</commentid>
    <comment_count>4</comment_count>
      <attachid>56</attachid>
    <who name="Erik Kluzek">erik</who>
    <bug_when>2015-07-15 11:14:49 -0600</bug_when>
    <thetext>Created attachment 56
cesm timing file with &quot;slowed&quot; behavior

This is the cesm timing file for when the CLM history write is slowed dramatically.</thetext>
  </long_desc><long_desc isprivate="0" >
    <commentid>6889</commentid>
    <comment_count>5</comment_count>
    <who name="Erik Kluzek">erik</who>
    <bug_when>2015-07-15 11:28:01 -0600</bug_when>
    <thetext>Bad timing...

CPL:LND_RUN                 140256  2002.255
clm_run                     140257  1963.290
clm_drv_io                  140257  1862.098
clm_drv_io_htapes           140257  1861.426
hist_htapes_wrapup_define       97     6.819
hist_htapes_wrapup_tconst   140353  1283.942
hist_htapes_wrapup_write    140353   569.158

Good timing...

CPL:LND_RUN                 140256   790.405
clm_run                     140257   755.922
clm_drv_io                  140257   695.978
clm_drv_io_htapes           140257   695.887
hist_htapes_wrapup_define       97     1.472
hist_htapes_wrapup_tconst   140353   196.029
hist_htapes_wrapup_write    140353   497.408

note that the &quot;hist_htapes_wrapup_tconst&quot; write now becomes basically 10X slower.</thetext>
  </long_desc>
      
          <attachment
              isobsolete="0"
              ispatch="0"
              isprivate="0"
          >
            <attachid>53</attachid>
            <date>2015-07-15 11:10:44 -0600</date>
            <delta_ts>2015-07-15 11:10:44 -0600</delta_ts>
            <desc>cpl log file with &quot;normal&quot; behavior</desc>
            <filename>cpl.log.150629-143008</filename>
            <type>application/octet-stream</type>
            <size>807099</size>
            <attacher name="Erik Kluzek">erik</attacher>
            

          </attachment>
          <attachment
              isobsolete="0"
              ispatch="0"
              isprivate="0"
          >
            <attachid>54</attachid>
            <date>2015-07-15 11:12:06 -0600</date>
            <delta_ts>2015-07-15 11:12:06 -0600</delta_ts>
            <desc>cpl log file with &quot;slowed&quot; behavior</desc>
            <filename>cpl.log.150713-163115</filename>
            <type>application/octet-stream</type>
            <size>807099</size>
            <attacher name="Erik Kluzek">erik</attacher>
            

          </attachment>
          <attachment
              isobsolete="0"
              ispatch="0"
              isprivate="0"
          >
            <attachid>55</attachid>
            <date>2015-07-15 11:13:34 -0600</date>
            <delta_ts>2015-07-15 11:13:34 -0600</delta_ts>
            <desc>cesm timing file with &quot;normal&quot; behavior</desc>
            <filename>cesm_timing_stats.150629-143008</filename>
            <type>application/octet-stream</type>
            <size>5006</size>
            <attacher name="Erik Kluzek">erik</attacher>
            

          </attachment>
          <attachment
              isobsolete="0"
              ispatch="0"
              isprivate="0"
          >
            <attachid>56</attachid>
            <date>2015-07-15 11:14:49 -0600</date>
            <delta_ts>2015-07-15 11:14:49 -0600</delta_ts>
            <desc>cesm timing file with &quot;slowed&quot; behavior</desc>
            <filename>cesm_timing_stats.150713-163115</filename>
            <type>application/octet-stream</type>
            <size>5006</size>
            <attacher name="Erik Kluzek">erik</attacher>
            

          </attachment>
      

    </bug>
    <bug>
          <bug_id>2189</bug_id>
          
          <creation_ts>2015-07-15 15:09:02 -0600</creation_ts>
          <short_desc>ROOTR can NOT be added to the history file in DEBUG mode, because some values are NaN&apos;s...</short_desc>
          <delta_ts>2015-07-15 15:09:02 -0600</delta_ts>
          <reporter_accessible>1</reporter_accessible>
          <cclist_accessible>1</cclist_accessible>
          <classification_id>1</classification_id>
          <classification>Unclassified</classification>
          <product>CCSM/CESM CLM</product>
          <component>clm4.0</component>
          <version>CESM1.4.z Development</version>
          <rep_platform>All</rep_platform>
          <op_sys>All</op_sys>
          <bug_status>ASSIGNED</bug_status>
          <resolution></resolution>
          
          
          <bug_file_loc></bug_file_loc>
          <status_whiteboard></status_whiteboard>
          <keywords></keywords>
          <priority>P3</priority>
          <bug_severity>normal</bug_severity>
          <target_milestone>CLM5</target_milestone>
          
          
          <everconfirmed>1</everconfirmed>
          <reporter name="Erik Kluzek">erik</reporter>
          <assigned_to name="Erik Kluzek">erik</assigned_to>
          
          
          <cf_fixedinversion></cf_fixedinversion>

      

      

      

          <comment_sort_order>oldest_to_newest</comment_sort_order>  
          <long_desc isprivate="0" >
    <commentid>6890</commentid>
    <comment_count>0</comment_count>
    <who name="Erik Kluzek">erik</who>
    <bug_when>2015-07-15 15:09:02 -0600</bug_when>
    <thetext>in clm4_5_1_r104, ROOTR for a CN clm40 case, can NOT be added to the history file, because some values are NaN&apos;s and it chokes when writing.</thetext>
  </long_desc>
      
      

    </bug>
    <bug>
          <bug_id>2193</bug_id>
          
          <creation_ts>2015-07-23 09:58:36 -0600</creation_ts>
          <short_desc>Possible bug in SoilHydrologyMod due to bad variable names</short_desc>
          <delta_ts>2017-11-03 16:34:33 -0600</delta_ts>
          <reporter_accessible>1</reporter_accessible>
          <cclist_accessible>1</cclist_accessible>
          <classification_id>1</classification_id>
          <classification>Unclassified</classification>
          <product>CCSM/CESM CLM</product>
          <component>CLM 4.5</component>
          <version>unspecified</version>
          <rep_platform>All</rep_platform>
          <op_sys>All</op_sys>
          <bug_status>ASSIGNED</bug_status>
          <resolution></resolution>
          
          
          <bug_file_loc></bug_file_loc>
          <status_whiteboard></status_whiteboard>
          <keywords></keywords>
          <priority>P3</priority>
          <bug_severity>normal</bug_severity>
          <target_milestone>CLM5</target_milestone>
          
          
          <everconfirmed>1</everconfirmed>
          <reporter name="Leo van Kampenhout">l.vankampenhout</reporter>
          <assigned_to name="Erik Kluzek">erik</assigned_to>
          <cc>dlawren</cc>
    
    <cc>oleson</cc>
    
    <cc>rfisher</cc>
    
    <cc>swensosc</cc>
          
          <cf_fixedinversion></cf_fixedinversion>

      

      

      

          <comment_sort_order>oldest_to_newest</comment_sort_order>  
          <long_desc isprivate="0" >
    <commentid>6896</commentid>
    <comment_count>0</comment_count>
      <attachid>57</attachid>
    <who name="Leo van Kampenhout">l.vankampenhout</who>
    <bug_when>2015-07-23 09:58:36 -0600</bug_when>
    <thetext>Created attachment 57
variable is mistakingly used, latent heat, soil hydrology

revision clm4_5_1_r110

First of all, I do not know too much about CLM hydrology to be totally confident to say this is a bug, so please consider this report with a grain of salt. I think the impact if it WERE a bug would only be small but relevant. 

The issue involves latent heat fluxes for snow covered areas. These are computed in SoilFluxesMod with the following variable names:

qflx_evap_grnd (liquid evaporation)
qflx_sub_snow (solid evaporation = sublimation)
qflx_dew_snow (solid deposition = frost)
qflx_dew_grnd (liquid deposition = dew)

See attached snippet of source code to see how this is done exactly (this involves a dependency on flux sign and ground temperature). Observe that the total of the four variables above always equals qflx_ev_snow, the so-called &quot;evaporation flux from snow&quot;. 

My first concern is the naming and commenting of these variables. The names are ambiguous and could easily be mistaken for something broader than what they represent (that is, latent heat to snow). I think this is in fact what happened to the suspected bug. 

In SoilHydrologyMod.F90 the variable qflx_evap_grnd is used in a suspected wrong way. The variable is used in the urban column loop to determine surface water runoff, as if it represented evaporation in absence of snow. 

 207             ! If there are snow layers then all qflx_top_soil goes to surface runoff
 208             if (snl(c) &lt; 0) then
 209                qflx_surf(c) = max(0._r8,qflx_top_soil(c))
 210             else
 211                xs(c) = max(0._r8, &amp;
 212                     h2osoi_liq(c,1)/dtime + qflx_top_soil(c) - qflx_evap_grnd(c) - &amp;
 213                     pondmx_urban/dtime)

Possibly the coder meant to use qflx_evap_soi or qflx_evap_tot here, but again I&apos;m by no means an expert in this code (especially urban). 

If this turns out to be a bug, I request renaming of the variables in question to something more descriptive (e.g. qflx_evap_grnd and qflx_dew_grnd should have &apos;snow&apos; in their names).</thetext>
  </long_desc><long_desc isprivate="0" >
    <commentid>8322</commentid>
    <comment_count>1</comment_count>
    <who name="Erik Kluzek">erik</who>
    <bug_when>2017-11-03 14:57:33 -0600</bug_when>
    <thetext>I took an initial look into this, and thought it might be an issue. So I talked to Keith about it, and he agrees it needs more looking into. We think possibly the definition of these variables changed from applying everywhere to only applying over snow. So Keith will look into it more, and I&apos;ll look into the history a bit.</thetext>
  </long_desc><long_desc isprivate="0" >
    <commentid>8325</commentid>
    <comment_count>2</comment_count>
    <who name="Erik Kluzek">erik</who>
    <bug_when>2017-11-03 16:10:14 -0600</bug_when>
    <thetext>OK, I traced it back. The definition of qflx_evap_snow changed when CLM4.5 came in. Specifically it came in on the h2osfc branch from Sean Swenson with this change to Biogeophysics2Mod.F90:

svn diff -r25822:r26395 https://svn-ccsm-models.cgd.ucar.edu/clm2/branches/h2osfc/models/lnd/clm/src/biogeophys/Biogeophysics2Mod.F90

@@ -409,22 +461,29 @@
        qflx_dew_snow(p) = 0._r8
        qflx_dew_grnd(p) = 0._r8
 
-       if (qflx_evap_soi(p) &gt;= 0._r8) then
+!scs: instead of partitioning evap_soi, partition ev_snow for use in SnowHydrology
+!       if (qflx_evap_soi(p) &gt;= 0._r8) then
+       if (qflx_ev_snow(p) &gt;= 0._r8) then
           ! for evaporation partitioning between liquid evap and ice sublimation, 
          ! use the ratio of liquid to (liquid+ice) in the top layer to determine split
          if ((h2osoi_liq(c,j)+h2osoi_ice(c,j)) &gt; 0.) then
-             qflx_evap_grnd(p) = max(qflx_evap_soi(p)*(h2osoi_liq(c,j)/(h2osoi_liq(c,j)+h2osoi_ice(c,j))), 0._r8)
+!             qflx_evap_grnd(p) = max(qflx_evap_soi(p)*(h2osoi_liq(c,j)/(h2osoi_liq(c,j)+h2osoi_ice(c,j))), 0._r8)
+             qflx_evap_grnd(p) = max(qflx_ev_snow(p)*(h2osoi_liq(c,j)/(h2osoi_liq(c,j)+h2osoi_ice(c,j))), 0._r8)
          else
             qflx_evap_grnd(p) = 0.
          end if</thetext>
  </long_desc><long_desc isprivate="0" >
    <commentid>8326</commentid>
    <comment_count>3</comment_count>
    <who name="Erik Kluzek">erik</who>
    <bug_when>2017-11-03 16:12:26 -0600</bug_when>
    <thetext>The change was presumably fine for other column types, but urban got merged in at this same time, and it was assuming the previous definition. In terms of trunk tags this comes in at clm4_0_60.</thetext>
  </long_desc><long_desc isprivate="0" >
    <commentid>8327</commentid>
    <comment_count>4</comment_count>
    <who name="Keith Oleson">oleson</who>
    <bug_when>2017-11-03 16:34:33 -0600</bug_when>
    <thetext>It looks to me as if the original definition of the variable qflx_evap_grnd changed at some point since it&apos;s original use by the urban code.  The urban code itself has not changed.

The original code was:

       if (qflx_evap_soi(p) &gt;= 0._r8) then
          ! for evaporation partitioning between liquid evap and ice sublimation,
          ! use the ratio of liquid to (liquid+ice) in the top layer to determine split
          if ((h2osoi_liq(c,j)+h2osoi_ice(c,j)) &gt; 0.) then
             qflx_evap_grnd(p) = max(qflx_evap_soi(p)*(h2osoi_liq(c,j)/(h2osoi_liq(c,j)+h2osoi_ice(c,j))), 0._r8)
          else
             qflx_evap_grnd(p) = 0.
          end if
          qflx_sub_snow(p) = qflx_evap_soi(p) - qflx_evap_grnd(p)

So, it was defined as the liquid part of soil OR snow evaporation (qflx_evap_soi).

At some point that variable seems to have been co-opted as representing the liquid water part of evaporation from snow only:

         if (qflx_ev_snow(p) &gt;= 0._r8) then
            ! for evaporation partitioning between liquid evap and ice sublimation,
            ! use the ratio of liquid to (liquid+ice) in the top layer to determine split
            if ((h2osoi_liq(c,j)+h2osoi_ice(c,j)) &gt; 0.) then
               qflx_evap_grnd(p) = max(qflx_ev_snow(p)*(h2osoi_liq(c,j)/(h2osoi_liq(c,j)+h2osoi_ice(c,j))), 0._r8)
            else
               qflx_evap_grnd(p) = 0.
            end if
            qflx_sub_snow(p) = qflx_ev_snow(p) - qflx_evap_grnd(p)

However, in the new code there is also this statement:

         ! set ev_snow, ev_soil for urban landunits here
         l = patch%landunit(p)
         if (lun%urbpoi(l)) then
            qflx_ev_snow(p) = qflx_evap_soi(p)
            qflx_ev_soil(p) = 0._r8
            qflx_ev_h2osfc(p) = 0._r8

Here, qflx_ev_sno is being assigned to qflx_evap_soi for urban.  So, I think the new code is actually using qflx_evap_soi, which is correct.

I have no idea how this code got in there, but it appears to be ok I think in terms of how xs is derived.

However, it seems like the qflx_ev_snow variable on the history file (QSNOEVAP) will have evaporation from urban classified as snow evaporation which will be wrong when there is no snow. And possibly other variables derived from qflx_ev_snow.

I also completely agree that these variables names are confusing and that they should have snow included in their variable names and in their long_names in the history file output.</thetext>
  </long_desc>
      
          <attachment
              isobsolete="0"
              ispatch="0"
              isprivate="0"
          >
            <attachid>57</attachid>
            <date>2015-07-23 09:58:36 -0600</date>
            <delta_ts>2015-07-23 09:58:36 -0600</delta_ts>
            <desc>variable is mistakingly used, latent heat, soil hydrology</desc>
            <filename>snippet.F90</filename>
            <type>application/octet-stream</type>
            <size>1907</size>
            <attacher name="Leo van Kampenhout">l.vankampenhout</attacher>
            

          </attachment>
      

    </bug>
    <bug>
          <bug_id>2200</bug_id>
          
          <creation_ts>2015-08-13 20:01:09 -0600</creation_ts>
          <short_desc>LAI, SAI, and heights assigned incorrectly for irrigated areas in mklaiMod.F90</short_desc>
          <delta_ts>2015-08-13 20:01:48 -0600</delta_ts>
          <reporter_accessible>1</reporter_accessible>
          <cclist_accessible>1</cclist_accessible>
          <classification_id>1</classification_id>
          <classification>Unclassified</classification>
          <product>CCSM/CESM CLM</product>
          <component>clm4.0</component>
          <version>CESM1.2.z Release</version>
          <rep_platform>All</rep_platform>
          <op_sys>All</op_sys>
          <bug_status>NEW</bug_status>
          <resolution></resolution>
          
          
          <bug_file_loc></bug_file_loc>
          <status_whiteboard></status_whiteboard>
          <keywords></keywords>
          <priority>P3</priority>
          <bug_severity>minor</bug_severity>
          <target_milestone>CLM5</target_milestone>
          
          
          <everconfirmed>1</everconfirmed>
          <reporter name="Keith Oleson">oleson</reporter>
          <assigned_to name="Erik Kluzek">erik</assigned_to>
          <cc>dlawren</cc>
    
    <cc>erik</cc>
    
    <cc>lawrence</cc>
          
          <cf_fixedinversion></cf_fixedinversion>

      

      

      

          <comment_sort_order>oldest_to_newest</comment_sort_order>  
          <long_desc isprivate="0" >
    <commentid>7065</commentid>
    <comment_count>0</comment_count>
    <who name="Keith Oleson">oleson</who>
    <bug_when>2015-08-13 20:01:09 -0600</bug_when>
    <thetext>A CESM tutorial student pointed out that there is a bug in creating CLM4.0 surface datasets related to irrigation.  Code in mklaiMod.F90 reads:

     ! if irrigation dataset present, copy LAI,SAI,Heights from non-irrigated
     ! into irrigated
     if (firrig /= &apos; &apos;) then
        write(6,*) &apos;Irrigation dataset present; Copying crop &apos;, &amp;
             &apos; LAI, SAI, and heights into irrigated crop &apos;
        mlai_o(:,nonIrrigIdx)  = mlai_o(:,IrrigIdx)
        msai_o(:,nonIrrigIdx)  = msai_o(:,IrrigIdx)
        mhgtt_o(:,nonIrrigIdx) = mhgtt_o(:,IrrigIdx)
        mhgtb_o(:,nonIrrigIdx) = mhgtb_o(:,IrrigIdx)
     endif

Contrary to the comment, LAI, SAI, Heights are being copied from irrigated into non-irrigated.

This seems to be OK for CLM4.5</thetext>
  </long_desc>
      
      

    </bug>
    <bug>
          <bug_id>2202</bug_id>
          
          <creation_ts>2015-08-18 13:11:28 -0600</creation_ts>
          <short_desc>Incorrect comments in Biogeophysics1Mod.F90</short_desc>
          <delta_ts>2015-08-18 13:11:28 -0600</delta_ts>
          <reporter_accessible>1</reporter_accessible>
          <cclist_accessible>1</cclist_accessible>
          <classification_id>1</classification_id>
          <classification>Unclassified</classification>
          <product>CCSM/CESM CLM</product>
          <component>CLM 4.5</component>
          <version>CESM1.2.z Release</version>
          <rep_platform>All</rep_platform>
          <op_sys>All</op_sys>
          <bug_status>NEW</bug_status>
          <resolution></resolution>
          
          
          <bug_file_loc></bug_file_loc>
          <status_whiteboard></status_whiteboard>
          <keywords></keywords>
          <priority>P3</priority>
          <bug_severity>enhancement</bug_severity>
          <target_milestone>CLM5</target_milestone>
          
          
          <everconfirmed>1</everconfirmed>
          <reporter name="Liang Chen">lchen15</reporter>
          <assigned_to name="Erik Kluzek">erik</assigned_to>
          <cc>rfisher</cc>
          
          <cf_fixedinversion></cf_fixedinversion>

      

      

      

          <comment_sort_order>oldest_to_newest</comment_sort_order>  
          <long_desc isprivate="0" >
    <commentid>7072</commentid>
    <comment_count>0</comment_count>
    <who name="Liang Chen">lchen15</who>
    <bug_when>2015-08-18 13:11:28 -0600</bug_when>
    <thetext>In Biogeophysics1Mod.F90, the variables hr is not relative humidity, but the alpha soil (Equation 5.73 in CLM45_Tech_Note). 

    real(r8) :: hr      !relative humidity
    real(r8) :: hr_road_perv  !relative humidity for urban pervious road</thetext>
  </long_desc>
      
      

    </bug>
    <bug>
          <bug_id>2203</bug_id>
          
          <creation_ts>2015-08-24 05:06:03 -0600</creation_ts>
          <short_desc>Frac_sno_eff out of range (larger than 1.0)</short_desc>
          <delta_ts>2015-10-26 07:11:01 -0600</delta_ts>
          <reporter_accessible>1</reporter_accessible>
          <cclist_accessible>1</cclist_accessible>
          <classification_id>1</classification_id>
          <classification>Unclassified</classification>
          <product>CCSM/CESM CLM</product>
          <component>CLM 4.5</component>
          <version>unspecified</version>
          <rep_platform>All</rep_platform>
          <op_sys>All</op_sys>
          <bug_status>NEW</bug_status>
          <resolution></resolution>
          
          
          <bug_file_loc></bug_file_loc>
          <status_whiteboard></status_whiteboard>
          <keywords></keywords>
          <priority>P3</priority>
          <bug_severity>normal</bug_severity>
          <target_milestone>CLM5</target_milestone>
          
          
          <everconfirmed>1</everconfirmed>
          <reporter name="Leo van Kampenhout">l.vankampenhout</reporter>
          <assigned_to name="Erik Kluzek">erik</assigned_to>
          <cc>l.vankampenhout</cc>
    
    <cc>sacks</cc>
    
    <cc>swensosc</cc>
          
          <cf_fixedinversion></cf_fixedinversion>

      

      

      

          <comment_sort_order>oldest_to_newest</comment_sort_order>  
          <long_desc isprivate="0" >
    <commentid>7073</commentid>
    <comment_count>0</comment_count>
    <who name="Leo van Kampenhout">l.vankampenhout</who>
    <bug_when>2015-08-24 05:06:03 -0600</bug_when>
    <thetext>I&apos;ve tried diagnosing this myself last week but had to give up due to lack of time. Just wanted to report this here so maybe someone else or the future me has time to look at this further. 

How to reproduce: just set up any offline CLM compset, run it for a month or even a few days and notice that the variable FRAC_SNO_EFF becomes larger than 1.0 in the history files. As this is a fractional number that should range between 0 and 1 , this is a bug. Interesting is that the FRAC_SNO variable is not out of range. 

./create_newcase -case i1850_2d -res f19_g16 -project $PROJECT -compset I1850CLM45 -mach yellowstone

CLM version affected: development trunk clm4_5_1_r118</thetext>
  </long_desc><long_desc isprivate="0" >
    <commentid>7074</commentid>
    <comment_count>1</comment_count>
      <attachid>59</attachid>
    <who name="Leo van Kampenhout">l.vankampenhout</who>
    <bug_when>2015-08-24 09:59:57 -0600</bug_when>
    <thetext>Created attachment 59
example of a run with out-of-bound frac_sno_eff</thetext>
  </long_desc><long_desc isprivate="0" >
    <commentid>7175</commentid>
    <comment_count>2</comment_count>
    <who name="Leo van Kampenhout">l.vankampenhout</who>
    <bug_when>2015-10-26 07:11:01 -0600</bug_when>
    <thetext>Still present in clm4_5_3_r142</thetext>
  </long_desc>
      
          <attachment
              isobsolete="0"
              ispatch="0"
              isprivate="0"
          >
            <attachid>59</attachid>
            <date>2015-08-24 09:59:57 -0600</date>
            <delta_ts>2015-08-24 09:59:57 -0600</delta_ts>
            <desc>example of a run with out-of-bound frac_sno_eff</desc>
            <filename>Screen Shot 2015-08-06 at 12.09.04.png</filename>
            <type>image/png</type>
            <size>53600</size>
            <attacher name="Leo van Kampenhout">l.vankampenhout</attacher>
            

          </attachment>
      

    </bug>
    <bug>
          <bug_id>2228</bug_id>
          
          <creation_ts>2015-10-06 14:46:31 -0600</creation_ts>
          <short_desc>soilbgc decomp pool arrays should be allocated and indexed 1:ndecomp_pools</short_desc>
          <delta_ts>2015-10-06 14:46:31 -0600</delta_ts>
          <reporter_accessible>1</reporter_accessible>
          <cclist_accessible>1</cclist_accessible>
          <classification_id>1</classification_id>
          <classification>Unclassified</classification>
          <product>CCSM/CESM CLM</product>
          <component>CLM 4.5</component>
          <version>CESM1.4.z Development</version>
          <rep_platform>All</rep_platform>
          <op_sys>All</op_sys>
          <bug_status>NEW</bug_status>
          <resolution></resolution>
          
          
          <bug_file_loc></bug_file_loc>
          <status_whiteboard></status_whiteboard>
          <keywords></keywords>
          <priority>P3</priority>
          <bug_severity>normal</bug_severity>
          <target_milestone>CLM5</target_milestone>
          
          
          <everconfirmed>1</everconfirmed>
          <reporter name="Ben Andre">andre</reporter>
          <assigned_to name="Erik Kluzek">erik</assigned_to>
          <cc>rfisher</cc>
          
          <cf_fixedinversion></cf_fixedinversion>

      

      

      

          <comment_sort_order>oldest_to_newest</comment_sort_order>  
          <long_desc isprivate="0" >
    <commentid>7162</commentid>
    <comment_count>0</comment_count>
    <who name="Ben Andre">andre</who>
    <bug_when>2015-10-06 14:46:31 -0600</bug_when>
    <thetext>The decomp pool arrays in SoilBiogeochemDecompCascadeConType should only used for indices 1:ndecomp_pools. But they are allocated for 0:ndecomp_pools. This leads to the possibility of looping incorrectly and using incorrect or nan initialized data, resulting in a floating point error.

Dave Lawrence and Charlie Koven verified that the arrays should not be zero based.

Fixing this should be bit for bit.</thetext>
  </long_desc>
      
      

    </bug>
    <bug>
          <bug_id>2232</bug_id>
          
          <creation_ts>2015-10-10 21:52:09 -0600</creation_ts>
          <short_desc>change from more_vertlayers to equivalent soil_layerstruct causes test failures</short_desc>
          <delta_ts>2015-10-10 21:53:01 -0600</delta_ts>
          <reporter_accessible>1</reporter_accessible>
          <cclist_accessible>1</cclist_accessible>
          <classification_id>1</classification_id>
          <classification>Unclassified</classification>
          <product>CCSM/CESM CLM</product>
          <component>CLM 4.5</component>
          <version>CESM1.4.z Development</version>
          <rep_platform>All</rep_platform>
          <op_sys>All</op_sys>
          <bug_status>NEW</bug_status>
          <resolution></resolution>
          
          
          <bug_file_loc></bug_file_loc>
          <status_whiteboard></status_whiteboard>
          <keywords></keywords>
          <priority>P3</priority>
          <bug_severity>normal</bug_severity>
          <target_milestone>CLM5</target_milestone>
          
          
          <everconfirmed>1</everconfirmed>
          <reporter name="Ben Andre">andre</reporter>
          <assigned_to name="Erik Kluzek">erik</assigned_to>
          <cc>rfisher</cc>
          
          <cf_fixedinversion></cf_fixedinversion>

      

      

      

          <comment_sort_order>oldest_to_newest</comment_sort_order>  
          <long_desc isprivate="0" >
    <commentid>7170</commentid>
    <comment_count>0</comment_count>
    <who name="Ben Andre">andre</who>
    <bug_when>2015-10-10 21:52:09 -0600</bug_when>
    <thetext>clm4_5_3_r138 removes the namelist option more_vertlayers. It is replaced by the equivalent:

  soil_layerstruct = &apos;23SL_3.5m&apos;

I updated the vrtlay testmod and most of the tests using it passed bit for bit with the baseline. The following tests continued to fail:

ERP_Ld5.f09_g16.ICLM45VIC.yellowstone_pgi.clm-vrtlay 
ERP_D_Ld5.f09_g16.ICLM45VIC.yellowstone_intel.clm-vrtlay

The land log reports:

Reading initial conditions from
 /glade/p/cesmdata/cseg/inputdata/lnd/clm2/initdata_map/clmi.ICRUCLM45SP.2000-01-01.0.9x1.25_g1v6_simyr2000_c141226.nc
 (GETFIL): attempting to find local file
 clmi.ICRUCLM45SP.2000-01-01.0.9x1.25_g1v6_simyr2000_c141226.nc (GETFIL): using
 /glade/p/cesmdata/cseg/inputdata/lnd/clm2/initdata_map/clmi.ICRUCLM45SP.2000-01-01.0.9x1.25_g1v6_simyr2000_c141226.nc
 Reading restart dataset
 check_dim ERROR: mismatch of input dimension            15
  with expected value            30  for variable levgrnd
 ERROR:
 ERROR in /glade/p/work/andre/dlawren_accel_spinup/accel_spinup_dr/components/clm/src/main/ncdio_pio.F90.in at line 358

It seems that there is a conflict between the new soil layer structure and the initial conditions file. This should be the same as the original more_vertlayers, I&apos;m not sure at the moment why the original test ran.

These are both VIC tests, so the error may have something to do with that instead?

Maybe these would be a good test for the interp of vertical soil structure?</thetext>
  </long_desc><long_desc isprivate="0" >
    <commentid>7171</commentid>
    <comment_count>1</comment_count>
    <who name="Ben Andre">andre</who>
    <bug_when>2015-10-10 21:53:01 -0600</bug_when>
    <thetext>Marking these tests as expected failures for now.</thetext>
  </long_desc>
      
      

    </bug>
    <bug>
          <bug_id>2256</bug_id>
          
          <creation_ts>2015-12-10 12:07:05 -0700</creation_ts>
          <short_desc>Problems with early versions of PIO2 in CLM</short_desc>
          <delta_ts>2016-06-17 16:52:26 -0600</delta_ts>
          <reporter_accessible>1</reporter_accessible>
          <cclist_accessible>1</cclist_accessible>
          <classification_id>1</classification_id>
          <classification>Unclassified</classification>
          <product>CCSM/CESM CLM</product>
          <component>clm4.0</component>
          <version>unspecified</version>
          <rep_platform>All</rep_platform>
          <op_sys>All</op_sys>
          <bug_status>ASSIGNED</bug_status>
          <resolution></resolution>
          
          
          <bug_file_loc></bug_file_loc>
          <status_whiteboard></status_whiteboard>
          <keywords></keywords>
          <priority>P3</priority>
          <bug_severity>normal</bug_severity>
          <target_milestone>CLM5</target_milestone>
          <dependson>1730</dependson>
          
          <everconfirmed>1</everconfirmed>
          <reporter name="Erik Kluzek">erik</reporter>
          <assigned_to name="Erik Kluzek">erik</assigned_to>
          <cc>andre</cc>
    
    <cc>jedwards</cc>
    
    <cc>mvertens</cc>
    
    <cc>sacks</cc>
          
          <cf_fixedinversion></cf_fixedinversion>

      

      

      

          <comment_sort_order>oldest_to_newest</comment_sort_order>  
          <long_desc isprivate="0" >
    <commentid>7248</commentid>
    <comment_count>0</comment_count>
    <who name="Erik Kluzek">erik</who>
    <bug_when>2015-12-10 12:07:05 -0700</bug_when>
    <thetext>Most CLM tests work fine when CIKME is updated to a version that uses PIO2. But, several have problems. One problem is a hang when creating files.

Here is a list of tests that fail with PIO2 in clm4_5_6_r159

ERP_D_P4x30_Ld5.ne30_g16.ICN.yellowstone_intel.clm-40default
ERP_D_Ld5.f19_g16.ICRUCLM50BGC.yellowstone_intel.clm-fire_emis
ERP_D_Ld5.hcru_hcru.ICRUCN.yellowstone_pgi.clm-40default
SMS_D_Ld5_Mmpi-serial.5x5_amazon.ICLM45ED.yellowstone_pgi.clm-edTest
ERS_P192x1_Ld211.f19_g16.ICNDVCROP.yellowstone_intel.clm-crop
ERI_Ld9.ne30_g16.I4804.yellowstone_pgi.clm-40default

This is with cime4.3.1 which uses PIO2.0.27.</thetext>
  </long_desc><long_desc isprivate="0" >
    <commentid>7249</commentid>
    <comment_count>1</comment_count>
    <who name="Erik Kluzek">erik</who>
    <bug_when>2015-12-10 12:09:49 -0700</bug_when>
    <thetext>Removing the workaround (avoid_pnetcdf) in bug 1730 removes some issues, but not all.</thetext>
  </long_desc><long_desc isprivate="0" >
    <commentid>7250</commentid>
    <comment_count>2</comment_count>
    <who name="Erik Kluzek">erik</who>
    <bug_when>2015-12-10 12:11:27 -0700</bug_when>
    <thetext>Another workaround is to use PIO1 as follows...

cd cime/externals 
mv io pio.2
git clone https://github.com/NCAR/ParallelIO.git pio
cd pio 
git checkout pio1_9_23

The ERP_D_Ld5.f19_g16.ICRUCLM50BGC.yellowstone_intel.clm-fire_emis test was shown to work with pio1.9.23.</thetext>
  </long_desc><long_desc isprivate="0" >
    <commentid>7251</commentid>
    <comment_count>3</comment_count>
    <who name="Bill Sacks">sacks</who>
    <bug_when>2015-12-10 12:17:13 -0700</bug_when>
    <thetext>(In reply to Erik Kluzek from comment #1)
&gt; Removing the workaround (avoid_pnetcdf) in bug 1730 removes some issues, but
&gt; not all.

Does this point to a broader problem in PIO2? i.e., why does PIO2 not like it when you use netcdf for some files? Is this a problem with the netcdf interface in general, or just when you have some files that use pnetcdf and some that use netcdf? e.g., if you set the pio type to netcdf for everything, would things work fine in these cases?</thetext>
  </long_desc><long_desc isprivate="0" >
    <commentid>7252</commentid>
    <comment_count>4</comment_count>
    <who name="Jim Edwards">jedwards</who>
    <bug_when>2015-12-10 12:44:02 -0700</bug_when>
    <thetext>The problem is that in pio2 we have two rearranger methods instead of just one and the default rearranger is subset (the new one) which improves performance of pnetcdf but hurts the serial netcdf performance,   so if you want to use netcdf you should use the box rearranger.   My sandbox now appears to work without being forced to use serial netcdf for the clm history file - this will be in cime4.3.2</thetext>
  </long_desc><long_desc isprivate="0" >
    <commentid>7255</commentid>
    <comment_count>5</comment_count>
    <who name="Erik Kluzek">erik</who>
    <bug_when>2015-12-10 14:48:59 -0700</bug_when>
    <thetext>Bunch of tests fail on hobart as well, and it looks like it&apos;s this problem (a timeout that happens after the simulation is finished when it&apos;s writing a bunch of output).

RUN ERI_D_Ld9_P24x1.f10_f10.ICRUCLM50BGC.hobart_nag.clm-reduceOutput.C.151208-160543 
RUN ERP_Ld5_P24x1.f10_f10.ICRUCLM50BGC.hobart_nag.clm-reduceOutput.C.151208-160543 
RUN ERP_Ld5_P24x1.f10_f10.ICRUCLM50BGC.hobart_nag.clm-noFUN_flexCN.C.151208-160543 
RUN SMS.f10_f10.IRCP45CN.hobart_pgi.clm-reduceOutput.C.151208-160543 
RUN SMS_Ld5_D_P24x1.f10_f10.IRCP45CLM45BGC.hobart_nag.clm-decStart.C.151208-160543 
RUN ERP_D_Ld5_P24x1.f10_f10.ICLM45BGC.hobart_nag.clm-reduceOutput.C.151208-160543 
RUN ERP_D_Ld5_P24x1.f10_f10.I1850CLM45BGC.hobart_nag.clm-ciso.C.151208-160543 
RUN ERP_Ld5_P24x1.f10_f10.I1850CLM45BGC.hobart_nag.clm-default.C.151208-160543 
RUN ERP_D_Ld5.f10_f10.ICN.hobart_pgi.clm-reduceOutput.C.151208-160543 
RUN ERP_Ld5_P24x1.f10_f10.ICRUCLM50BGC.hobart_nag.clm-luna.C.151208-160543 
RUN ERP_Ld5.f10_f10.I1850CN.hobart_pgi.clm-reduceOutput.C.151208-160543 
RUN ERP_Ld5_P24x1.f10_f10.ICLM45BGC.hobart_nag.clm-reduceOutput.C.151208-160543 
RUN ERI_D_Ld9_P24x1.f10_f10.ICLM45.hobart_nag.clm-SNICARFRC.C.151208-160543 
RUN ERP_Ld5_P24x1.f10_f10.I1850CLM45BGC.hobart_nag.clm-ciso.C.151208-160543 
RUN ERI_D_Ld9_P24x1.f10_f10.ICLM45BGC.hobart_nag.clm-reduceOutput.C.151208-160543 
RUN SMS_Ld5_D_P24x1.f10_f10.IHISTCLM45BGC.hobart_nag.clm-clm50BGCmonthly.C.151208-160543 
RUN ERP_D_P24x1.f10_f10.IHISTCLM45BGC.hobart_nag.clm-decStart.C.151208-160543 
RUN ERS_D.f19_g16_gl5.IGRCP26CN.hobart_pgi.clm-reduceOutput.C.151208-160543 
RUN ERP_Ld5_P24x1.f10_f10.ICRUCLM50BGC.hobart_nag.clm-flexCN_FUN.C.151208-160543 
RUN ERP_D_Ld5_P24x1.f10_f10.I1850CLM45.hobart_nag.clm-o3.C.151208-160543 
RUN SMS_D_Ld5_Mmpi-serial.5x5_amazon.ICLM45ED.hobart_nag.clm-edTest.C.151208-160543 
RUN ERI_D_Ld9_P24x1.T31_g37.I1850CLM45.hobart_nag.clm-reduceOutput.C.151208-160543 

I verified the timeout in SMS.f10_f10.IRCP45CN.hobart_pgi.clm-reduceOutput.C.151208-160543

I haven&apos;t looked at the others. mpi-serial tests with hobart_nag were successful. And it looks like bug 2213 was fixed on hobart_nag in r158.</thetext>
  </long_desc><long_desc isprivate="0" >
    <commentid>7281</commentid>
    <comment_count>6</comment_count>
    <who name="Erik Kluzek">erik</who>
    <bug_when>2016-01-05 13:59:19 -0700</bug_when>
    <thetext>Looks like these issues get cleared up with cime4.3.9 (at least on yellowstone).</thetext>
  </long_desc><long_desc isprivate="0" >
    <commentid>7295</commentid>
    <comment_count>7</comment_count>
    <who name="Erik Kluzek">erik</who>
    <bug_when>2016-01-07 17:27:35 -0700</bug_when>
    <thetext>OK, on hobart with clm4_5_7_r164 with cime4.3.9 I still have a list of failures due to the run taking too long (over 2 hours). All of these should finish in a much shorter time than that as they are short simulations. Other cases run to completion in a much shorter time.

ERI_D_Ld9_P24x1.f10_f10.ICRUCLM50BGC.hobart_nag.clm-reduceOutput.GC.160106-153439
=&gt;&gt; PBS: job killed: walltime 7215 exceeded limit 7200
ERP_Ld5_P24x1.f10_f10.ICRUCLM50BGC.hobart_nag.clm-reduceOutput.GC.160106-153439
=&gt;&gt; PBS: job killed: walltime 7207 exceeded limit 7200
ERP_Ld5_P24x1.f10_f10.ICRUCLM50BGC.hobart_nag.clm-noFUN_flexCN.GC.160106-153439
=&gt;&gt; PBS: job killed: walltime 7233 exceeded limit 7200
SMS_Ld5_D_P24x1.f10_f10.IRCP45CLM45BGC.hobart_nag.clm-decStart.GC.160106-153439
=&gt;&gt; PBS: job killed: walltime 7233 exceeded limit 7200
ERP_D_Ld5_P24x1.f10_f10.ICLM45BGC.hobart_nag.clm-reduceOutput.GC.160106-153439
=&gt;&gt; PBS: job killed: walltime 7207 exceeded limit 7200
ERP_D_Ld5_P24x1.f10_f10.I1850CLM45BGC.hobart_nag.clm-ciso.GC.160106-153439
=&gt;&gt; PBS: job killed: walltime 7232 exceeded limit 7200
ERP_Ld5_P24x1.f10_f10.I1850CLM45BGC.hobart_nag.clm-default.GC.160106-153439
=&gt;&gt; PBS: job killed: walltime 7233 exceeded limit 7200
ERP_Ld5_P24x1.f10_f10.ICRUCLM50BGC.hobart_nag.clm-luna.GC.160106-153439
=&gt;&gt; PBS: job killed: walltime 7241 exceeded limit 7200
ERP_Ld5_P24x1.f10_f10.ICLM45BGC.hobart_nag.clm-reduceOutput.GC.160106-153439
=&gt;&gt; PBS: job killed: walltime 7233 exceeded limit 7200
ERI_D_Ld9_P24x1.f10_f10.ICLM45.hobart_nag.clm-SNICARFRC.GC.160106-153439
=&gt;&gt; PBS: job killed: walltime 7204 exceeded limit 7200
ERP_Ld5_P24x1.f10_f10.I1850CLM45BGC.hobart_nag.clm-ciso.GC.160106-153439
=&gt;&gt; PBS: job killed: walltime 7232 exceeded limit 7200
ERI_D_Ld9_P24x1.f10_f10.ICLM45BGC.hobart_nag.clm-reduceOutput.GC.160106-153439
=&gt;&gt; PBS: job killed: walltime 7234 exceeded limit 7200
SMS_Ld5_D_P24x1.f10_f10.IHISTCLM45BGC.hobart_nag.clm-clm50BGCmonthly.GC.160106-153439
=&gt;&gt; PBS: job killed: walltime 7233 exceeded limit 7200
ERP_D_P24x1.f10_f10.IHISTCLM45BGC.hobart_nag.clm-decStart.GC.160106-153439
=&gt;&gt; PBS: job killed: walltime 7237 exceeded limit 7200
ERP_Ld5_P24x1.f10_f10.ICRUCLM50BGC.hobart_nag.clm-flexCN_FUN.GC.160106-153439
=&gt;&gt; PBS: job killed: walltime 7209 exceeded limit 7200
ERP_D_Ld5_P24x1.f10_f10.I1850CLM45.hobart_nag.clm-o3.GC.160106-153439
=&gt;&gt; PBS: job killed: walltime 7204 exceeded limit 7200
ERI_D_Ld9_P24x1.T31_g37.I1850CLM45.hobart_nag.clm-reduceOutput.GC.160106-153439
=&gt;&gt; PBS: job killed: walltime 7204 exceeded limit 7200</thetext>
  </long_desc><long_desc isprivate="0" >
    <commentid>7296</commentid>
    <comment_count>8</comment_count>
    <who name="Jim Edwards">jedwards</who>
    <bug_when>2016-01-07 20:16:43 -0700</bug_when>
    <thetext>
It appears that someone (Bill Sacks according to svn blame) commented out the initdecomp at line 2394 of ncdio_pio.F90.in and replaced it with the older PIO_REARR_BOX version.  The variable LEVGRND_CLASS is causing initdecomp to 
hang when using the PIO_REARR_BOX - this is a bug, but the immediate work around is
to replace this call with the PIO_REARR_SUBSET version.</thetext>
  </long_desc><long_desc isprivate="0" >
    <commentid>7297</commentid>
    <comment_count>9</comment_count>
    <who name="Jim Edwards">jedwards</who>
    <bug_when>2016-01-07 20:29:49 -0700</bug_when>
    <thetext>(In reply to Jim Edwards from comment #8)
&gt; It appears that someone (Bill Sacks according to svn blame) commented out
&gt; the initdecomp at line 2394 of ncdio_pio.F90.in and replaced it with the
&gt; older PIO_REARR_BOX version.  The variable LEVGRND_CLASS is causing
&gt; initdecomp to 
&gt; hang when using the PIO_REARR_BOX - this is a bug, but the immediate work
&gt; around is
&gt; to replace this call with the PIO_REARR_SUBSET version.

I wonder if this also explains the degraded performance that Bill reported recently?</thetext>
  </long_desc><long_desc isprivate="0" >
    <commentid>7298</commentid>
    <comment_count>10</comment_count>
    <who name="Erik Kluzek">erik</who>
    <bug_when>2016-01-07 22:54:09 -0700</bug_when>
    <thetext>(In reply to Jim Edwards from comment #8)
&gt; It appears that someone (Bill Sacks according to svn blame) commented out
&gt; the initdecomp at line 2394 of ncdio_pio.F90.in and replaced it with the
&gt; older PIO_REARR_BOX version.  The variable LEVGRND_CLASS is causing
&gt; initdecomp to 
&gt; hang when using the PIO_REARR_BOX - this is a bug, but the immediate work
&gt; around is
&gt; to replace this call with the PIO_REARR_SUBSET version.

Jim this was the commit of the pio2 branch that Bill brought to the CLM trunk in December of 2014.

------------------------------------------------------------------------
r65959 | sacks | 2014-12-03 06:24:30 -0700 (Wed, 03 Dec 2014) | 1 line

merge changes from pio2_dev2 branch: update pio calls to pio2 API

I&apos;ll try a few with the PIO_REARR_SUBSET option and see if that goes.</thetext>
  </long_desc><long_desc isprivate="0" >
    <commentid>7299</commentid>
    <comment_count>11</comment_count>
    <who name="Erik Kluzek">erik</who>
    <bug_when>2016-01-08 00:08:24 -0700</bug_when>
    <thetext>OK, giving more time to the job does NOT work, but using SUBSET rearranger does! I&apos;ll see if the other cases work that failed.</thetext>
  </long_desc><long_desc isprivate="0" >
    <commentid>7300</commentid>
    <comment_count>12</comment_count>
    <who name="Bill Sacks">sacks</who>
    <bug_when>2016-01-08 05:52:02 -0700</bug_when>
    <thetext>Yes, the initdecomp change was actually Jim&apos;s change. I just brought it to the trunk for him. Jim made this change in revision 64202.</thetext>
  </long_desc><long_desc isprivate="0" >
    <commentid>7301</commentid>
    <comment_count>13</comment_count>
    <who name="Jim Edwards">jedwards</who>
    <bug_when>2016-01-08 07:46:48 -0700</bug_when>
    <thetext>I extracted the decomp for variable LEVGRND_CLASS and ran it in the PIO standalone test suite.  Not only does it work fine for both PIO_REARR_BOX and PIO_REARR_SUBSET, but there is also no notable difference in performance.  I will continue to investigate.</thetext>
  </long_desc><long_desc isprivate="0" >
    <commentid>7302</commentid>
    <comment_count>14</comment_count>
    <who name="Erik Kluzek">erik</who>
    <bug_when>2016-01-08 10:05:07 -0700</bug_when>
    <thetext>OK changing PIO REARR to SUBSET allows all the cases on hobart that failed to work successfully.</thetext>
  </long_desc><long_desc isprivate="0" >
    <commentid>7303</commentid>
    <comment_count>15</comment_count>
    <who name="Erik Kluzek">erik</who>
    <bug_when>2016-01-08 14:41:33 -0700</bug_when>
    <thetext>OK, I redid several tests, both on hobart and yellowstone and most (sans-1) ran OK. Although it looks like performance is abysmal for SUBSET, so I&apos;m not sure we want to use it just for that reason. It looks like to me that the performance of PIO2 for CLM is poor compared to PIO1, and subset is even worse.

But, the following KitchenSink test fails on yellowstone...

SMS_Lm1.f09_g16_gl5.IG1850CRUCLM50BGC.yellowstone_intel.clm-clm50KitchenSink

with the following error...

 601:Open file /glade/p/cesm/lmwg/atm_forcing.datm7.cruncep_qianFill.0.5d.V4.c130305/TPHWL6Hrly/clmforc.cruncep.V4.c2011.0.5d.TPQWL.1901-01.nc 0
   1:Abort(1) on node 1 (rank 1 in comm 1140850688): Fatal error in MPI_Recv: Message truncated, error stack:
   1:MPIDI_Buffer_copy(73): Message truncated; 24 bytes received but buffer size is 12
   1:INFO: 0031-306  pm_atexit: pm_exit_value is 1.
INFO: 0031-251  task 1 exited: rc=1
ERROR: 0031-300  Forcing all remote tasks to exit due to exit code 1 in task 1</thetext>
  </long_desc><long_desc isprivate="0" >
    <commentid>7308</commentid>
    <comment_count>16</comment_count>
    <who name="Erik Kluzek">erik</who>
    <bug_when>2016-01-12 12:06:57 -0700</bug_when>
    <thetext>OK, clm4_5_7_r164 updates to cime4.3.9 and also uses the setting of LND_PIO_REARRANGER rather than hardcoding the rearranger in CLM source (SUBSET for clm40 and BOX for clm45/clm50). The default for LND_PIO_REARRANGER is the same as before. Our testing on hobart runs with some tests set to SUBSET for clm45/clm50 tests that failed. So testing works.</thetext>
  </long_desc><long_desc isprivate="0" >
    <commentid>7329</commentid>
    <comment_count>17</comment_count>
    <who name="Bill Sacks">sacks</who>
    <bug_when>2016-01-28 11:17:44 -0700</bug_when>
    <thetext>In my branch off of r164, these tests take &gt; 10 hours to complete. I am putting them in the xfail list since I don&apos;t typically allow that much time for tests in the test suite:

ERP_D_P4x30_Ld5.ne30_g16.ICN.yellowstone_intel.clm-40default
ERS_P192x1_Ld211.f19_g16.ICNDVCROP.yellowstone_intel.clm-crop</thetext>
  </long_desc><long_desc isprivate="0" >
    <commentid>7413</commentid>
    <comment_count>18</comment_count>
    <who name="Bill Sacks">sacks</who>
    <bug_when>2016-03-17 14:07:28 -0600</bug_when>
    <thetext>For the workaround in comment2 (using pio1) to work for me (on hobart-nag), I needed to set PIO_REARRANGER to 1; it didn&apos;t work to set LND_PIO_REARRANGER to 1.</thetext>
  </long_desc><long_desc isprivate="0" >
    <commentid>7414</commentid>
    <comment_count>19</comment_count>
    <who name="Bill Sacks">sacks</who>
    <bug_when>2016-03-17 14:11:33 -0600</bug_when>
    <thetext>This test now fails consistently with the pio2 version in CLM, in my branch slated to become r173:

ERP_Ly5.1x1_numaIA.ICRUCLM50BGCCROP.hobart_nag.clm-monthly


It looks like it&apos;s dying when writing the .rh1 file.

It passes with pio1, using the workarounds documented in comment 2 and comment 18. A debug version of that test passes with pio2, and both production and debug versions pass with pio2 with all 3 yellowstone compilers. I&apos;m not sure why this started failing all of a sudden.

In addition, this test fails about half the time now; again, I can&apos;t tell why the changes on my branch would trigger these sporadic failures:

ERP_Ld5_P24x1.f10_f10.I1850CLM45BGC.hobart_nag.clm-default

When it fails, it seems to be in writing the .h1 file. Oddly, one traceback pointed to a death in the pnetcdf library, despite the fact that there was a message from CLM saying that it was using the workaround for bug 1730: using netcdf rather than pnetcdf.</thetext>
  </long_desc><long_desc isprivate="0" >
    <commentid>7555</commentid>
    <comment_count>20</comment_count>
    <who name="Erik Kluzek">erik</who>
    <bug_when>2016-06-17 16:52:26 -0600</bug_when>
    <thetext>In clm4_5_8_r181 you can now choose to use PIO1 or PIO2 and PIO1 is the default.</thetext>
  </long_desc>
      
      

    </bug>
    <bug>
          <bug_id>2265</bug_id>
          
          <creation_ts>2016-01-07 15:24:19 -0700</creation_ts>
          <short_desc>Work around for PIO2 issue with syncfile in cime4.3.9</short_desc>
          <delta_ts>2016-01-12 11:54:07 -0700</delta_ts>
          <reporter_accessible>1</reporter_accessible>
          <cclist_accessible>1</cclist_accessible>
          <classification_id>1</classification_id>
          <classification>Unclassified</classification>
          <product>CCSM/CESM CLM</product>
          <component>CLM 4.5</component>
          <version>CESM1.4.z Development</version>
          <rep_platform>All</rep_platform>
          <op_sys>All</op_sys>
          <bug_status>ASSIGNED</bug_status>
          <resolution></resolution>
          
          
          <bug_file_loc></bug_file_loc>
          <status_whiteboard></status_whiteboard>
          <keywords></keywords>
          <priority>P3</priority>
          <bug_severity>normal</bug_severity>
          <target_milestone>CLM5</target_milestone>
          <dependson>2261</dependson>
          
          <everconfirmed>1</everconfirmed>
          <reporter name="Erik Kluzek">erik</reporter>
          <assigned_to name="Erik Kluzek">erik</assigned_to>
          <cc>jedwards</cc>
    
    <cc>rfisher</cc>
    
    <cc>sacks</cc>
          
          <cf_fixedinversion></cf_fixedinversion>

      

      

      

          <comment_sort_order>oldest_to_newest</comment_sort_order>  
          <long_desc isprivate="0" >
    <commentid>7291</commentid>
    <comment_count>0</comment_count>
    <who name="Erik Kluzek">erik</who>
    <bug_when>2016-01-07 15:24:19 -0700</bug_when>
    <thetext>The whole story of this is given in bug 2261. But, the version of PIO2 in cime4.3.9 has an issue in pio_syncfile when you write to a file twice.

Here&apos;s the summary of what&apos;s going on from that bug report.

Abort with message Attempt to overwrite existing io buffer in file /glade/scratch/erik/clm_upcime/cime/externals/pio/src/clib/pio_darray.c at line 679
Obtained 10 stack frames.

The issue is that SNLSNO is read in, written, and then read in and then written out a second time. Bill and Jim and I discussed this over and Jim will fix this issue for PIO2 (and Bill created a branch for him to test the fix in).

The work around we&apos;ve added is to close the file before limit_snlsno is done and that works. Jim also has a fix to PIO2 that will also be in an upcoming CIME tag.</thetext>
  </long_desc><long_desc isprivate="0" >
    <commentid>7306</commentid>
    <comment_count>1</comment_count>
    <who name="Erik Kluzek">erik</who>
    <bug_when>2016-01-12 11:51:16 -0700</bug_when>
    <thetext>Workaround put into place into clm4_5_7_r164</thetext>
  </long_desc><long_desc isprivate="0" >
    <commentid>7307</commentid>
    <comment_count>2</comment_count>
    <who name="Jim Edwards">jedwards</who>
    <bug_when>2016-01-12 11:54:07 -0700</bug_when>
    <thetext>Fixed in cime4.3.12</thetext>
  </long_desc>
      
      

    </bug>
    <bug>
          <bug_id>2266</bug_id>
          
          <creation_ts>2016-01-08 15:43:37 -0700</creation_ts>
          <short_desc>Changes to remove switchdim in ncdio_pio</short_desc>
          <delta_ts>2016-01-11 11:20:39 -0700</delta_ts>
          <reporter_accessible>1</reporter_accessible>
          <cclist_accessible>1</cclist_accessible>
          <classification_id>1</classification_id>
          <classification>Unclassified</classification>
          <product>CCSM/CESM CLM</product>
          <component>CLM 4.5</component>
          <version>CESM1.4.z Development</version>
          <rep_platform>All</rep_platform>
          <op_sys>All</op_sys>
          <bug_status>ASSIGNED</bug_status>
          <resolution></resolution>
          
          
          <bug_file_loc></bug_file_loc>
          <status_whiteboard></status_whiteboard>
          <keywords></keywords>
          <priority>P2</priority>
          <bug_severity>enhancement</bug_severity>
          <target_milestone>CLM5</target_milestone>
          
          
          <everconfirmed>1</everconfirmed>
          <reporter name="Erik Kluzek">erik</reporter>
          <assigned_to name="Erik Kluzek">erik</assigned_to>
          <cc>jedwards</cc>
    
    <cc>rfisher</cc>
          
          <cf_fixedinversion></cf_fixedinversion>

      

      

      

          <comment_sort_order>oldest_to_newest</comment_sort_order>  
          <long_desc isprivate="0" >
    <commentid>7304</commentid>
    <comment_count>0</comment_count>
    <who name="Erik Kluzek">erik</who>
    <bug_when>2016-01-08 15:43:37 -0700</bug_when>
    <thetext>These are changes from Jim Edwards to remove the switchdim logic in ncd_pio.F90 for clm4_5_7_r163.

[erik@hobart SMS_Ld5_D_P24x1.f10_f10.IHISTCLM45BGC.hobart_nag.clm-clm50BGCmonthly.GC.160106-153439]$ diff $MYGLDCSEG/clm_trunk/components/clm/src/main/ncdio_pio.F90.in /home/jedwards/cesm1_5_alpha/components/clm/src/main/ncdio_pio.F90.in 
363c363
&lt;           write(iulog,&apos;(a)&apos;) msg
---
&gt;           write(iulog,*) msg
1717d1716
&lt;        allocate(temp(lb2:ub2,lb1:ub1))
1742a1742
&gt;                 allocate(temp(lb2:ub2,lb1:ub1))
1748a1749
&gt;                 deallocate(temp)
1779,1788c1780
&lt;              if (present(switchdim)) then
&lt;                 call pio_read_darray(ncid, vardesc, iodesc_plus%iodesc, temp, status)
&lt;                 do j = lb2,ub2
&lt;                 do i = lb1,ub1
&lt;                    data(i,j) = temp(j,i) 
&lt;                 end do
&lt;                 end do
&lt;              else
&lt;                 call pio_read_darray(ncid, vardesc, iodesc_plus%iodesc, data, status)
&lt;              end if
---
&gt;              call pio_read_darray(ncid, vardesc, iodesc_plus%iodesc, data, status)
1833,1839d1824
&lt;        if (present(switchdim)) then
&lt;           do j = lb2,ub2
&lt;              do i = lb1,ub1
&lt;                 temp(j,i) = data(i,j)
&lt;              end do
&lt;           end do
&lt;        end if
1841,1845c1826
&lt;        if (present(switchdim)) then
&lt;           call pio_write_darray(ncid, vardesc, iodesc_plus%iodesc, temp, status, fillval=0)
&lt;        else
&lt;           call pio_write_darray(ncid, vardesc, iodesc_plus%iodesc, data, status, fillval=0)
&lt;        end if
---
&gt;        call pio_write_darray(ncid, vardesc, iodesc_plus%iodesc, data, status, fillval=0)
1847,1851c1828
&lt;        if (present(switchdim)) then
&lt;           call pio_write_darray(ncid, vardesc, iodesc_plus%iodesc, temp, status, fillval=spval)
&lt;        else
&lt;           call pio_write_darray(ncid, vardesc, iodesc_plus%iodesc, data, status, fillval=spval)
&lt;        end if
---
&gt;        call pio_write_darray(ncid, vardesc, iodesc_plus%iodesc, data, status, fillval=spval)
1872,1875d1848
&lt;     if (present(switchdim)) then
&lt;        deallocate(temp)
&lt;     end if
&lt; 
2342,2343c2315,2316
&lt;           do m = 1,gsmap_lsize
&lt;              do n = 1,vsize
---
&gt;           do n = 1,vsize
&gt;              do m = 1,gsmap_lsize</thetext>
  </long_desc>
      
      

    </bug>
    <bug>
          <bug_id>2269</bug_id>
          
          <creation_ts>2016-01-19 12:04:26 -0700</creation_ts>
          <short_desc>log(0) possibility on respmods branch...</short_desc>
          <delta_ts>2016-01-21 15:18:25 -0700</delta_ts>
          <reporter_accessible>1</reporter_accessible>
          <cclist_accessible>1</cclist_accessible>
          <classification_id>1</classification_id>
          <classification>Unclassified</classification>
          <product>CCSM/CESM CLM</product>
          <component>CLM 5.0</component>
          <version>unspecified</version>
          <rep_platform>All</rep_platform>
          <op_sys>All</op_sys>
          <bug_status>ASSIGNED</bug_status>
          <resolution></resolution>
          
          
          <bug_file_loc></bug_file_loc>
          <status_whiteboard></status_whiteboard>
          <keywords></keywords>
          <priority>P3</priority>
          <bug_severity>normal</bug_severity>
          <target_milestone>CLM5</target_milestone>
          
          
          <everconfirmed>1</everconfirmed>
          <reporter name="Erik Kluzek">erik</reporter>
          <assigned_to name="Erik Kluzek">erik</assigned_to>
          <cc>dlawren</cc>
    
    <cc>hannay</cc>
    
    <cc>oleson</cc>
    
    <cc>rfisher</cc>
          
          <cf_fixedinversion></cf_fixedinversion>

      

      

      

          <comment_sort_order>oldest_to_newest</comment_sort_order>  
          <long_desc isprivate="0" >
    <commentid>7313</commentid>
    <comment_count>0</comment_count>
    <who name="Erik Kluzek">erik</who>
    <bug_when>2016-01-19 12:04:26 -0700</bug_when>
    <thetext>I have several cases that fail on the respmods branch and it looks like to be due to the following issue in PhotosynthesisMod.F90

The Atkins leafresp method has the following...

            else if ( leafresp_method == leafresp_mtd_atkin2015 ) then
            ! Alternative calculation for (higher) leaf maintenance respiration (Rdark)
            ! Taken from Atkin et al. (2015) New Phytologist meta analysis.
            ! Slope values from table S3 for N_area vs Rd_area for all plants with 
            ! growth temp 20-25C (to avoid confusion from acclimation processes). 
            ! Other slope values are potentially availble from that paper. 
            ! This is the simplest implementation. NB. THIS COULD BE INSIDE A SWITCH. 
               lmr25top = 10._r8**(-0.256_r8+log10(lnc(p))*1.141_r8)


But, note that before that lnc(p) CAN be set to zero as follows...
            if (tlai(p) &gt; 0.0_r8 .AND. sum_nscaler &gt; 0.0_r8) then
               ! dividing by LAI to convert total leaf nitrogen
               ! from m2 ground to m2 leaf; dividing by sum_nscaler to
               ! convert total leaf N to leaf N at canopy top
               lnc(p) = cnveg_nitrogenstate_inst%leafn_patch(p) / (tlai(p) * sum_nscaler)
               ! NOTE(bja, 2015-11) can not associate leafn_patch to a
               ! shorter name because leafn_patch may not be
               ! allocated, e.g. SP runs. Using an associate with
               ! unallocated memory results in a NAG runtime error.
            else
               lnc(p) = 0.0_r8
            end if

So for the Atkin&apos;s case lnc(p) must be set to something at least slightly positive.</thetext>
  </long_desc><long_desc isprivate="0" >
    <commentid>7314</commentid>
    <comment_count>1</comment_count>
    <who name="Erik Kluzek">erik</who>
    <bug_when>2016-01-19 14:42:59 -0700</bug_when>
    <thetext>OK, I added a simple check for lnc(p) exactly zero and if so set lmr25top to zero, and that seems to work.</thetext>
  </long_desc><long_desc isprivate="0" >
    <commentid>7322</commentid>
    <comment_count>2</comment_count>
    <who name="Erik Kluzek">erik</who>
    <bug_when>2016-01-21 15:18:25 -0700</bug_when>
    <thetext>The following case fails even with the protection against divide by zero...

ERP_D_Ld5.f19_g16.ICRUCLM50BGC.yellowstone_intel.clm-fire_emis

it looks like it&apos;s on the log10 call as well, so I think that means that lnc(p) must be either negative or infinity.</thetext>
  </long_desc>
      
      

    </bug>
    <bug>
          <bug_id>2271</bug_id>
          
          <creation_ts>2016-01-21 12:27:53 -0700</creation_ts>
          <short_desc>CLM history file name length too short</short_desc>
          <delta_ts>2016-01-21 12:27:53 -0700</delta_ts>
          <reporter_accessible>1</reporter_accessible>
          <cclist_accessible>1</cclist_accessible>
          <classification_id>1</classification_id>
          <classification>Unclassified</classification>
          <product>CCSM/CESM CLM</product>
          <component>CLM 5.0</component>
          <version>unspecified</version>
          <rep_platform>All</rep_platform>
          <op_sys>All</op_sys>
          <bug_status>NEW</bug_status>
          <resolution></resolution>
          
          
          <bug_file_loc></bug_file_loc>
          <status_whiteboard></status_whiteboard>
          <keywords></keywords>
          <priority>P3</priority>
          <bug_severity>normal</bug_severity>
          <target_milestone>CLM5</target_milestone>
          
          
          <everconfirmed>1</everconfirmed>
          <reporter name="Alice Bertini">aliceb</reporter>
          <assigned_to name="Erik Kluzek">erik</assigned_to>
          <cc>rfisher</cc>
    
    <cc>sacks</cc>
          
          <cf_fixedinversion></cf_fixedinversion>

      

      

      

          <comment_sort_order>oldest_to_newest</comment_sort_order>  
          <long_desc isprivate="0" >
    <commentid>7321</commentid>
    <comment_count>0</comment_count>
    <who name="Alice Bertini">aliceb</who>
    <bug_when>2016-01-21 12:27:53 -0700</bug_when>
    <thetext>The length for the history filenames for CLM (and subsequently RTM and MOSART which 
used copies of some of the CLM code) are too short when running the CESM tests with long test names. This limitation causes some tests to fail. Ben investigated the CLM code and found the filename length to be hardcoded in numerous places and even reached into other shared code like PIO. The linux file system allows for filenames of up to 255 characters, excluding the full path. The current limit in CLM and RTM and MOSART is set to 150 characters.

This is a problem across all test machines.</thetext>
  </long_desc>
      
      

    </bug>
    <bug>
          <bug_id>2272</bug_id>
          
          <creation_ts>2016-01-21 18:26:43 -0700</creation_ts>
          <short_desc>PIO issue for 5x5amazon CLM45ED case</short_desc>
          <delta_ts>2016-01-28 11:23:54 -0700</delta_ts>
          <reporter_accessible>1</reporter_accessible>
          <cclist_accessible>1</cclist_accessible>
          <classification_id>1</classification_id>
          <classification>Unclassified</classification>
          <product>CCSM/CESM CLM</product>
          <component>CLM 4.5</component>
          <version>unspecified</version>
          <rep_platform>All</rep_platform>
          <op_sys>All</op_sys>
          <bug_status>ASSIGNED</bug_status>
          <resolution></resolution>
          
          
          <bug_file_loc></bug_file_loc>
          <status_whiteboard></status_whiteboard>
          <keywords></keywords>
          <priority>P3</priority>
          <bug_severity>normal</bug_severity>
          <target_milestone>CLM5</target_milestone>
          
          
          <everconfirmed>1</everconfirmed>
          <reporter name="Erik Kluzek">erik</reporter>
          <assigned_to name="Erik Kluzek">erik</assigned_to>
          <cc>rfisher</cc>
    
    <cc>sacks</cc>
          
          <cf_fixedinversion></cf_fixedinversion>

      

      

      

          <comment_sort_order>oldest_to_newest</comment_sort_order>  
          <long_desc isprivate="0" >
    <commentid>7323</commentid>
    <comment_count>0</comment_count>
    <who name="Erik Kluzek">erik</who>
    <bug_when>2016-01-21 18:26:43 -0700</bug_when>
    <thetext>The following test fails in clm4_5_7_r164

SMS_D_Ld5_Mmpi-serial.5x5_amazon.ICLM45ED.yellowstone_pgi.clm-edTest

From totalview looks like it&apos;s in GPTLstart called from PIO line 1072 of pio_read_darray_nc which skipping a few steps gets called
from line 544 of initVerticalMod.F90 in CLM</thetext>
  </long_desc><long_desc isprivate="0" >
    <commentid>7330</commentid>
    <comment_count>1</comment_count>
    <who name="Bill Sacks">sacks</who>
    <bug_when>2016-01-28 11:23:54 -0700</bug_when>
    <thetext>This similar test on hobart_nag also dies with a segmentation fault:

SMS_D_Ld5_Mmpi-serial.5x5_amazon.ICLM45ED.hobart_nag.clm-edTest</thetext>
  </long_desc>
      
      

    </bug>
    <bug>
          <bug_id>2281</bug_id>
          
          <creation_ts>2016-02-05 13:06:42 -0700</creation_ts>
          <short_desc>Missing values for ALL history variables for ALL time-samples other than the first</short_desc>
          <delta_ts>2017-10-17 10:13:08 -0600</delta_ts>
          <reporter_accessible>1</reporter_accessible>
          <cclist_accessible>1</cclist_accessible>
          <classification_id>1</classification_id>
          <classification>Unclassified</classification>
          <product>CCSM/CESM CLM</product>
          <component>CLM 4.5</component>
          <version>CESM1.4.z Development</version>
          <rep_platform>All</rep_platform>
          <op_sys>All</op_sys>
          <bug_status>ASSIGNED</bug_status>
          <resolution></resolution>
          
          
          <bug_file_loc></bug_file_loc>
          <status_whiteboard></status_whiteboard>
          <keywords></keywords>
          <priority>P3</priority>
          <bug_severity>normal</bug_severity>
          <target_milestone>CLM5</target_milestone>
          
          
          <everconfirmed>1</everconfirmed>
          <reporter name="Erik Kluzek">erik</reporter>
          <assigned_to name="Erik Kluzek">erik</assigned_to>
          <cc>andre</cc>
    
    <cc>dlawren</cc>
    
    <cc>dll</cc>
    
    <cc>oleson</cc>
    
    <cc>rfisher</cc>
    
    <cc>sacks</cc>
    
    <cc>tomas</cc>
          
          <cf_fixedinversion></cf_fixedinversion>

      

      

      

          <comment_sort_order>oldest_to_newest</comment_sort_order>  
          <long_desc isprivate="0" >
    <commentid>7337</commentid>
    <comment_count>0</comment_count>
    <who name="Erik Kluzek">erik</who>
    <bug_when>2016-02-05 13:06:42 -0700</bug_when>
    <thetext>I see this issue with the following test case in clm4_5_7_r164

SMS_D_Ld10_Mmpi-serial.CLM_USRDAT.I1PTCLM45.yellowstone_pgi.clm-USUMB

with the following change added to user_nl_clm...

 hist_fincl2 = &apos;TLAI&apos;
 hist_nhtfrq = -24,-24
 hist_mfilt  = 3,3

And the problem occurs for both the h0 and h1 files. All time-samples other than the first for all history variables are set to missing value. So for example on the h1 files...

 TLAI =
  0,
  _,
  _ ;

So the workaround for now is to keep hist_mfilt at 1.</thetext>
  </long_desc><long_desc isprivate="0" >
    <commentid>7338</commentid>
    <comment_count>1</comment_count>
    <who name="Erik Kluzek">erik</who>
    <bug_when>2016-02-05 13:32:53 -0700</bug_when>
    <thetext>I do NOT, get this behavior in clm4_5_6_r158. Rosie indicated she didn&apos;t see this in respmods_n01_clm4_5_6_r160. PIO2 first came in clm4_5_6_r159, with another update in clm4_5_7_r164. So I tried clm4_5_7_r163 and I do NOT see the behavior there. So it looks like this is an issue with the version of PIO2 used in cime4.3.9 (the update between r163 and r164 was to update cime).</thetext>
  </long_desc><long_desc isprivate="0" >
    <commentid>7339</commentid>
    <comment_count>2</comment_count>
    <who name="Erik Kluzek">erik</who>
    <bug_when>2016-02-05 14:46:09 -0700</bug_when>
    <thetext>OK, I tried a case updated to the latest trunk tag clm4_5_7_r166 where I updated cime to cime4.4.3. The exact same case fails, (because of unrelated surface dataset issues) but I did a similar case...

SMS_D_Ld10_Mmpi-serial.1x1_brazil.ICRUCLM45.yellowstone_pgi

and that works! The default there is PIO1, but I also tried it with PIO2 and that works as well. So it looks like both PIO1 and PIO2 that&apos;s in cime4.4.3 is more robust than the version being used in the latest clm trunk tags.</thetext>
  </long_desc><long_desc isprivate="0" >
    <commentid>8262</commentid>
    <comment_count>3</comment_count>
    <who name="Bill Sacks">sacks</who>
    <bug_when>2017-10-17 10:13:08 -0600</bug_when>
    <thetext>Erik, should this be marked as resolved?</thetext>
  </long_desc>
      
      

    </bug>
    <bug>
          <bug_id>2286</bug_id>
          
          <creation_ts>2016-02-19 09:14:14 -0700</creation_ts>
          <short_desc>Answer changes by PE layout for some longish BGCCROP simulations</short_desc>
          <delta_ts>2016-02-20 19:52:45 -0700</delta_ts>
          <reporter_accessible>1</reporter_accessible>
          <cclist_accessible>1</cclist_accessible>
          <classification_id>1</classification_id>
          <classification>Unclassified</classification>
          <product>CCSM/CESM CLM</product>
          <component>CLM 4.5</component>
          <version>unspecified</version>
          <rep_platform>All</rep_platform>
          <op_sys>All</op_sys>
          <bug_status>ASSIGNED</bug_status>
          <resolution></resolution>
          
          
          <bug_file_loc></bug_file_loc>
          <status_whiteboard></status_whiteboard>
          <keywords></keywords>
          <priority>P3</priority>
          <bug_severity>normal</bug_severity>
          <target_milestone>CLM5</target_milestone>
          <dependson>1993</dependson>
          
          <everconfirmed>1</everconfirmed>
          <reporter name="Erik Kluzek">erik</reporter>
          <assigned_to name="Erik Kluzek">erik</assigned_to>
          <cc>andre</cc>
    
    <cc>dlawren</cc>
    
    <cc>rfisher</cc>
    
    <cc>sacks</cc>
    
    <cc>swensosc</cc>
          
          <cf_fixedinversion></cf_fixedinversion>

      

      

      

          <comment_sort_order>oldest_to_newest</comment_sort_order>  
          <long_desc isprivate="0" >
    <commentid>7356</commentid>
    <comment_count>0</comment_count>
    <who name="Erik Kluzek">erik</who>
    <bug_when>2016-02-19 09:14:14 -0700</bug_when>
    <thetext>I found this in clm4_5_7_r166, but probably goes before it. It&apos;s probably also OK (so will likely close as a WONTFIX), but I want to document it.

When changing the PE layout from the default of a sequential 180x1 to a concurrent 540x1 (clm) and 30x1 (datm) answers change as follows...

For SMS_Ld5.f19_g16.IRCP45CLM45BGC.yellowstone_intel.clm-decStart

--- Baseline Comparison ---: 
FAIL SMS_Ld5.f19_g16.IRCP45CLM45BGC.yellowstone_intel.clm-decStart.clm2.h0.nc : baseline compare clm2.h0 (baseline: compare .base file with clm4_5_7_r166 file) 
PASS SMS_Ld5.f19_g16.IRCP45CLM45BGC.yellowstone_intel.clm-decStart.clm2.h1.nc : baseline compare clm2.h1 (baseline: compare .base file with clm4_5_7_r166 file) 
FAIL SMS_Ld5.f19_g16.IRCP45CLM45BGC.yellowstone_intel.clm-decStart.cpl.hi.nc : baseline compare cpl.hi (baseline: compare .base file with clm4_5_7_r166 file) 
PASS SMS_Ld5.f19_g16.IRCP45CLM45BGC.yellowstone_intel.clm-decStart.rtm.h0.nc : baseline compare rtm.h0 (baseline: compare .base file with clm4_5_7_r166 file) 
FAIL SMS_Ld5.f19_g16.IRCP45CLM45BGC.yellowstone_intel.clm-decStart : baseline compare summary (baseline: compare .base file with clm4_5_7_r166 file) 

[erik@yslogin1 scripts]$ grep RMS SMS_Ld5.f19_g16.IRCP45CLM45BGC.yellowstone_intel.clm-decStart.C.160219-001241/TestStatus.log 
   RMS TWS                              1.2087E-14            NORMALIZED  7.2685E-19
    RMS VOLR                             1.5567E-06            NORMALIZED  4.1736E-15
    RMS VOLRMCH                          1.5567E-06            NORMALIZED  4.1736E-15
   RMS x2l_Flrr_volr                    9.5518E-18            NORMALIZED  1.4040E-15
    RMS x2l_Flrr_volrmch                 9.5518E-18            NORMALIZED  1.4040E-15

I&apos;m also testing longer cases to make sure the signal looks similar.</thetext>
  </long_desc><long_desc isprivate="0" >
    <commentid>7360</commentid>
    <comment_count>1</comment_count>
    <who name="Erik Kluzek">erik</who>
    <bug_when>2016-02-19 11:26:01 -0700</bug_when>
    <thetext>It does get worse for longer simulations....

FAIL SMS_Lm25.f19_g16.ICLM45BGCCROP.yellowstone_gnu.clm-cropMonthOutput.clm2.h0.nc : baseline compare clm2.h0 (baseline: compare .base file with clm4_5_7_r166 file) 
FAIL SMS_Lm25.f19_g16.ICLM45BGCCROP.yellowstone_gnu.clm-cropMonthOutput.clm2.h1.nc : baseline compare clm2.h1 (baseline: compare .base file with clm4_5_7_r166 file) 
FAIL SMS_Lm25.f19_g16.ICLM45BGCCROP.yellowstone_gnu.clm-cropMonthOutput.cpl.hi.nc : baseline compare cpl.hi (baseline: compare .base file with clm4_5_7_r166 file) 
FAIL SMS_Lm25.f19_g16.ICLM45BGCCROP.yellowstone_gnu.clm-cropMonthOutput.rtm.h0.nc : baseline compare rtm.h0 (baseline: compare .base file with clm4_5_7_r166 file) 
FAIL SMS_Lm25.f19_g16.ICLM45BGCCROP.yellowstone_gnu.clm-cropMonthOutput : baseline compare summary (baseline: compare .base file with clm4_5_7_r166 file) 

   RMS ERRSOI                           5.8251E-12            NORMALIZED  8.9433E-02
    RMS FCEV                             2.6698E-03            NORMALIZED  6.1681E-04
    RMS FCTR                             1.0327E-03            NORMALIZED  8.5970E-05
    RMS FGEV                             1.2422E-02            NORMALIZED  1.0727E-03
    RMS FGR                              1.5871E-02            NORMALIZED  1.0567E-03
    RMS FIRA                             6.2943E-03            NORMALIZED  1.3382E-04
    RMS FIRE                             6.2943E-03            NORMALIZED  2.2276E-05
    RMS FSA                              1.5189E-02            NORMALIZED  1.6907E-04
    RMS FSH                              7.7797E-03            NORMALIZED  2.3141E-04
    RMS FSR                              1.5189E-02            NORMALIZED  4.8312E-04
    RMS FSRND                            1.9019E-03            NORMALIZED  1.4342E-04
    RMS FSRNI                            7.3052E-04            NORMALIZED  1.9230E-04
    RMS FSRVD                            7.2809E-03            NORMALIZED  8.4667E-04
    RMS FSRVI                            5.5099E-03            NORMALIZED  9.5318E-04
    RMS H2OSNO                           3.8885E-02            NORMALIZED  4.2228E-04
    RMS H2OSOI                           8.1366E-05            NORMALIZED  3.8102E-04
    RMS LWup                             6.2943E-03            NORMALIZED  2.2276E-05
    RMS QRUNOFF_R                        3.1225E-09            NORMALIZED  3.3684E-04
    RMS RH2M                             1.0818E-03            NORMALIZED  1.2780E-05
    RMS RH2M_R                           1.3486E-03            NORMALIZED  1.5549E-05
    RMS SABG                             1.4827E-02            NORMALIZED  2.7866E-04
    RMS SABV                             3.8115E-03            NORMALIZED  1.0406E-04
    RMS SOILICE                          3.6482E-03            NORMALIZED  1.8500E-05
    RMS SOILLIQ                          3.1434E-03            NORMALIZED  6.2646E-05
    RMS SWup                             1.5189E-02            NORMALIZED  4.8312E-04
    RMS TG                               9.3921E-04            NORMALIZED  3.3576E-06
    RMS TG_R                             3.3882E-03            NORMALIZED  1.2149E-05
    RMS TREFMNAV_R                       1.6421E-03            NORMALIZED  6.1001E-06
    RMS TREFMXAV_R                       3.7410E-04            NORMALIZED  1.3483E-06
    RMS TSA                              9.0321E-04            NORMALIZED  3.2828E-06
    RMS TSA_R                            1.1260E-03            NORMALIZED  4.1238E-06
    RMS TSOI                             5.0202E-04            NORMALIZED  1.7702E-06
   RMS l2x_Sl_avsdr                     5.5267E-04            NORMALIZED  6.3151E-04
    RMS l2x_Sl_anidr                     1.2131E-04            NORMALIZED  1.5495E-04
    RMS l2x_Sl_avsdf                     5.6460E-04            NORMALIZED  6.4925E-04
    RMS l2x_Sl_anidf                     1.6401E-04            NORMALIZED  2.0692E-04
    RMS l2x_Sl_tref                      2.4176E-04            NORMALIZED  9.2262E-07
    RMS l2x_Sl_qref                      8.1951E-08            NORMALIZED  1.7482E-05
    RMS l2x_Sl_t                         9.1557E-04            NORMALIZED  3.5086E-06
    RMS l2x_Sl_fv                        2.1176E-05            NORMALIZED  1.1119E-04
    RMS l2x_Sl_ram1                      4.6841E-02            NORMALIZED  1.1511E-04
    RMS l2x_Sl_snowh                     9.5734E-05            NORMALIZED  2.5947E-04
    RMS l2x_Sl_u10                       8.6799E-05            NORMALIZED  2.9998E-05
    RMS l2x_Fall_swnet                   4.2353E-02            NORMALIZED  1.0601E-03
    RMS l2x_Fall_taux                    6.0736E-06            NORMALIZED  9.1967E-05
    RMS l2x_Fall_tauy                    6.0736E-06            NORMALIZED  9.1967E-05
    RMS l2x_Fall_lat                     3.6518E-03            NORMALIZED  2.5048E-04
    RMS l2x_Fall_sen                     4.1014E-03            NORMALIZED  2.1172E-04
    RMS l2x_Fall_lwup                    4.1975E-03            NORMALIZED  1.5080E-05
    RMS l2x_Fall_evap                    1.4229E-09            NORMALIZED  2.4634E-04
    RMS l2x_Fall_flxdst1                 4.8704E-15            NORMALIZED  2.0036E-04
    RMS l2x_Fall_flxdst2                 2.6143E-14            NORMALIZED  2.0036E-04
    RMS l2x_Fall_flxdst3                 6.1303E-14            NORMALIZED  2.0036E-04
    RMS l2x_Fall_flxdst4                 5.7745E-14            NORMALIZED  2.0036E-04
    RMS l2x_Flrl_rofsur                  1.3261E-09            NORMALIZED  6.7267E-04
    RMS l2x_Flrl_rofsub                  1.6917E-09            NORMALIZED  5.3497E-04
    RMS x2l_Flrr_volr                    9.4158E-07            NORMALIZED  8.4403E-05
    RMS x2l_Flrr_volrmch                 9.4158E-07            NORMALIZED  8.4403E-05
    RMS r2x_Forr_rofl                    1.5252E-08            NORMALIZED  1.2185E-02
    RMS r2x_Forr_rofi                    7.8624E-23            NORMALIZED  1.2486E-16
    RMS r2x_Flrr_volr                    1.4482E-06            NORMALIZED  3.1306E-04
    RMS r2x_Flrr_volrmch                 1.4482E-06            NORMALIZED  3.1306E-04
    RMS x2r_Flrl_rofsur                  2.6800E-09            NORMALIZED  3.9684E-03
    RMS x2r_Flrl_rofsub                  2.0646E-10            NORMALIZED  2.1599E-04
   RMS QCHANR                           1.4626E+00            NORMALIZED  8.8120E-03
    RMS QCHANR_ICE                       6.1338E-16            NORMALIZED  4.0484E-17
    RMS QCHOCNR                          2.2583E-01            NORMALIZED  4.3812E-02
    RMS QCHOCNR_ICE                      1.5925E-16            NORMALIZED  1.7625E-16</thetext>
  </long_desc><long_desc isprivate="0" >
    <commentid>7361</commentid>
    <comment_count>2</comment_count>
    <who name="Erik Kluzek">erik</who>
    <bug_when>2016-02-19 11:28:20 -0700</bug_when>
    <thetext>I talked to Sean about this. He was surprised at the VOLR change. And he thought that if VOLR changes -- it shouldn&apos;t affect the rest of CLM (other than TWS). I also found that answers change on a longer test, so there may be an additional bug that is causing answers to change.</thetext>
  </long_desc><long_desc isprivate="0" >
    <commentid>7362</commentid>
    <comment_count>3</comment_count>
    <who name="Erik Kluzek">erik</who>
    <bug_when>2016-02-19 14:20:28 -0700</bug_when>
    <thetext>For the short case, if I turn RTM off (by setting it to a NULL grid) answers are again identical.

[erik@yslogin1 SMS_Lm25.f19_g16_rn.ICLM45BGCCROP.yellowstone_gnu.clm-cropMonthOutput.C.160219-135252]$ cat ../SMS_Ld5.f19_g16_rn.IRCP45CLM45BGC.yellowstone_intel.clm-decStart.C.160219-133805/TestStatus
DONE SMS_Ld5.f19_g16_rn.IRCP45CLM45BGC.yellowstone_intel.clm-decStart : (test finished, successful coupler log) 
 --- Test Functionality: ---
PASS SMS_Ld5.f19_g16_rn.IRCP45CLM45BGC.yellowstone_intel.clm-decStart : successful coupler log 
PASS SMS_Ld5.f19_g16_rn.IRCP45CLM45BGC.yellowstone_intel.clm-decStart.memleak
--- Baseline Comparison ---: 
PASS SMS_Ld5.f19_g16_rn.IRCP45CLM45BGC.yellowstone_intel.clm-decStart.clm2.h0.nc : baseline compare clm2.h0 (baseline: compare .base file with clm4_5_7_r166 file) 
PASS SMS_Ld5.f19_g16_rn.IRCP45CLM45BGC.yellowstone_intel.clm-decStart.clm2.h1.nc : baseline compare clm2.h1 (baseline: compare .base file with clm4_5_7_r166 file) 
PASS SMS_Ld5.f19_g16_rn.IRCP45CLM45BGC.yellowstone_intel.clm-decStart.cpl.hi.nc : baseline compare cpl.hi (baseline: compare .base file with clm4_5_7_r166 file) 
PASS SMS_Ld5.f19_g16_rn.IRCP45CLM45BGC.yellowstone_intel.clm-decStart : baseline compare summary (baseline: compare .base file with clm4_5_7_r166 file) 
PASS SMS_Ld5.f19_g16_rn.IRCP45CLM45BGC.yellowstone_intel.clm-decStart.memcomp.clm4_5_7_r166 
PASS SMS_Ld5.f19_g16_rn.IRCP45CLM45BGC.yellowstone_intel.clm-decStart.tputcomp.clm4_5_7_r166

I&apos;m running the longer case to see what happens there.</thetext>
  </long_desc><long_desc isprivate="0" >
    <commentid>7363</commentid>
    <comment_count>4</comment_count>
    <who name="Bill Sacks">sacks</who>
    <bug_when>2016-02-19 14:23:46 -0700</bug_when>
    <thetext>Erik: Maybe you already know this, but this is a duplicate of bug 1993</thetext>
  </long_desc><long_desc isprivate="0" >
    <commentid>7364</commentid>
    <comment_count>5</comment_count>
    <who name="Erik Kluzek">erik</who>
    <bug_when>2016-02-19 15:06:27 -0700</bug_when>
    <thetext>The longer test (without RTM) fails with lots of differences as before. So there seems to be a bug outside the VOLR issue. It starts after the 5 day test though. So I wonder if it&apos;s an issue at the end of year.</thetext>
  </long_desc><long_desc isprivate="0" >
    <commentid>7365</commentid>
    <comment_count>6</comment_count>
    <who name="Erik Kluzek">erik</who>
    <bug_when>2016-02-19 16:26:31 -0700</bug_when>
    <thetext>12 month tests fail as well, so changing the name of this bug. This isn&apos;t just the VOLR issue in 1993.</thetext>
  </long_desc><long_desc isprivate="0" >
    <commentid>7367</commentid>
    <comment_count>7</comment_count>
    <who name="Erik Kluzek">erik</who>
    <bug_when>2016-02-20 19:52:45 -0700</bug_when>
    <thetext>A 12-month BGC (no-crop) case passes. And looking at the 12-month BGCCROP case, it fails just at the very end. So I&apos;m assuming it&apos;s something at the year boundary for CROP.</thetext>
  </long_desc>
      
      

    </bug>
    <bug>
          <bug_id>2290</bug_id>
          
          <creation_ts>2016-02-26 17:21:34 -0700</creation_ts>
          <short_desc>Problem with use_bedrock on hobart.</short_desc>
          <delta_ts>2016-02-26 17:53:23 -0700</delta_ts>
          <reporter_accessible>1</reporter_accessible>
          <cclist_accessible>1</cclist_accessible>
          <classification_id>1</classification_id>
          <classification>Unclassified</classification>
          <product>CCSM/CESM CLM</product>
          <component>CLM 5.0</component>
          <version>CESM1.4.z Development</version>
          <rep_platform>PC</rep_platform>
          <op_sys>All</op_sys>
          <bug_status>ASSIGNED</bug_status>
          <resolution></resolution>
          
          
          <bug_file_loc></bug_file_loc>
          <status_whiteboard></status_whiteboard>
          <keywords></keywords>
          <priority>P3</priority>
          <bug_severity>normal</bug_severity>
          <target_milestone>CLM5</target_milestone>
          
          
          <everconfirmed>1</everconfirmed>
          <reporter name="Erik Kluzek">erik</reporter>
          <assigned_to name="Erik Kluzek">erik</assigned_to>
          <cc>andre</cc>
    
    <cc>dlawren</cc>
    
    <cc>rfisher</cc>
    
    <cc>sacks</cc>
    
    <cc>swensosc</cc>
          
          <cf_fixedinversion></cf_fixedinversion>

      

      

      

          <comment_sort_order>oldest_to_newest</comment_sort_order>  
          <long_desc isprivate="0" >
    <commentid>7378</commentid>
    <comment_count>0</comment_count>
    <who name="Erik Kluzek">erik</who>
    <bug_when>2016-02-26 17:21:34 -0700</bug_when>
    <thetext>These tests fail with respmods_n10_clm4_5_8_r169 on hobart. I believe the same error would show up on the trunk (but I&apos;ll verify).

ERI_D_Ld9_P24x1.f10_f10.ICRUCLM50BGC.hobart_nag.clm-reduceOutput
SMS_D_Ld1_Mmpi-serial.1x1_vancouverCAN.I1PTCLM50.hobart_nag.clm-default
SMS_Ld5_D_P24x1.f10_f10.IHISTCLM50BGC.hobart_nag.clm-monthly

The traceback is...

Runtime Error: /fs/cgd/data0/erik/clm_respmods/components/clm/src/biogeophys/SoilWaterMovementMod.F90, line 1370: Rank 1 of AMX(FILTER_HYDROLOGYC(FC),2:NLAYERS) has extent 15 instead of 19
Program terminated by fatal error
/fs/cgd/data0/erik/clm_respmods/components/clm/src/biogeophys/SoilWaterMovementMod.F90, line 1370: Error occurred in SOILWATERMOVEMENTMOD:SOILWATER_MOISTURE_FORM
/fs/cgd/data0/erik/clm_respmods/components/clm/src/biogeophys/SoilWaterMovementMod.F90, line 273: Called by SOILWATERMOVEMENTMOD:SOILWATER
/fs/cgd/data0/erik/clm_respmods/components/clm/src/biogeophys/HydrologyNoDrainageMod.F90, line 184: Called by HYDROLOGYNODRAINAGEMOD:HYDROLOGYNODRAINAGE
/fs/cgd/data0/erik/clm_respmods/components/clm/src/main/clm_driver.F90, line 570: Called by CLM_DRIVER:CLM_DRV
/fs/cgd/data0/erik/clm_respmods/components/clm/src/cpl/lnd_comp_mct.F90, line 437: Called by LND_COMP_MCT:LND_RUN_MCT
/fs/cgd/data0/erik/clm_respmods/cime/driver_cpl/driver/component_mod.F90, line 1044: Called by COMPONENT_MOD:COMPONENT_RUN
/fs/cgd/data0/erik/clm_respmods/cime/driver_cpl/driver/cesm_comp_mod.F90, line 2416: Called by CESM_COMP_MOD:CESM_RUN
/fs/cgd/data0/erik/clm_respmods/cime/driver_cpl/driver/cesm_driver.F90, line 93: Called by CESM_DRIVER</thetext>
  </long_desc><long_desc isprivate="0" >
    <commentid>7379</commentid>
    <comment_count>1</comment_count>
    <who name="Erik Kluzek">erik</who>
    <bug_when>2016-02-26 17:53:23 -0700</bug_when>
    <thetext>The following changes allow it to work...

Index: /scratch/cluster/erik/clm4_5_8_r169/components/clm/src/biogeophys/SoilWaterMovementMod.F90
===================================================================
--- /scratch/cluster/erik/clm4_5_8_r169/components/clm/src/biogeophys/SoilWaterMovementMod.F90	(revision 77035)
+++ /scratch/cluster/erik/clm4_5_8_r169/components/clm/src/biogeophys/SoilWaterMovementMod.F90	(working copy)
@@ -1367,12 +1367,12 @@
                ! copy); however, intent(inout)
 
                ! get a copy of the input vectors
-               dLow = amx(filter_hydrologyc(fc),2:nlayers)
-               diag = bmx(filter_hydrologyc(fc),1:nlayers)
-               dUpp = cmx(filter_hydrologyc(fc),1:nlayers-1)
+               dLow(1:nlayers-1) = amx(filter_hydrologyc(fc),2:nlayers)
+               diag(1:nlayers)   = bmx(filter_hydrologyc(fc),1:nlayers)
+               dUpp(1:nlayers-1) = cmx(filter_hydrologyc(fc),1:nlayers-1)
 
                ! get a copy of the residual vector
-               rhs = rmx(filter_hydrologyc(fc),1:nlayers)
+               rhs(1:nlayers) = rmx(filter_hydrologyc(fc),1:nlayers)
 
                ! call the lapack tri-diagonal solver
                call dgtsv(nlayers,   &amp; ! intent(in):    [integer]       number of state variables</thetext>
  </long_desc>
      
      

    </bug>
    <bug>
          <bug_id>2292</bug_id>
          
          <creation_ts>2016-03-02 15:28:18 -0700</creation_ts>
          <short_desc>NPP_BURNEDOFF doesn&apos;t seem to be restarting correctly</short_desc>
          <delta_ts>2016-04-13 14:24:49 -0600</delta_ts>
          <reporter_accessible>1</reporter_accessible>
          <cclist_accessible>1</cclist_accessible>
          <classification_id>1</classification_id>
          <classification>Unclassified</classification>
          <product>CCSM/CESM CLM</product>
          <component>CLM 5.0</component>
          <version>CESM1.4.z Development</version>
          <rep_platform>All</rep_platform>
          <op_sys>All</op_sys>
          <bug_status>ASSIGNED</bug_status>
          <resolution></resolution>
          
          
          <bug_file_loc></bug_file_loc>
          <status_whiteboard></status_whiteboard>
          <keywords></keywords>
          <priority>P3</priority>
          <bug_severity>normal</bug_severity>
          <target_milestone>CLM5</target_milestone>
          
          
          <everconfirmed>1</everconfirmed>
          <reporter name="Erik Kluzek">erik</reporter>
          <assigned_to name="Erik Kluzek">erik</assigned_to>
          <cc>dlawren</cc>
    
    <cc>mvertens</cc>
    
    <cc>rfisher</cc>
    
    <cc>sacks</cc>
          
          <cf_fixedinversion></cf_fixedinversion>

      

      

      

          <comment_sort_order>oldest_to_newest</comment_sort_order>  
          <long_desc isprivate="0" >
    <commentid>7385</commentid>
    <comment_count>0</comment_count>
    <who name="Erik Kluzek">erik</who>
    <bug_when>2016-03-02 15:28:18 -0700</bug_when>
    <thetext>This issue doesn&apos;t show up in CLM standalone testing (possibly just by random chance), but Mariana found a case where NPP_BURNEDOFF is different for a B1850 case. Talking this over with Rosie, this is a kludge that we don&apos;t expect to happen often. It does pass balance checks, and as noted it passes the standard offline CLM testing. She&apos;s not sure why it passes balance checks, but not a restart test. And it shouldn&apos;t have a large effect on the code. So running with this issue is probably OK.

Here is Mariana&apos;s email on this regarding what she did specifically...

I am not finding any problems in testing restarts. As a sanity check I did the following:

1) checkout out the same code base as Cecile
2) created a test using the following
./create_test -testname ERS_Ld7.f09_g16.B1850.yellowstone_intel.allactive-defaultio -testid hannay
3) modified user_nl_clm, and user_nl_cpl and user_nl_cpl as in Cecile&apos;s case
4) modified env_run.xml as in Cecile&apos;s case

The test built and ran successfuly with no problem. The output is below.

DONE ERS_Ld7.f09_g16.B1850.yellowstone_intel.allactive-defaultio : (test finished, successful coupler log) 
--- Test Functionality  ---:
PASS ERS_Ld7.f09_g16.B1850.yellowstone_intel.allactive-defaultio.cam.h0.nc : test compare cam.h0 (.base and .rest files) 
PASS ERS_Ld7.f09_g16.B1850.yellowstone_intel.allactive-defaultio.cice.h.nc : test compare cice.h (.base and .rest files) 
FAIL ERS_Ld7.f09_g16.B1850.yellowstone_intel.allactive-defaultio.clm2.h0.nc : test compare clm2.h0 (.base and .rest files) 
PASS ERS_Ld7.f09_g16.B1850.yellowstone_intel.allactive-defaultio.pop.h.nc : test compare pop.h (.base and .rest files) 
PASS ERS_Ld7.f09_g16.B1850.yellowstone_intel.allactive-defaultio.cism.h.nc : test compare cism.h (.base and .rest files) 
PASS ERS_Ld7.f09_g16.B1850.yellowstone_intel.allactive-defaultio.cpl.hi.nc : test compare cpl.hi (.base and .rest files) 
FAIL ERS_Ld7.f09_g16.B1850.yellowstone_intel.allactive-defaultio : test functionality summary (ERS_test) 
PASS ERS_Ld7.f09_g16.B1850.yellowstone_intel.allactive-defaultio.memleak

However, that said - clm did not pass the restart history file test for only the following field:
  RMS NPP_BURNEDOFF                    2.7888E-08            NORMALIZED  1.2109E-01

My testdir is:
/glade/u/home/mvertens/src/cesm1_5_alpha06_cntlexp05/cime/scripts/ERS_Ld7.f09_g16.B1850.yellowstone_intel.allactive-defaultio.hannay

My executable dir is:
/glade/scratch/mvertens/ERS_Ld7.f09_g16.B1850.yellowstone_intel.allactive-defaultio.hannay/run</thetext>
  </long_desc><long_desc isprivate="0" >
    <commentid>7416</commentid>
    <comment_count>1</comment_count>
    <who name="Erik Kluzek">erik</who>
    <bug_when>2016-03-18 12:20:42 -0600</bug_when>
    <thetext>I&apos;m also seeing differences in NPP_BURNEDOFF in the difference between respmods_n12_clm4_5_7_r169 and respmods_n13_clm4_5_7_r172. I&apos;m going to ignore that, because I think this is related to this issue where we know there are issues with how NPP_BURNDEDOFF is handled

For example here is a case that shows the issue...

grep RMS ERP_P15x2_Lm25.f10_f10.ICLM50BGCDVCROP.yellowstone_intel.clm-monthly.GC.160318-012401/TestStatus.log 
   RMS NPP_BURNEDOFF                    3.1330E-09            NORMALIZED  2.5670E-02
   RMS NPP_BURNEDOFF                    5.9461E-08            NORMALIZED  4.7349E-01</thetext>
  </long_desc><long_desc isprivate="0" >
    <commentid>7440</commentid>
    <comment_count>2</comment_count>
    <who name="Bill Sacks">sacks</who>
    <bug_when>2016-04-13 14:24:49 -0600</bug_when>
    <thetext>For now I&apos;m making NPP_BURNEDOFF inactive. That should be changed back once this bug is fixed.</thetext>
  </long_desc>
      
      

    </bug>
    <bug>
          <bug_id>2294</bug_id>
          
          <creation_ts>2016-03-04 16:03:57 -0700</creation_ts>
          <short_desc>Receive surface ozone in CLM</short_desc>
          <delta_ts>2016-03-14 12:17:12 -0600</delta_ts>
          <reporter_accessible>1</reporter_accessible>
          <cclist_accessible>1</cclist_accessible>
          <classification_id>1</classification_id>
          <classification>Unclassified</classification>
          <product>CCSM/CESM CLM</product>
          <component>CLM 5.0</component>
          <version>CESM1.4.z Development</version>
          <rep_platform>All</rep_platform>
          <op_sys>All</op_sys>
          <bug_status>ASSIGNED</bug_status>
          <resolution></resolution>
          
          
          <bug_file_loc></bug_file_loc>
          <status_whiteboard></status_whiteboard>
          <keywords></keywords>
          <priority>P3</priority>
          <bug_severity>normal</bug_severity>
          <target_milestone>CLM5</target_milestone>
          
          
          <everconfirmed>1</everconfirmed>
          <reporter name="Erik Kluzek">erik</reporter>
          <assigned_to name="Erik Kluzek">erik</assigned_to>
          <cc>dll</cc>
    
    <cc>rfisher</cc>
          
          <cf_fixedinversion></cf_fixedinversion>

      

      

      

          <comment_sort_order>oldest_to_newest</comment_sort_order>  
          <long_desc isprivate="0" >
    <commentid>7392</commentid>
    <comment_count>0</comment_count>
    <who name="Erik Kluzek">erik</who>
    <bug_when>2016-03-04 16:03:57 -0700</bug_when>
    <thetext>These are the changes from Danica to add Ozone from atm in CLM. These are based off of clm4_5_1_r104. There are also changes in cime needed for datm and driver, that are documented in cime issue: 389 and 390.

[erik@yslogin3 clm4_5_1_r104_Fire_O3_spinupFinal]$ diff -cwb /glade/p/work/dll/clm4_5_1_r104/models/lnd/clm/src/main/atm2lndType.F90  SourceMods/src.clm/
*** /glade/p/work/dll/clm4_5_1_r104/models/lnd/clm/src/main/atm2lndType.F90	2015-02-18 15:49:02.749875754 -0700
--- SourceMods/src.clm/atm2lndType.F90	2015-05-12 13:44:46.565581000 -0600
***************
*** 51,56 ****
--- 51,57 ----
       real(r8), pointer :: forc_solai_grc                (:,:) =&gt; null() ! diffuse radiation (numrad) (vis=forc_solsd, nir=forc_solld)
       real(r8), pointer :: forc_solar_grc                (:)   =&gt; null() ! incident solar radiation
       real(r8), pointer :: forc_ndep_grc                 (:)   =&gt; null() ! nitrogen deposition rate (gN/m2/s)
+      real(r8), pointer :: forc_ozone_grc                (:)   =&gt; null() ! ozone concentration 
       real(r8), pointer :: forc_pc13o2_grc               (:)   =&gt; null() ! C13O2 partial pressure (Pa)
       real(r8), pointer :: forc_po2_grc                  (:)   =&gt; null() ! O2 partial pressure (Pa)
       real(r8), pointer :: forc_aer_grc                  (:,:) =&gt; null() ! aerosol deposition array
***************
*** 167,172 ****
--- 168,174 ----
      allocate(this%forc_solai_grc                (begg:endg,numrad)) ; this%forc_solai_grc                (:,:) = ival
      allocate(this%forc_solar_grc                (begg:endg))        ; this%forc_solar_grc                (:)   = ival
      allocate(this%forc_ndep_grc                 (begg:endg))        ; this%forc_ndep_grc                 (:)   = ival
+     allocate(this%forc_ozone_grc                (begg:endg))        ; this%forc_ozone_grc                (:)   = ival
      allocate(this%forc_pc13o2_grc               (begg:endg))        ; this%forc_pc13o2_grc               (:)   = ival
      allocate(this%forc_po2_grc                  (begg:endg))        ; this%forc_po2_grc                  (:)   = ival
      allocate(this%forc_aer_grc                  (begg:endg,14))     ; this%forc_aer_grc                  (:,:) = ival
***************
*** 271,276 ****
--- 273,283 ----
           avgflag=&apos;A&apos;, long_name=&apos;atmospheric incident solar radiation&apos;, &amp;
           ptr_lnd=this%forc_solar_grc)
  
+     this%forc_ozone_grc(begg:endg) = spval
+     call hist_addfld1d (fname=&apos;OZONE&apos;, units=&apos;mol/mol&apos;,  &amp;
+          avgflag=&apos;A&apos;, long_name=&apos;ozone concentration&apos;, &amp;
+          ptr_lnd=this%forc_ozone_grc)    
+ 
      this%forc_pco2_grc(begg:endg) = spval
      call hist_addfld1d (fname=&apos;PCO2&apos;, units=&apos;Pa&apos;,  &amp;
           avgflag=&apos;A&apos;, long_name=&apos;atmospheric partial pressure of CO2&apos;, &amp;
[erik@yslogin3 clm4_5_1_r104_Fire_O3_spinupFinal]$ diff -cwb /glade/p/work/dll/clm4_5_1_r104/models/lnd/clm/src/biogeophys/OzoneBaseMod.F90  SourceMods/src.clm/
*** /glade/p/work/dll/clm4_5_1_r104/models/lnd/clm/src/biogeophys/OzoneBaseMod.F90	2015-02-18 15:49:08.658344475 -0700
--- SourceMods/src.clm/OzoneBaseMod.F90	2015-05-12 13:44:46.650799000 -0600
***************
*** 61,67 ****
       end subroutine Restart_interface
         
       subroutine CalcOzoneStress_interface(this, bounds, num_exposedvegp, filter_exposedvegp, &amp;
!           forc_pbot, forc_th, rssun, rssha, rb, ram, tlai)
         use decompMod    , only : bounds_type
         use shr_kind_mod , only : r8 =&gt; shr_kind_r8
         import :: ozone_base_type
--- 61,67 ----
       end subroutine Restart_interface
         
       subroutine CalcOzoneStress_interface(this, bounds, num_exposedvegp, filter_exposedvegp, &amp;
!           forc_ozone, forc_pbot, forc_th, rssun, rssha, rb, ram, tlai)
         use decompMod    , only : bounds_type
         use shr_kind_mod , only : r8 =&gt; shr_kind_r8
         import :: ozone_base_type
***************
*** 71,76 ****
--- 71,77 ----
         integer  , intent(in) :: num_exposedvegp           ! number of points in filter_exposedvegp
         integer  , intent(in) :: filter_exposedvegp(:)     ! patch filter for non-snow-covered veg
         real(r8) , intent(in) :: forc_pbot( bounds%begc: ) ! atmospheric pressure (Pa)
+        real(r8) , intent(in) :: forc_ozone( bounds%begg: )! ozone concentration 
         real(r8) , intent(in) :: forc_th( bounds%begc: )   ! atmospheric potential temperature (K)
         real(r8) , intent(in) :: rssun( bounds%begp: )     ! leaf stomatal resistance, sunlit leaves (s/m)
         real(r8) , intent(in) :: rssha( bounds%begp: )     ! leaf stomatal resistance, shaded leaves (s/m)
[erik@yslogin3 clm4_5_1_r104_Fire_O3_spinupFinal]$ diff -cwb /glade/p/work/dll/clm4_5_1_r104/models/lnd/clm/src/biogeophys/OzoneMod.F90  SourceMods/src.clm/
*** /glade/p/work/dll/clm4_5_1_r104/models/lnd/clm/src/biogeophys/OzoneMod.F90	2015-02-18 15:49:08.662545401 -0700
--- SourceMods/src.clm/OzoneMod.F90	2015-05-12 13:44:46.664578000 -0600
***************
*** 30,35 ****
--- 30,37 ----
       ! Private data members
       real(r8), pointer :: o3uptakesha_patch(:) ! ozone dose, shaded leaves (mmol O3/m^2)
       real(r8), pointer :: o3uptakesun_patch(:) ! ozone dose, sunlit leaves (mmol O3/m^2)
+ ! can delete after checking that ozone = o3test
+      real(r8), pointer :: forc_ozone(:)        ! ozone concentration (mol/mol) 
  
       ! NOTE(wjs, 2014-09-29) tlai_old_patch really belongs alongside tlai_patch in
       ! CanopyStateType.  But there are problems with any way I can think to implement
***************
*** 72,78 ****
    
    ! TODO(wjs, 2014-09-29) This parameter will eventually become a spatially-varying
    ! value, obtained from ATM
!   real(r8), parameter :: forc_ozone = 100._r8 * 1.e-9_r8  ! ozone partial pressure [mol/mol]
  
    ! TODO(wjs, 2014-09-29) The following parameters should eventually be moved to the
    ! params file. Parameters differentiated on veg type should be put on the params file
--- 74,80 ----
    
    ! TODO(wjs, 2014-09-29) This parameter will eventually become a spatially-varying
    ! value, obtained from ATM
! !  real(r8), parameter :: forc_ozone = 100._r8 * 1.e-9_r8  ! ozone partial pressure [mol/mol]
  
    ! TODO(wjs, 2014-09-29) The following parameters should eventually be moved to the
    ! params file. Parameters differentiated on veg type should be put on the params file
***************
*** 186,191 ****
--- 188,195 ----
  
      allocate(this%o3uptakesha_patch(begp:endp)) ; this%o3uptakesha_patch(:) = nan
      allocate(this%o3uptakesun_patch(begp:endp)) ; this%o3uptakesun_patch(:) = nan
+ !delete later
+     allocate(this%forc_ozone(bounds%begg:bounds%endg))        ; this%forc_ozone(:) = nan
      allocate(this%tlai_old_patch(begp:endp))    ; this%tlai_old_patch(:) = nan
  
    end subroutine InitAllocate
***************
*** 222,227 ****
--- 226,238 ----
           avgflag=&apos;A&apos;, long_name=&apos;total ozone flux into shaded leaves&apos;, &amp;
           ptr_patch=this%o3uptakesha_patch)
  
+ ! delete later
+ !    this%forc_ozone(bounds%begg:bounds%endg) = spval
+ !    call hist_addfld1d (fname=&apos;O3_TEST&apos;, units=&apos;mol/mol&apos;, &amp;
+ !         avgflag=&apos;A&apos;, long_name=&apos;ozone concentration&apos;, &amp;
+ !         ptr_lnd=this%forc_ozone)
+ 
+ 
    end subroutine InitHistory
  
    !-----------------------------------------------------------------------
***************
*** 316,328 ****
  
    !-----------------------------------------------------------------------
    subroutine CalcOzoneStress(this, bounds, num_exposedvegp, filter_exposedvegp, &amp;
!        forc_pbot, forc_th, rssun, rssha, rb, ram, tlai)
      !
      ! !DESCRIPTION:
      ! Calculate ozone stress.
      !
      ! !USES:
      use PatchType            , only : patch                
      !
      ! !ARGUMENTS:
      class(ozone_type)      , intent(inout) :: this
--- 327,340 ----
  
    !-----------------------------------------------------------------------
    subroutine CalcOzoneStress(this, bounds, num_exposedvegp, filter_exposedvegp, &amp;
!        forc_ozone, forc_pbot, forc_th, rssun, rssha, rb, ram, tlai)
      !
      ! !DESCRIPTION:
      ! Calculate ozone stress.
      !
      ! !USES:
      use PatchType            , only : patch                
+ !    use clm_varctl           , only : iulog
      !
      ! !ARGUMENTS:
      class(ozone_type)      , intent(inout) :: this
***************
*** 331,336 ****
--- 343,349 ----
      integer  , intent(in) :: filter_exposedvegp(:)     ! patch filter for non-snow-covered veg
      real(r8) , intent(in) :: forc_pbot( bounds%begc: ) ! atmospheric pressure (Pa)
      real(r8) , intent(in) :: forc_th( bounds%begc: )   ! atmospheric potential temperature (K)
+     real(r8) , intent(in) :: forc_ozone( bounds%begg: )! ozone concentration 
      real(r8) , intent(in) :: rssun( bounds%begp: )     ! leaf stomatal resistance, sunlit leaves (s/m)
      real(r8) , intent(in) :: rssha( bounds%begp: )     ! leaf stomatal resistance, shaded leaves (s/m)
      real(r8) , intent(in) :: rb( bounds%begp: )        ! boundary layer resistance (s/m)
***************
*** 341,346 ****
--- 354,360 ----
      integer  :: fp             ! filter index
      integer  :: p              ! patch index
      integer  :: c              ! column index
+     integer  :: g              ! gridcell index
  
      character(len=*), parameter :: subname = &apos;CalcOzoneStress&apos;
      !-----------------------------------------------------------------------
***************
*** 348,353 ****
--- 362,368 ----
      ! Enforce expected array sizes
      SHR_ASSERT_ALL((ubound(forc_pbot) == (/bounds%endc/)), errMsg(__FILE__, __LINE__))
      SHR_ASSERT_ALL((ubound(forc_th) == (/bounds%endc/)), errMsg(__FILE__, __LINE__))
+     SHR_ASSERT_ALL((ubound(forc_ozone) == (/bounds%endg/)), errMsg(__FILE__, __LINE__))
      SHR_ASSERT_ALL((ubound(rssun) == (/bounds%endp/)), errMsg(__FILE__, __LINE__))
      SHR_ASSERT_ALL((ubound(rssha) == (/bounds%endp/)), errMsg(__FILE__, __LINE__))
      SHR_ASSERT_ALL((ubound(rb) == (/bounds%endp/)), errMsg(__FILE__, __LINE__))
***************
*** 367,389 ****
      do fp = 1, num_exposedvegp
         p = filter_exposedvegp(fp)
         c = patch%column(p)
  
         ! Ozone stress for shaded leaves
         call CalcOzoneStressOnePoint( &amp;
!             forc_ozone=forc_ozone, forc_pbot=forc_pbot(c), forc_th=forc_th(c), &amp;
              rs=rssha(p), rb=rb(p), ram=ram(p), &amp;
              tlai=tlai(p), tlai_old=tlai_old(p), pft_type=patch%itype(p), &amp;
              o3uptake=o3uptakesha(p), o3coefv=o3coefvsha(p), o3coefg=o3coefgsha(p))
  
         ! Ozone stress for sunlit leaves
         call CalcOzoneStressOnePoint( &amp;
!             forc_ozone=forc_ozone, forc_pbot=forc_pbot(c), forc_th=forc_th(c), &amp;
              rs=rssun(p), rb=rb(p), ram=ram(p), &amp;
              tlai=tlai(p), tlai_old=tlai_old(p), pft_type=patch%itype(p), &amp;
              o3uptake=o3uptakesun(p), o3coefv=o3coefvsun(p), o3coefg=o3coefgsun(p))
  
         tlai_old(p) = tlai(p)
  
      end do
  
      end associate
--- 382,409 ----
      do fp = 1, num_exposedvegp
         p = filter_exposedvegp(fp)
         c = patch%column(p)
+        g = patch%gridcell(p)
+ ! delete later
+        this%forc_ozone(g) = forc_ozone(g)
  
         ! Ozone stress for shaded leaves
         call CalcOzoneStressOnePoint( &amp;
!             forc_ozone=forc_ozone(g), forc_pbot=forc_pbot(c), forc_th=forc_th(c), &amp;
              rs=rssha(p), rb=rb(p), ram=ram(p), &amp;
              tlai=tlai(p), tlai_old=tlai_old(p), pft_type=patch%itype(p), &amp;
              o3uptake=o3uptakesha(p), o3coefv=o3coefvsha(p), o3coefg=o3coefgsha(p))
  
         ! Ozone stress for sunlit leaves
         call CalcOzoneStressOnePoint( &amp;
!             forc_ozone=forc_ozone(g), forc_pbot=forc_pbot(c), forc_th=forc_th(c), &amp;
              rs=rssun(p), rb=rb(p), ram=ram(p), &amp;
              tlai=tlai(p), tlai_old=tlai_old(p), pft_type=patch%itype(p), &amp;
              o3uptake=o3uptakesun(p), o3coefv=o3coefvsun(p), o3coefg=o3coefgsun(p))
  
         tlai_old(p) = tlai(p)
  
+ !       write(iulog,*) &apos;[O3] = &apos;,g,forc_ozone(g),o3uptakesun(p),o3uptakesha(p),rssun(p)
+ 
      end do
  
      end associate
[erik@yslogin3 clm4_5_1_r104_Fire_O3_spinupFinal]$ diff -cwb /glade/p/work/dll/clm4_5_1_r104/models/lnd/clm/src/biogeophys/OzoneOffMod.F90  SourceMods/src.clm/
*** /glade/p/work/dll/clm4_5_1_r104/models/lnd/clm/src/biogeophys/OzoneOffMod.F90	2015-02-18 15:49:08.604774935 -0700
--- SourceMods/src.clm/OzoneOffMod.F90	2015-05-12 13:44:46.685219000 -0600
***************
*** 78,84 ****
    end subroutine Restart
  
    subroutine CalcOzoneStress(this, bounds, num_exposedvegp, filter_exposedvegp, &amp;
!           forc_pbot, forc_th, rssun, rssha, rb, ram, tlai)
  
      class(ozone_off_type) , intent(inout) :: this
      type(bounds_type)      , intent(in)    :: bounds
--- 78,84 ----
    end subroutine Restart
  
    subroutine CalcOzoneStress(this, bounds, num_exposedvegp, filter_exposedvegp, &amp;
!           forc_ozone, forc_pbot, forc_th, rssun, rssha, rb, ram, tlai)
  
      class(ozone_off_type) , intent(inout) :: this
      type(bounds_type)      , intent(in)    :: bounds
***************
*** 86,91 ****
--- 86,92 ----
      integer  , intent(in) :: filter_exposedvegp(:)     ! patch filter for non-snow-covered veg
      real(r8) , intent(in) :: forc_pbot( bounds%begc: ) ! atmospheric pressure (Pa)
      real(r8) , intent(in) :: forc_th( bounds%begc: )   ! atmospheric potential temperature (K)
+     real(r8) , intent(in) :: forc_ozone( bounds%begg: )! ozone concentration
      real(r8) , intent(in) :: rssun( bounds%begp: )     ! leaf stomatal resistance, sunlit leaves (s/m)
      real(r8) , intent(in) :: rssha( bounds%begp: )     ! leaf stomatal resistance, shaded leaves (s/m)
      real(r8) , intent(in) :: rb( bounds%begp: )        ! boundary layer resistance (s/m)
***************
*** 96,101 ****
--- 97,103 ----
      ! ozone-off can pick up problems with the call to this routine)
      SHR_ASSERT_ALL((ubound(forc_pbot) == (/bounds%endc/)), errMsg(__FILE__, __LINE__))
      SHR_ASSERT_ALL((ubound(forc_th) == (/bounds%endc/)), errMsg(__FILE__, __LINE__))
+     SHR_ASSERT_ALL((ubound(forc_ozone) == (/bounds%endg/)), errMsg(__FILE__, __LINE__))
      SHR_ASSERT_ALL((ubound(rssun) == (/bounds%endp/)), errMsg(__FILE__, __LINE__))
      SHR_ASSERT_ALL((ubound(rssha) == (/bounds%endp/)), errMsg(__FILE__, __LINE__))
      SHR_ASSERT_ALL((ubound(rb) == (/bounds%endp/)), errMsg(__FILE__, __LINE__))

[erik@yslogin3 clm4_5_1_r104_Fire_O3_spinupFinal]$ diff -cwb /glade/p/work/dll/clm4_5_1_r104/models/lnd/clm/src/biogeophys/CanopyFluxesMod.F90  SourceMods/src.clm/
*** /glade/p/work/dll/clm4_5_1_r104/models/lnd/clm/src/biogeophys/CanopyFluxesMod.F90	2015-02-18 15:49:08.646431176 -0700
--- SourceMods/src.clm/CanopyFluxesMod.F90	2015-05-12 13:44:46.590002000 -0600
***************
*** 293,298 ****
--- 293,299 ----
           forc_q                 =&gt; atm2lnd_inst%forc_q_downscaled_col           , &amp; ! Input:  [real(r8) (:)   ]  atmospheric specific humidity (kg/kg)                                 
           forc_pbot              =&gt; atm2lnd_inst%forc_pbot_downscaled_col        , &amp; ! Input:  [real(r8) (:)   ]  atmospheric pressure (Pa)                                             
           forc_th                =&gt; atm2lnd_inst%forc_th_downscaled_col          , &amp; ! Input:  [real(r8) (:)   ]  atmospheric potential temperature (Kelvin)                            
+          forc_ozone             =&gt; atm2lnd_inst%forc_ozone_grc                  , &amp; ! Input:  [real(r8) (:)   ]  ozone concentration (mol/mol) 
           forc_rho               =&gt; atm2lnd_inst%forc_rho_downscaled_col         , &amp; ! Input:  [real(r8) (:)   ]  density (kg/m**3)                                                     
           forc_t                 =&gt; atm2lnd_inst%forc_t_downscaled_col           , &amp; ! Input:  [real(r8) (:)   ]  atmospheric temperature (Kelvin)                                      
           forc_u                 =&gt; atm2lnd_inst%forc_u_grc                      , &amp; ! Input:  [real(r8) (:)   ]  atmospheric wind speed in east direction (m/s)                        
***************
*** 1145,1150 ****
--- 1146,1152 ----
             bounds, fn, filterp, &amp;
             forc_pbot = atm2lnd_inst%forc_pbot_downscaled_col(bounds%begc:bounds%endc), &amp;
             forc_th   = atm2lnd_inst%forc_th_downscaled_col(bounds%begc:bounds%endc), &amp;
+            forc_ozone= atm2lnd_inst%forc_ozone_grc(bounds%begg:bounds%endg), &amp;
             rssun     = photosyns_inst%rssun_patch(bounds%begp:bounds%endp), &amp;
             rssha     = photosyns_inst%rssha_patch(bounds%begp:bounds%endp), &amp;
             rb        = frictionvel_inst%rb1_patch(bounds%begp:bounds%endp),       
[erik@yslogin3 clm4_5_1_r104_Fire_O3_spinupFinal]$ diff -cwb /glade/p/work/dll/clm4_5_1_r104/models/lnd/clm/src/cpl/clm_cpl_indices.F90  SourceMods/src.clm/
*** /glade/p/work/dll/clm4_5_1_r104/models/lnd/clm/src/cpl/clm_cpl_indices.F90	2015-02-18 15:49:11.260046207 -0700
--- SourceMods/src.clm/clm_cpl_indices.F90	2015-05-12 13:44:46.606482000 -0600
***************
*** 98,103 ****
--- 98,104 ----
    integer, public ::index_x2l_Faxa_dstdry2    ! flux: Size 2 dust -- dry deposition
    integer, public ::index_x2l_Faxa_dstdry3    ! flux: Size 3 dust -- dry deposition
    integer, public ::index_x2l_Faxa_dstdry4    ! flux: Size 4 dust -- dry deposition
+   integer, public ::index_x2l_Faxa_ozone
   
    integer, public ::index_x2l_Flrr_flood      ! rtm-&gt;lnd rof (flood) flux
    integer, public ::index_x2l_Flrr_volr      ! rtm-&gt;lnd rof volr
***************
*** 225,230 ****
--- 226,232 ----
      index_x2l_Flrr_volr     = mct_avect_indexra(x2l,&apos;Flrr_volr&apos;)
  
      index_x2l_Faxa_lwdn     = mct_avect_indexra(x2l,&apos;Faxa_lwdn&apos;)
+     index_x2l_Faxa_ozone    = mct_avect_indexra(x2l,&apos;Faxa_ozone&apos;)
      index_x2l_Faxa_rainc    = mct_avect_indexra(x2l,&apos;Faxa_rainc&apos;)
      index_x2l_Faxa_rainl    = mct_avect_indexra(x2l,&apos;Faxa_rainl&apos;)
      index_x2l_Faxa_snowc    = mct_avect_indexra(x2l,&apos;Faxa_snowc&apos;)      
[erik@yslogin3 clm4_5_1_r104_Fire_O3_spinupFinal]$ diff -cwb /glade/p/work/dll/clm4_5_1_r104/models/lnd/clm/src/cpl/lnd_import_export.F90  SourceMods/src.clm/
*** /glade/p/work/dll/clm4_5_1_r104/models/lnd/clm/src/cpl/lnd_import_export.F90	2015-02-18 15:49:11.261632747 -0700
--- SourceMods/src.clm/lnd_import_export.F90	2015-05-12 13:44:46.642144000 -0600
***************
*** 119,124 ****
--- 119,125 ----
         atm2lnd_inst%forc_pbot_not_downscaled_grc(g)  = x2l(index_x2l_Sa_pbot,i)      ! ptcmxy  Atm state Pa
         atm2lnd_inst%forc_t_not_downscaled_grc(g)     = x2l(index_x2l_Sa_tbot,i)      ! forc_txy  Atm state K
         atm2lnd_inst%forc_lwrad_not_downscaled_grc(g) = x2l(index_x2l_Faxa_lwdn,i)    ! flwdsxy Atm flux  W/m^2
+        atm2lnd_inst%forc_ozone_grc(g)                = x2l(index_x2l_Faxa_ozone,i)
  
         forc_rainc                                    = x2l(index_x2l_Faxa_rainc,i)   ! mm/s
         forc_rainl                                    = x2l(index_x2l_Faxa_rainl,i)   ! mm/s</thetext>
  </long_desc><long_desc isprivate="0" >
    <commentid>7406</commentid>
    <comment_count>1</comment_count>
    <who name="Erik Kluzek">erik</who>
    <bug_when>2016-03-14 12:17:12 -0600</bug_when>
    <thetext>I added some extra print statements to see what was going on...

 227: CH4 Conservation Error in CH4Mod during diffusion, nstep, c, errch4 (mol /m^2.timestep)         266      201020                       NaN
 227: sat, lake =            0 F
 227: ch4_surf_aere, ch4_surf_ebul, ch3_surf_diff, dtime    0.0000000000000000        0.0000000000000000                            NaN   1800.0000000000000     
 227: conc_ch4                       NaN                       NaN                       NaN                       NaN                       NaN                       NaN                       NaN                       NaN                       NaN                       NaN                       NaN                       NaN                       NaN                       NaN                       NaN                       NaN                       NaN                       NaN                       NaN                       NaN
 227: conc_ch4_bef   3.8328039302938165E-005   2.9561403443981704E-005   2.6359916480942497E-005   2.4435337229353914E-005   2.3147560124220125E-005   2.2404625980298573E-005   2.0924944088661782E-005   1.9404767558147072E-005   1.7936954369688352E-005   1.5384162504878149E-005   1.2893399328101690E-005   1.0338822482775341E-005   7.8572942037786159E-006   5.4572021687422612E-006   3.3105790076109817E-006   1.7007514334411750E-006   7.1782467412185338E-007   2.4280145167977517E-007   6.5108239992595754E-008   1.5836061520245128E-008
 227: ch4_prod_depth   0.0000000000000000        0.0000000000000000        0.0000000000000000        0.0000000000000000        0.0000000000000000        0.0000000000000000        0.0000000000000000        0.0000000000000000        0.0000000000000000        0.0000000000000000        0.0000000000000000        0.0000000000000000        0.0000000000000000        0.0000000000000000        0.0000000000000000        0.0000000000000000        0.0000000000000000        0.0000000000000000        0.0000000000000000        0.0000000000000000     
 227: ch4_oxid_depth                       NaN                       NaN                       NaN                       NaN                       NaN                       NaN                       NaN                       NaN                       NaN                       NaN                       NaN                       NaN                       NaN                       NaN                       NaN                       NaN                       NaN                       NaN                       NaN                       NaN
 227: ch4_aere_depth   0.0000000000000000        0.0000000000000000        0.0000000000000000        0.0000000000000000        0.0000000000000000        0.0000000000000000        0.0000000000000000        0.0000000000000000        0.0000000000000000        0.0000000000000000        0.0000000000000000        0.0000000000000000        0.0000000000000000        0.0000000000000000        0.0000000000000000        0.0000000000000000        0.0000000000000000        0.0000000000000000        0.0000000000000000        0.0000000000000000     
 227: epsilon_t-1                       NaN                       NaN                       NaN                       NaN                       NaN                       NaN                       NaN                       NaN                       NaN                       NaN                       NaN                       NaN                       NaN                       NaN                       NaN                       NaN                       NaN                       NaN                       NaN                       NaN
 227: conc_ch4_rel                       NaN                       NaN                       NaN                       NaN                       NaN                       NaN                       NaN                       NaN                       NaN                       NaN                       NaN                       NaN                       NaN                       NaN                       NaN                       NaN                       NaN                       NaN                       NaN                       NaN                       NaN
 227: watsat  0.69094611637956804       0.55403635758411096       0.51465038107298955       0.49052449073912030       0.47792207960252064       0.47616899096880327       0.46805018132178999       0.46283752477255785       0.46283752477255785       0.45245999999999997       0.45245999999999997       0.45245999999999997       0.45245999999999997       0.45245999999999997       0.45245999999999997       0.45245999999999997       0.45245999999999997       0.45245999999999997       0.45245999999999997       0.45245999999999997     
 227: k_h_cc                       NaN                       NaN                       NaN                       NaN                       NaN                       NaN                       NaN                       NaN                       NaN                       NaN                       NaN                       NaN                       NaN                       NaN                       NaN                       NaN                       NaN                       NaN                       NaN                       NaN                       NaN
 227: h2osoi_vol_min  0.69094611637956804       0.55403635758411096       0.51465038107298955       0.49052449073912030       0.47792207960252064       0.47616899096880327       0.46805018132178999       0.46283752477255785       0.46283752477255785       0.45245999999999997       0.45245999999999997       0.45245999999999997       0.45245999999999997       0.45245999999999997       0.45245999999999997       0.45245999999999997       0.45245999999999997       0.45245999999999997       0.45245999999999997       0.45245999999999997     
 227: liqfrac   1.0000000000000000        1.0000000000000000        1.0000000000000000        1.0000000000000000        1.0000000000000000        1.0000000000000000        1.0000000000000000        1.0000000000000000        1.0000000000000000        1.0000000000000000        1.0000000000000000        1.0000000000000000        1.0000000000000000        1.0000000000000000        1.0000000000000000        1.0000000000000000        1.0000000000000000        1.0000000000000000        1.0000000000000000        1.0000000000000000     
 227: t_soisno   0.0000000000000000        0.0000000000000000        0.0000000000000000        0.0000000000000000        0.0000000000000000        0.0000000000000000        0.0000000000000000        0.0000000000000000        0.0000000000000000        0.0000000000000000        0.0000000000000000                            NaN                       NaN                       NaN                       NaN                       NaN                       NaN                       NaN                       NaN                       NaN                       NaN                       NaN                       NaN                       NaN                       NaN                       NaN                       NaN                       NaN                       NaN                       NaN                       NaN                       NaN
 227: t_grnd                       NaN
 227: Latdeg,Londeg=   53.286844012453230        57.510967220423055     
 227: ENDRUN: ERROR: CH4 Conservation Error in CH4Mod during diffusionERROR in /glade/scratch/erik/cesm1_5_alpha06c/components/clm/src/biogeochem/ch4Mod.F90 at line 3598                                                                                                                                                                                                                                                                                                                                                                                                                             
 227: ERROR: Unknown error submitted to shr_sys_abort.
 227:#0  0x2BA8AEE26B57
 227:#1  0x159F44D in __shr_sys_mod_MOD_shr_sys_backtrace
 227:#2  0x159F7A6 in __shr_sys_mod_MOD_shr_sys_abort
 227:#3  0xDDB8AA in __abortutils_MOD_endrun_vanilla
 227:#4  0x1093399 in __ch4mod_MOD_ch4_tran at ch4Mod.F90:0
 227:#5  0x10A3E8C in __ch4mod_MOD_ch4
 227:#6  0xDE160C in __clm_driver_MOD_clm_drv._omp_fn.3 at clm_driver.F90:0
 227:#7  0x2BA8AF3BB96E
 227:#8  0xDE26DB in __clm_driver_MOD_clm_drv
 227:#9  0xDD770B in __lnd_comp_mct_MOD_lnd_run_mct
 227:#10  0x41E585 in __component_mod_MOD_component_run
 227:#11  0x40C91A in __cesm_comp_mod_MOD_cesm_run</thetext>
  </long_desc>
      
      

    </bug>
    <bug>
          <bug_id>2295</bug_id>
          
          <creation_ts>2016-03-09 14:25:12 -0700</creation_ts>
          <short_desc>ch4 conservation error in ne30 1850 case...</short_desc>
          <delta_ts>2016-03-14 12:49:38 -0600</delta_ts>
          <reporter_accessible>1</reporter_accessible>
          <cclist_accessible>1</cclist_accessible>
          <classification_id>1</classification_id>
          <classification>Unclassified</classification>
          <product>CCSM/CESM CLM</product>
          <component>CLM 5.0</component>
          <version>CESM1.4.z Development</version>
          <rep_platform>PC</rep_platform>
          <op_sys>Linux</op_sys>
          <bug_status>ASSIGNED</bug_status>
          <resolution></resolution>
          
          
          <bug_file_loc></bug_file_loc>
          <status_whiteboard></status_whiteboard>
          <keywords></keywords>
          <priority>P2</priority>
          <bug_severity>critical</bug_severity>
          <target_milestone>CLM5</target_milestone>
          
          
          <everconfirmed>1</everconfirmed>
          <reporter name="Erik Kluzek">erik</reporter>
          <assigned_to name="Erik Kluzek">erik</assigned_to>
          <cc>andre</cc>
    
    <cc>dlawren</cc>
    
    <cc>fischer</cc>
    
    <cc>oleson</cc>
    
    <cc>rfisher</cc>
    
    <cc>sacks</cc>
          
          <cf_fixedinversion></cf_fixedinversion>

      

      

      

          <comment_sort_order>oldest_to_newest</comment_sort_order>  
          <long_desc isprivate="0" >
    <commentid>7393</commentid>
    <comment_count>0</comment_count>
    <who name="Erik Kluzek">erik</who>
    <bug_when>2016-03-09 14:25:12 -0700</bug_when>
    <thetext>The following test fails with cesm1_5_alpha06c

ERS_Ld7.ne30_g16.B1850.yellowstone_gnu.allactive-defaultio

 227: CH4 Conservation Error in CH4Mod during diffusion, nstep, c, errch4 (mol /m^2.timestep)         266      201020                       NaN
 227: Latdeg,Londeg=   53.286844012453230        57.510967220423055
 227: ENDRUN: ERROR: CH4 Conservation Error in CH4Mod during diffusionERROR in /glade/scratch/erik/cesm1_5_alpha06c/components/clm/src/biogeochem/ch4Mod.F90 at line 3582                                                                                                                                                                                                                                                                                                                                                                  
 227: ERROR: Unknown error submitted to shr_sys_abort.
 227:#0  0x2B05BDE5EB57
 227:#1  0x159E681 in __shr_sys_mod_MOD_shr_sys_backtrace
 227:#2  0x159E9DA in __shr_sys_mod_MOD_shr_sys_abort
 227:#3  0xDDB8AA in __abortutils_MOD_endrun_vanilla
 227:#4  0x10925CA in __ch4mod_MOD_ch4_tran at ch4Mod.F90:0
 227:#5  0x10A30BF in __ch4mod_MOD_ch4
 227:#6  0xDE160C in __clm_driver_MOD_clm_drv._omp_fn.3 at clm_driver.F90:0
 227:#7  0x2B05BE3F396E
 227:#8  0xDE26DB in __clm_driver_MOD_clm_drv
 227:#9  0xDD770B in __lnd_comp_mct_MOD_lnd_run_mct
 227:#10  0x41E585 in __component_mod_MOD_component_run
 227:#11  0x40C91A in __cesm_comp_mod_MOD_cesm_run</thetext>
  </long_desc><long_desc isprivate="0" >
    <commentid>7394</commentid>
    <comment_count>1</comment_count>
    <who name="Erik Kluzek">erik</who>
    <bug_when>2016-03-10 00:41:01 -0700</bug_when>
    <thetext>I tried replicating some cases for standalone CLM, and they worked...

PASS SMS_Ld7.ne30_g16.I1850CRUCLM50BGCCROP.yellowstone_gnu.clm-default

PASS SMS_Ld7.ne30_g16.IMCRUCLM50BGC.yellowstone_gnu.clm-default

I made the second one as close to the B1850 case as follows...

./xmlchange CLM_BLDNML_OPTS=&quot;-bgc bgc -crop&quot;
./xmlchange CLM_NML_USE_CASE=1850_control,DATM_PRESAERO=clim_1850,MOSART_BLDNML_OPTS=&quot;-simyr 1850&quot;,DATM_CLMNCEP_YR_START=1901,DATM_CLMNCEP_YR_END=1920
./xmlchange CCSM_CO2_PPMV=284.7
and add to user_nl_clm
 finidat = &apos;&apos;</thetext>
  </long_desc><long_desc isprivate="0" >
    <commentid>7396</commentid>
    <comment_count>2</comment_count>
    <who name="Erik Kluzek">erik</who>
    <bug_when>2016-03-10 12:04:08 -0700</bug_when>
    <thetext>Looking at the code where it fails, the problem is that errch4 is equal to nan, so the else gets matched and it aborts. So I need to see why errch4 is going nan. I&apos;m trying a DEBUG=TRUE test case and we&apos;ll see what that does.</thetext>
  </long_desc><long_desc isprivate="0" >
    <commentid>7405</commentid>
    <comment_count>3</comment_count>
    <who name="Erik Kluzek">erik</who>
    <bug_when>2016-03-14 12:14:52 -0600</bug_when>
    <thetext>All of my test DEBUG tests passed. 

DONE ERS_D_Ld7.ne30_g16.B1850.yellowstone_gnu.allactive-defaultio : (test finished, successful coupler log) 
--- Test Functionality  ---:
PASS ERS_D_Ld7.ne30_g16.B1850.yellowstone_gnu.allactive-defaultio.cam.h0.nc : test compare cam.h0 (.base and .rest files) 
PASS ERS_D_Ld7.ne30_g16.B1850.yellowstone_gnu.allactive-defaultio.cice.h.nc : test compare cice.h (.base and .rest files) 
PASS ERS_D_Ld7.ne30_g16.B1850.yellowstone_gnu.allactive-defaultio.clm2.h0.nc : test compare clm2.h0 (.base and .rest files) 
PASS ERS_D_Ld7.ne30_g16.B1850.yellowstone_gnu.allactive-defaultio.pop.h.nc : test compare pop.h (.base and .rest files) 
PASS ERS_D_Ld7.ne30_g16.B1850.yellowstone_gnu.allactive-defaultio.cpl.hi.nc : test compare cpl.hi (.base and .rest files) 
PASS ERS_D_Ld7.ne30_g16.B1850.yellowstone_gnu.allactive-defaultio : test functionality summary (ERS_test) 
PASS ERS_D_Ld7.ne30_g16.B1850.yellowstone_gnu.allactive-defaultio.memleak
--- Test time is 1286 seconds ---
DONE ERS_D_Ld7.ne30_g16.I1850CRUCLM50BGCCROP.yellowstone_gnu.clm-default : (test finished, successful coupler log) 
--- Test Functionality  ---:
PASS ERS_D_Ld7.ne30_g16.I1850CRUCLM50BGCCROP.yellowstone_gnu.clm-default.clm2.h0.nc : test compare clm2.h0 (.base and .rest files) 
PASS ERS_D_Ld7.ne30_g16.I1850CRUCLM50BGCCROP.yellowstone_gnu.clm-default.clm2.h1.nc : test compare clm2.h1 (.base and .rest files) 
PASS ERS_D_Ld7.ne30_g16.I1850CRUCLM50BGCCROP.yellowstone_gnu.clm-default.cpl.hi.nc : test compare cpl.hi (.base and .rest files) 
PASS ERS_D_Ld7.ne30_g16.I1850CRUCLM50BGCCROP.yellowstone_gnu.clm-default : test functionality summary (ERS_test) 
PASS ERS_D_Ld7.ne30_g16.I1850CRUCLM50BGCCROP.yellowstone_gnu.clm-default.memleak
--- Test time is 528 seconds ---
DONE SMS_D_Ld7.ne30_g16.B1850.yellowstone_gnu.allactive-defaultio : (test finished, successful coupler log) 
 --- Test Functionality: ---
PASS SMS_D_Ld7.ne30_g16.B1850.yellowstone_gnu.allactive-defaultio : successful coupler log 
PASS SMS_D_Ld7.ne30_g16.B1850.yellowstone_gnu.allactive-defaultio : test functionality summary 
PASS SMS_D_Ld7.ne30_g16.B1850.yellowstone_gnu.allactive-defaultio.memleak
--- Test time is 751 seconds ---</thetext>
  </long_desc><long_desc isprivate="0" >
    <commentid>7407</commentid>
    <comment_count>4</comment_count>
    <who name="Ben Andre">andre</who>
    <bug_when>2016-03-14 12:17:22 -0600</bug_when>
    <thetext>gnu doesn&apos;t trap floating point exceptions and abort. You need to run an intel debug.</thetext>
  </long_desc><long_desc isprivate="0" >
    <commentid>7408</commentid>
    <comment_count>5</comment_count>
    <who name="Erik Kluzek">erik</who>
    <bug_when>2016-03-14 12:49:38 -0600</bug_when>
    <thetext>(In reply to Ben Andre from comment #4)
&gt; gnu doesn&apos;t trap floating point exceptions and abort. You need to run an
&gt; intel debug.

OK thanks Ben. I am trying that now.

But, one problem with the gnu debug tests, is that they are running to completion rather than dieing in the same way. And that means errch4 isn&apos;t NaN for the DEBUG case, but IS NaN for the non-DEBUG case. So the behavior is different between the two cases, and that likely means there is a numerical error that is causing it to abort in one case and not in the other, because of a tiny roundoff level difference between the two. Which likely means this might be really hard to track down...</thetext>
  </long_desc>
      
      

    </bug>
    <bug>
          <bug_id>2306</bug_id>
          
          <creation_ts>2016-04-12 07:47:23 -0600</creation_ts>
          <short_desc>H2OSOI goes beyond WATSAT</short_desc>
          <delta_ts>2016-04-19 05:50:07 -0600</delta_ts>
          <reporter_accessible>1</reporter_accessible>
          <cclist_accessible>1</cclist_accessible>
          <classification_id>1</classification_id>
          <classification>Unclassified</classification>
          <product>CCSM/CESM CLM</product>
          <component>CLM 4.5</component>
          <version>CESM1.2.z Release</version>
          <rep_platform>All</rep_platform>
          <op_sys>All</op_sys>
          <bug_status>ASSIGNED</bug_status>
          <resolution></resolution>
          
          
          <bug_file_loc></bug_file_loc>
          <status_whiteboard></status_whiteboard>
          <keywords></keywords>
          <priority>P3</priority>
          <bug_severity>normal</bug_severity>
          <target_milestone>CLM5</target_milestone>
          
          
          <everconfirmed>1</everconfirmed>
          <reporter>Dominik.Rains</reporter>
          <assigned_to name="Erik Kluzek">erik</assigned_to>
          <cc>dlawren</cc>
    
    <cc>rfisher</cc>
    
    <cc>swensosc</cc>
          
          <cf_fixedinversion></cf_fixedinversion>

      

      

      

          <comment_sort_order>oldest_to_newest</comment_sort_order>  
          <long_desc isprivate="0" >
    <commentid>7437</commentid>
    <comment_count>0</comment_count>
      <attachid>61</attachid>
    <who name="">Dominik.Rains</who>
    <bug_when>2016-04-12 07:47:23 -0600</bug_when>
    <thetext>Created attachment 61
WATSAT - H2OSOI (areas masked where H2OSOI stays below saturation)

We are observing in our regional CLM 4.5 model setup, using a custom surface dataset and forcings, that over our simulation period H2OSOI often surpasses WATSAT significantly (~8%) in areas with high organic matter and precipitation.


We assume that, independently of our inputs, soil moisture should be constrained by WATSAT at all times.

The modeled catchment is the Murrumbidgee basin in Australia.</thetext>
  </long_desc><long_desc isprivate="0" >
    <commentid>7439</commentid>
    <comment_count>1</comment_count>
    <who name="Erik Kluzek">erik</who>
    <bug_when>2016-04-13 14:13:56 -0600</bug_when>
    <thetext>Hi Dominik

Can you check which soil layer the max(h2osoi) ends up being? The top layer can exceed WATSAT because of ponding. And it looks like ponding is handled differently for urban versus other land-unit types. So you might check what the land-unit types are as well.

Thanks for reporting the issue!</thetext>
  </long_desc><long_desc isprivate="0" >
    <commentid>7445</commentid>
    <comment_count>2</comment_count>
    <who name="">Dominik.Rains</who>
    <bug_when>2016-04-15 03:58:30 -0600</bug_when>
    <thetext>Hi Erik,

many thanks for the input.

it is indeed the topmost layer, no urban areas in that specific area.
I was not aware of the ponding. I will also check for the other layers.


As a side question: Can you suggest the best way of computing residual water content for each CLM pixel?



Best regards,
Dominik</thetext>
  </long_desc><long_desc isprivate="0" >
    <commentid>7446</commentid>
    <comment_count>3</comment_count>
    <who name="Erik Kluzek">erik</who>
    <bug_when>2016-04-18 12:01:55 -0600</bug_when>
    <thetext>Dominik

I checked with Dr. Swenson our local hydrology expert. We don&apos;t calculate  residual water content, anywhere so you&apos;ll have to figure it out based on it&apos;s definition.

He also showed me that pond max is set to zero in clm45 for cesm1_2_1 (so likely cesm1_2_2 as well) for clm4_5 (although it&apos;s non zero for urban). So if you are getting WATSAT&gt;H2OSOI for non-urban points in the first layer, that may indicate somethings wrong still. Can you tell us more about what version of the model you are using?</thetext>
  </long_desc><long_desc isprivate="0" >
    <commentid>7447</commentid>
    <comment_count>4</comment_count>
    <who name="">Dominik.Rains</who>
    <bug_when>2016-04-19 05:50:07 -0600</bug_when>
    <thetext>Dear Erik,

the version is cesm1_2_2 / clm4_5.
All input data is custom including the forcings (era-interim).

Are there any basic checks we can perform to exclude a mistake on our side?
My assumption is that regardless of the input H2OSOI should be constrained but maybe this is not always the case.

A colleague also pointed me towards the paper &apos;http://journals.ametsoc.org/doi/abs/10.1175/2008JHM1011.1&apos; but we are not sure if this is related.</thetext>
  </long_desc>
      
          <attachment
              isobsolete="0"
              ispatch="0"
              isprivate="0"
          >
            <attachid>61</attachid>
            <date>2016-04-12 07:47:23 -0600</date>
            <delta_ts>2016-04-12 07:47:23 -0600</delta_ts>
            <desc>WATSAT - H2OSOI (areas masked where H2OSOI stays below saturation)</desc>
            <filename>watsat-max_sm.png</filename>
            <type>image/png</type>
            <size>39773</size>
            <attacher>Dominik.Rains</attacher>
            

          </attachment>
      

    </bug>
    <bug>
          <bug_id>2310</bug_id>
          
          <creation_ts>2016-05-03 12:47:27 -0600</creation_ts>
          <short_desc>Snowgrain size is zero</short_desc>
          <delta_ts>2017-05-02 13:45:04 -0600</delta_ts>
          <reporter_accessible>1</reporter_accessible>
          <cclist_accessible>1</cclist_accessible>
          <classification_id>1</classification_id>
          <classification>Unclassified</classification>
          <product>CCSM/CESM CLM</product>
          <component>CLM 5.0</component>
          <version>CESM1.5.z Development</version>
          <rep_platform>PC</rep_platform>
          <op_sys>All</op_sys>
          <bug_status>ASSIGNED</bug_status>
          <resolution></resolution>
          
          
          <bug_file_loc></bug_file_loc>
          <status_whiteboard></status_whiteboard>
          <keywords></keywords>
          <priority>P3</priority>
          <bug_severity>major</bug_severity>
          <target_milestone>CLM5</target_milestone>
          <dependson>2027</dependson>
    
    <dependson>1934</dependson>
          <blocked>2439</blocked>
          <everconfirmed>1</everconfirmed>
          <reporter name="Erik Kluzek">erik</reporter>
          <assigned_to name="Erik Kluzek">erik</assigned_to>
          <cc>dlawren</cc>
    
    <cc>fischer</cc>
    
    <cc>jedwards</cc>
    
    <cc>mflanner</cc>
    
    <cc>rfisher</cc>
          
          <cf_fixedinversion></cf_fixedinversion>

      

      

      

          <comment_sort_order>oldest_to_newest</comment_sort_order>  
          <long_desc isprivate="0" >
    <commentid>7467</commentid>
    <comment_count>0</comment_count>
    <who name="Erik Kluzek">erik</who>
    <bug_when>2016-05-03 12:47:27 -0600</bug_when>
    <thetext>Chris Fisher ran into the following problem

It looks like Intel 16 is causing &quot;SNICAR ERROR: snow grain radius of 0&quot;.  The error message about
&quot;calling inside a threaded region&quot; is caused by the call to endrun.  So the real problem is SNICAR.
I&apos;m using f19_g16.I1850CLM45.

This is the errors when NTHRDS=2
   98: SNICAR ERROR: snow grain radius of            0  out of bounds.
  98: NSTEP=            2
  98: flg_snw_ice=            1
  98: column:        38652  level:            0  snl(c)=           -1
  98: lat=    27.4736842105262       lon=    100.000000000000     
  98: h2osno(c)=   1.316051427843381E-005
  98: calling getglobalwrite with decomp_index=        38652  and clmlevel= column
  98: local  column   index =        38652
  98: ERROR: get_proc_bounds ERROR: Calling from inside  a threaded region
  98:Image              PC                Routine            Line        Source             
  98:cesm.exe           0000000003459153  Unknown               Unknown  Unknown
  98:cesm.exe           0000000002B075C0  shr_sys_mod_mp_sh         401  shr_sys_mod.F90
  98:cesm.exe           0000000002B071E3  shr_sys_mod_mp_sh         230  shr_sys_mod.F90
  98:cesm.exe           00000000007E0AA7  decompmod_mp_get_         218  decompMod.F90
  98:cesm.exe           0000000001092139  getglobalvaluesmo          43  GetGlobalValuesMod.F90
  98:cesm.exe           0000000001094751  getglobalvaluesmo         115  GetGlobalValuesMod.F90
  98:cesm.exe           0000000000752566  abortutils_mp_end          69  abortutils.F90
  98:cesm.exe           00000000013CD34C  snowsnicarmod_mp_         423  SnowSnicarMod.F90
  98:cesm.exe           0000000001A47C2C  surfacealbedomod_         616  SurfaceAlbedoMod.F90
  98:cesm.exe           0000000000777ABB  clm_driver_mp_clm         814  clm_driver.F90
  98:libiomp5.so        00002B3A71D039B3  Unknown               Unknown  Unknown
  98:libiomp5.so        00002B3A71CD29A7  Unknown               Unknown  Unknown
  98:libiomp5.so        00002B3A71CD2095  Unknown               Unknown  Unknown
  98:libiomp5.so        00002B3A71D03D33  Unknown               Unknown  Unknown
  98:libpthread.so.0    00002B3A72A109D1  Unknown               Unknown  Unknown
  98:libc.so.6          00002B3A73C0B8FD  Unknown               Unknown  Unknown

This is the error when NTHRDS=1
 167: SNICAR ERROR: snow grain radius of            0  out of bounds.
 167: NSTEP=            2
 167: flg_snw_ice=            1
 167: column:        64665  level:            0  snl(c)=           -1
 167: lat=    40.7368421052631       lon=    110.000000000000     
 167: h2osno(c)=    1.22099255624464     
 167: calling getglobalwrite with decomp_index=        64665  and clmlevel= column
 167: local  column   index =        64665
 167: global column   index =        36670
 167: global landunit index =        12010
 167: global gridcell index =         3663
 167: gridcell longitude    =    110.000000000000     
 167: gridcell latitude     =    40.7368421052631     
 167: column   type         =            1
 167: landunit type         =            1
 167: ENDRUN:
 167: ERROR in SnowSnicarMod.F90 at line 423                                         
 167:                                                                                
 167:                                                                                
 167:                                                                                
 167:                                                                                
 167:                                                                                
 167:                                       
 167: ERROR: Unknown error submitted to shr_sys_abort.
 167:Image              PC                Routine            Line        Source             
 167:cesm.exe           00000000034BC9CE  Unknown               Unknown  Unknown
 167:cesm.exe           0000000002B85E82  shr_sys_mod_mp_sh         401  shr_sys_mod.F90
 167:cesm.exe           0000000002B85AAF  shr_sys_mod_mp_sh         230  shr_sys_mod.F90
 167:cesm.exe           000000000074D60D  abortutils_mp_end          77  abortutils.F90
 167:cesm.exe           0000000001400CC6  snowsnicarmod_mp_         423  SnowSnicarMod.F90
 167:cesm.exe           0000000001AB06BB  surfacealbedomod_         616  SurfaceAlbedoMod.F90
 167:cesm.exe           000000000076EE22  clm_driver_mp_clm         814  clm_driver.F90
 167:cesm.exe           00000000007275BD  lnd_comp_mct_mp_l         437  lnd_comp_mct.F90
 167:cesm.exe           00000000004595D6  component_mod_mp_        1079  component_mod.F90
 167:cesm.exe           00000000004308A3  cesm_comp_mod_mp_        2509  cesm_comp_mod.F90
 167:cesm.exe           000000000044327F  MAIN__                     93  cesm_driver.F90
 167:cesm.exe           000000000040BA1E  Unknown               Unknown  Unknown
 167:libc.so.6          00002B9C5E114D5D  Unknown               Unknown  Unknown


It looks like Intel 16 is causing &quot;SNICAR ERROR: snow grain radius of 0&quot;.  The error message about
&quot;calling inside a threaded region&quot; is caused by the call to endrun.  So the real problem is SNICAR.
I&apos;m using f19_g16.I1850CLM45.

This is the errors when NTHRDS=2
   98: SNICAR ERROR: snow grain radius of            0  out of bounds.
  98: NSTEP=            2
  98: flg_snw_ice=            1
  98: column:        38652  level:            0  snl(c)=           -1
  98: lat=    27.4736842105262       lon=    100.000000000000     
  98: h2osno(c)=   1.316051427843381E-005
  98: calling getglobalwrite with decomp_index=        38652  and clmlevel= column
  98: local  column   index =        38652
  98: ERROR: get_proc_bounds ERROR: Calling from inside  a threaded region
  98:Image              PC                Routine            Line        Source             
  98:cesm.exe           0000000003459153  Unknown               Unknown  Unknown
  98:cesm.exe           0000000002B075C0  shr_sys_mod_mp_sh         401  shr_sys_mod.F90
  98:cesm.exe           0000000002B071E3  shr_sys_mod_mp_sh         230  shr_sys_mod.F90
  98:cesm.exe           00000000007E0AA7  decompmod_mp_get_         218  decompMod.F90
  98:cesm.exe           0000000001092139  getglobalvaluesmo          43  GetGlobalValuesMod.F90
  98:cesm.exe           0000000001094751  getglobalvaluesmo         115  GetGlobalValuesMod.F90
  98:cesm.exe           0000000000752566  abortutils_mp_end          69  abortutils.F90
  98:cesm.exe           00000000013CD34C  snowsnicarmod_mp_         423  SnowSnicarMod.F90
  98:cesm.exe           0000000001A47C2C  surfacealbedomod_         616  SurfaceAlbedoMod.F90
  98:cesm.exe           0000000000777ABB  clm_driver_mp_clm         814  clm_driver.F90
  98:libiomp5.so        00002B3A71D039B3  Unknown               Unknown  Unknown
  98:libiomp5.so        00002B3A71CD29A7  Unknown               Unknown  Unknown
  98:libiomp5.so        00002B3A71CD2095  Unknown               Unknown  Unknown
  98:libiomp5.so        00002B3A71D03D33  Unknown               Unknown  Unknown
  98:libpthread.so.0    00002B3A72A109D1  Unknown               Unknown  Unknown
  98:libc.so.6          00002B3A73C0B8FD  Unknown               Unknown  Unknown

This is the error when NTHRDS=1
 167: SNICAR ERROR: snow grain radius of            0  out of bounds.
 167: NSTEP=            2
 167: flg_snw_ice=            1
 167: column:        64665  level:            0  snl(c)=           -1
 167: lat=    40.7368421052631       lon=    110.000000000000     
 167: h2osno(c)=    1.22099255624464     
 167: calling getglobalwrite with decomp_index=        64665  and clmlevel= column
 167: local  column   index =        64665
 167: global column   index =        36670
 167: global landunit index =        12010
 167: global gridcell index =         3663
 167: gridcell longitude    =    110.000000000000     
 167: gridcell latitude     =    40.7368421052631     
 167: column   type         =            1
 167: landunit type         =            1
 167: ENDRUN:
 167: ERROR in SnowSnicarMod.F90 at line 423                                         
 167:                                                                                
 167:                                                                                
 167:                                                                                
 167:                                                                                
 167:                                                                                
 167:                                       
 167: ERROR: Unknown error submitted to shr_sys_abort.
 167:Image              PC                Routine            Line        Source             
 167:cesm.exe           00000000034BC9CE  Unknown               Unknown  Unknown
 167:cesm.exe           0000000002B85E82  shr_sys_mod_mp_sh         401  shr_sys_mod.F90
 167:cesm.exe           0000000002B85AAF  shr_sys_mod_mp_sh         230  shr_sys_mod.F90
 167:cesm.exe           000000000074D60D  abortutils_mp_end          77  abortutils.F90
 167:cesm.exe           0000000001400CC6  snowsnicarmod_mp_         423  SnowSnicarMod.F90
 167:cesm.exe           0000000001AB06BB  surfacealbedomod_         616  SurfaceAlbedoMod.F90
 167:cesm.exe           000000000076EE22  clm_driver_mp_clm         814  clm_driver.F90
 167:cesm.exe           00000000007275BD  lnd_comp_mct_mp_l         437  lnd_comp_mct.F90
 167:cesm.exe           00000000004595D6  component_mod_mp_        1079  component_mod.F90
 167:cesm.exe           00000000004308A3  cesm_comp_mod_mp_        2509  cesm_comp_mod.F90
 167:cesm.exe           000000000044327F  MAIN__                     93  cesm_driver.F90
 167:cesm.exe           000000000040BA1E  Unknown               Unknown  Unknown
 167:libc.so.6          00002B9C5E114D5D  Unknown               Unknown  Unknown</thetext>
  </long_desc>
      
      

    </bug>
    <bug>
          <bug_id>2320</bug_id>
          
          <creation_ts>2016-06-10 14:30:46 -0600</creation_ts>
          <short_desc>Use tau_* values on params file</short_desc>
          <delta_ts>2017-09-14 14:42:38 -0600</delta_ts>
          <reporter_accessible>1</reporter_accessible>
          <cclist_accessible>1</cclist_accessible>
          <classification_id>1</classification_id>
          <classification>Unclassified</classification>
          <product>CCSM/CESM CLM</product>
          <component>CLM 5.0</component>
          <version>CESM1.4.z Development</version>
          <rep_platform>All</rep_platform>
          <op_sys>All</op_sys>
          <bug_status>ASSIGNED</bug_status>
          <resolution></resolution>
          
          
          <bug_file_loc></bug_file_loc>
          <status_whiteboard></status_whiteboard>
          <keywords></keywords>
          <priority>P3</priority>
          <bug_severity>normal</bug_severity>
          <target_milestone>CLM5</target_milestone>
          
          
          <everconfirmed>1</everconfirmed>
          <reporter name="Erik Kluzek">erik</reporter>
          <assigned_to name="Erik Kluzek">erik</assigned_to>
          <cc>cdkoven</cc>
    
    <cc>dlawren</cc>
    
    <cc>rfisher</cc>
          
          <cf_fixedinversion></cf_fixedinversion>

      

      

      

          <comment_sort_order>oldest_to_newest</comment_sort_order>  
          <long_desc isprivate="0" >
    <commentid>7535</commentid>
    <comment_count>0</comment_count>
    <who name="Erik Kluzek">erik</who>
    <bug_when>2016-06-10 14:30:46 -0600</bug_when>
    <thetext>The &quot;tau_*&quot; values are currently using the hardcoded values in SoilBiogeochemDecompCascadeBGCMod.F90 rather than the values on the params file. The values on the params file are read in -- but discarded. The issue seems to be that answers change when you read in from the params file, rather than doing the inverse that the code has. So if the values read in are the inverse then you can do the divide in the code and preserve answers.

      ! the belowground parameters from century
      tau_l1 = 1./18.5
      tau_l2_l3 = 1./4.9
      tau_s1 = 1./7.3
      tau_s2 = 1./0.2
      tau_s3 = 1./.0045

      ! century leaves wood decomposition rates open, within range of 0 - 0.5 yr^-1
      tau_cwd  = 1./0.3

      ! Todo:  FIX(SPM,032414) - the explicit divide gives different results than when that
      ! value is placed in the parameters netcdf file.  To get bfb, keep the 
      ! divide in source.

      !tau_l1 = params_inst%tau_l1_bgc
      !tau_l2_l3 = params_inst%tau_l2_l3_bgc
      !tau_s1 = params_inst%tau_s1_bgc
      !tau_s2 = params_inst%tau_s2_bgc
      !tau_s3 = params_inst%tau_s3_bgc

      !set turnover rate of coarse woody debris
      !tau_cwd = params_inst%tau_cwd_bgc

There are similar issues in SoilBiogeochemLittVertTranspMod.F90 and in biogeochem/ch4Mod.F90. They are documented with the following type of comment in the code...

! FIX(FIX(SPM,032414),032414) can&apos;t be read off of param file.  not bfb since it is a divide

So this means there are several variables on the params file that get read in and then ignored.</thetext>
  </long_desc><long_desc isprivate="0" >
    <commentid>7536</commentid>
    <comment_count>1</comment_count>
    <who name="Erik Kluzek">erik</who>
    <bug_when>2016-06-10 14:48:41 -0600</bug_when>
    <thetext>The list of variables read and ignored seems to be:

vmax_ch4_oxid        (divide by seconds per hour)
k_m                  (don&apos;t see why this one is a problem) *
k_m_o2               (don&apos;t see why this one is a problem) *
k_m_unsat            (divide by 10?) *
vmax_oxid_unsat      (divide by seconds per hour divided by 10) *
unsat_aere_ratio     (divide by 0.3? -- it&apos;s 0.05_r8 / 0.3_r8) *
tau_l1_bgc           (do inverse)
tau_l2_l3_bgc        (do inverse)
tau_s1_bgc           (do inverse)
tau_s2_bgc           (do inverse)
tau_s3_bgc           (do inverse)
tau_cwd_bgc          (do inverse)
som_diffus           (divide by seconds per year)
cryoturb_diffusion_k (divide by seconds per year)

*
some of these may just need to be set to a higher precision in the params file. Making sure the value put on the file is double precision, may resolve the bit-for-bit issues.</thetext>
  </long_desc><long_desc isprivate="0" >
    <commentid>8202</commentid>
    <comment_count>2</comment_count>
    <who name="Erik Kluzek">erik</who>
    <bug_when>2017-09-11 16:21:00 -0600</bug_when>
    <thetext>Looking at the variables in double precision I see there are a few bits left off the params file for example...

tau_l1 = 0.05405405405406
tau_l2_l3 = 0.2040816326530612
ta_s3 = 222.2222222222222
tau_cwd = 3.333333333333333

other variables have the same issue, but show up in very low significant digits. So this should be able to be made exact.</thetext>
  </long_desc><long_desc isprivate="0" >
    <commentid>8209</commentid>
    <comment_count>3</comment_count>
    <who name="Erik Kluzek">erik</who>
    <bug_when>2017-09-14 14:42:38 -0600</bug_when>
    <thetext>Using the params files: 
lnd/clm2/paramdata/clm5_params.c170913.nc and lnd/clm2/paramdata/clm_params.c170913.nc

I get bit-for-bit results when using the values on the params files above. I have this on a branch and will bring it to the trunk.</thetext>
  </long_desc>
      
      

    </bug>
    <bug>
          <bug_id>2323</bug_id>
          
          <creation_ts>2016-06-24 14:09:30 -0600</creation_ts>
          <short_desc>Remove or reduce duplication in Photosynthesis code for Plant Hydraulic Stress</short_desc>
          <delta_ts>2016-06-24 14:34:37 -0600</delta_ts>
          <reporter_accessible>1</reporter_accessible>
          <cclist_accessible>1</cclist_accessible>
          <classification_id>1</classification_id>
          <classification>Unclassified</classification>
          <product>CCSM/CESM CLM</product>
          <component>CLM 5.0</component>
          <version>CESM1.5.z Development</version>
          <rep_platform>All</rep_platform>
          <op_sys>All</op_sys>
          <bug_status>ASSIGNED</bug_status>
          <resolution></resolution>
          
          
          <bug_file_loc></bug_file_loc>
          <status_whiteboard></status_whiteboard>
          <keywords></keywords>
          <priority>P3</priority>
          <bug_severity>normal</bug_severity>
          <target_milestone>CLM5</target_milestone>
          
          
          <everconfirmed>1</everconfirmed>
          <reporter name="Erik Kluzek">erik</reporter>
          <assigned_to name="Erik Kluzek">erik</assigned_to>
          <cc>andre</cc>
    
    <cc>dlawren</cc>
    
    <cc>oleson</cc>
    
    <cc>rfisher</cc>
    
    <cc>sacks</cc>
          
          <cf_fixedinversion></cf_fixedinversion>

      

      

      

          <comment_sort_order>oldest_to_newest</comment_sort_order>  
          <long_desc isprivate="0" >
    <commentid>7560</commentid>
    <comment_count>0</comment_count>
    <who name="Erik Kluzek">erik</who>
    <bug_when>2016-06-24 14:09:30 -0600</bug_when>
    <thetext>clm4_5_8_r182 brings in plant hydraulic stress (PHS) as an option to the code. The older version needs to stay in place as well to support clm4_5 answers. The new option is brought in largely by duplicating the code in PhotosynthesisMod.F90 for PHS. Almost all subroutines have a PHS version and a non-PHS version. The effects of at least six namelist control items is also reproduced: lnc_opt, reduce_dayl_factor, vcmax_opt, leafresp_method, leafacc, and light_inhibit. Thus any testing for these control items must be duplicated for both PHS on and off. And the size of the file more than doubled from 2k to 2.5k.

This duplication leads to double maintenance of code where changes in the PHS section of the code has to be duplicated in the non-PHS section of the code. It also leads to bugs where a change is made on one side and not the other.

Because, there is so much code duplication this can be managed better by breaking it up into smaller segments that can be called by both PHS and non-PHS versions. The top section of Photosynthesis is almost identically duplicated in PhotosyntesisHydraulicStress until the loop through canopy layers above snow. The sections after that are also duplicated with the PHS setting both sun and shade. I think the duplication can be removed if it&apos;s broken up into three parts by three loops -- calculate_respiration loop, leaf-level-photosynthesis-and-stomotal-conductance, and canopy-photosynthesis-and-stomotal-conductance. The second section includes the call to hybrid or hybrid_PHS.

Other ways of handling the duplication are to set magic numbers in one place as parameters in the code, and to break up the namelist control items into small subroutines/functions that can be called in either branch. Thus these control items are tested whether called from the PHS branch or the non-PHS branch. At least some of these methods should be used to reduce the code duplication.</thetext>
  </long_desc><long_desc isprivate="0" >
    <commentid>7561</commentid>
    <comment_count>1</comment_count>
    <who name="Erik Kluzek">erik</who>
    <bug_when>2016-06-24 14:34:37 -0600</bug_when>
    <thetext>Also the statement functions are reproduced. The statement functions need to be removed and the module versions used. We&apos;ll need to check that this doesn&apos;t change answers for PHS on or off.</thetext>
  </long_desc>
      
      

    </bug>
    <bug>
          <bug_id>2330</bug_id>
          
          <creation_ts>2016-07-06 14:37:21 -0600</creation_ts>
          <short_desc>Issue with frootc/frootn for C4 crops</short_desc>
          <delta_ts>2016-11-09 14:48:21 -0700</delta_ts>
          <reporter_accessible>1</reporter_accessible>
          <cclist_accessible>1</cclist_accessible>
          <classification_id>1</classification_id>
          <classification>Unclassified</classification>
          <product>CCSM/CESM CLM</product>
          <component>CLM 5.0</component>
          <version>CESM1.5.z Development</version>
          <rep_platform>All</rep_platform>
          <op_sys>All</op_sys>
          <bug_status>ASSIGNED</bug_status>
          <resolution></resolution>
          
          
          <bug_file_loc></bug_file_loc>
          <status_whiteboard></status_whiteboard>
          <keywords></keywords>
          <priority>P3</priority>
          <bug_severity>normal</bug_severity>
          <target_milestone>CLM5</target_milestone>
          
          
          <everconfirmed>1</everconfirmed>
          <reporter name="Erik Kluzek">erik</reporter>
          <assigned_to name="Erik Kluzek">erik</assigned_to>
          <cc>dlawren</cc>
    
    <cc>dll</cc>
    
    <cc>oleson</cc>
    
    <cc>rfisher</cc>
          
          <cf_fixedinversion></cf_fixedinversion>

      

      

      

          <comment_sort_order>oldest_to_newest</comment_sort_order>  
          <long_desc isprivate="0" >
    <commentid>7577</commentid>
    <comment_count>0</comment_count>
    <who name="Erik Kluzek">erik</who>
    <bug_when>2016-07-06 14:37:21 -0600</bug_when>
    <thetext>In clm4_5_9_r184 the following has to be commented out for CROP to work well (otherwise C4 crops don&apos;t grow).


+      ! froot C and N
+      ! EBK KO DML: For some reason frootc/frootn can go negative and allowing
+      ! it to be negative is important for C4 crops (otherwise they die) Jun/3/2016
+      call TruncateCandNStates( bounds, filter_soilp, num_soilp, cs%frootc_patch(bounds%begp:bounds%endp),  &amp;
+                                ns%frootn_patch(bounds%begp:bounds%endp), pc(bounds%begp:), pn(bounds%begp:), __LINE__, &amp;
+                                c13=c13cs%frootc_patch, c14=c14cs%frootc_patch,  &amp;
+                                pc13=pc13(bounds%begp:), pc14=pc14(bounds%begp:), allowneg=.true. )</thetext>
  </long_desc><long_desc isprivate="0" >
    <commentid>7632</commentid>
    <comment_count>1</comment_count>
    <who name="Erik Kluzek">erik</who>
    <bug_when>2016-07-29 17:27:25 -0600</bug_when>
    <thetext>*** Bug 2341 has been marked as a duplicate of this bug. ***</thetext>
  </long_desc><long_desc isprivate="0" >
    <commentid>7741</commentid>
    <comment_count>2</comment_count>
    <who name="Erik Kluzek">erik</who>
    <bug_when>2016-11-09 14:48:21 -0700</bug_when>
    <thetext>clm4_5_12_r200 has this workaround put into the code for when running with clm50.</thetext>
  </long_desc>
      
      

    </bug>
    <bug>
          <bug_id>2335</bug_id>
          
          <creation_ts>2016-07-14 13:43:42 -0600</creation_ts>
          <short_desc>PGI problem on hobart with r182</short_desc>
          <delta_ts>2016-07-15 14:40:58 -0600</delta_ts>
          <reporter_accessible>1</reporter_accessible>
          <cclist_accessible>1</cclist_accessible>
          <classification_id>1</classification_id>
          <classification>Unclassified</classification>
          <product>CCSM/CESM CLM</product>
          <component>CLM 4.5</component>
          <version>CESM1.4.z Development</version>
          <rep_platform>All</rep_platform>
          <op_sys>All</op_sys>
          <bug_status>ASSIGNED</bug_status>
          <resolution></resolution>
          
          
          <bug_file_loc></bug_file_loc>
          <status_whiteboard></status_whiteboard>
          <keywords></keywords>
          <priority>P3</priority>
          <bug_severity>normal</bug_severity>
          <target_milestone>CLM5</target_milestone>
          
          
          <everconfirmed>1</everconfirmed>
          <reporter name="Erik Kluzek">erik</reporter>
          <assigned_to name="Erik Kluzek">erik</assigned_to>
          <cc>dlawren</cc>
    
    <cc>fischer</cc>
    
    <cc>jedwards</cc>
    
    <cc>mvertens</cc>
    
    <cc>rfisher</cc>
    
    <cc>sacks</cc>
          
          <cf_fixedinversion></cf_fixedinversion>

      

      

      

          <comment_sort_order>oldest_to_newest</comment_sort_order>  
          <long_desc isprivate="0" >
    <commentid>7601</commentid>
    <comment_count>0</comment_count>
    <who name="Erik Kluzek">erik</who>
    <bug_when>2016-07-14 13:43:42 -0600</bug_when>
    <thetext>The following tests fail for Chris Fischer with cesm1_5_alpha07e...

SMS_D_Ld1.f19_g16.I1850CLM45CN.hobart_pgi.clm-default
ERP_Ld5.f19_g16.I1850CLM45CNF.hobart_pgi.clm-default

I verified that the SMS_D test fails with clm4_5_8_r182 with the following error...

ER (GETFIL): using 
 /fs/cgd/csm/inputdata/lnd/clm2/surfdata_map/surfdata_1.9x2.5_16pfts_simyr1850_c160127.nc
 Successfully read fmax, soil color, sand and clay boundary data
 
 masterlist_addfld ERROR:CROPPROD1ROOTN_TO already on list
 ENDRUN:
 ERROR in /scratch/cluster/erik/clm4_5_8_r182/components/clm/src/main/histFileMod.F90 at line 339                                                                                                                                                                                                                                                                                                                                                                                                                                
 ERROR: Unknown error submitted to shr_sys_abort.

I also looked through the changes for CLM from r178 to r182, and don&apos;t see an obvious reason for this issue, in terms of history fields added. Based on the name of the variable, I think it have been shortened and the whole problem is that there were other variables shortened as well so they appear as duplicates. It also doesn&apos;t seem to be that this compset should have CROP Product variables as it&apos;s a CLM45CN compset. So perhaps CROP is turned on by PGI somehow?</thetext>
  </long_desc><long_desc isprivate="0" >
    <commentid>7602</commentid>
    <comment_count>1</comment_count>
    <who name="Bill Sacks">sacks</who>
    <bug_when>2016-07-14 14:38:57 -0600</bug_when>
    <thetext>This looks extremely similar to a problem I had a few months ago with pgi 15.10 on yellowstone. Search for &quot;already on list&quot; here:

https://wiki.ucar.edu/display/ccsm/Fortran+Compiler+Bug+List

I chalked that up to a problem that pgi had with the treatment of allocatable character variables, though wasn&apos;t completely confident of that diagnosis. I got around that bug by making some of the character variables fixed length rather than allocatables: See the COMPILER_BUG notes in SpeciesIsotopeType and SpeciesNonIsotopeType. However, there are still some allocatable character variables in SpeciesIsotopeType and SpeciesNonIsotopeType: function return values and at least one local variable. My initial guess would be that pgi on hobart (15.1?) is mis-handling these.

As to Erik&apos;s suggestion:

&gt; perhaps CROP is turned on by PGI somehow?

I don&apos;t think that&apos;s the problem: the CROPPROD1 variables are added to the history list regardless of whether crop is turned on. (Though maybe they shouldn&apos;t be....)

Since this only seems to show up with a relatively older version of the pgi compiler (if I&apos;m right that hobart uses pgi 15.1), my inclination would be to ignore this problem.</thetext>
  </long_desc><long_desc isprivate="0" >
    <commentid>7607</commentid>
    <comment_count>2</comment_count>
    <who name="Erik Kluzek">erik</who>
    <bug_when>2016-07-15 14:40:58 -0600</bug_when>
    <thetext>I had a comment that collided with Bill&apos;s, so I&apos;m resending what I had. It sounds like we are good with ignoring this for now. But, since I figured it out, just in case it&apos;s useful in the future...

Changing the test to use nag rather than pgi, it still fails, but due to a different issue.

SMS_D_Ld1.f19_g16.I1850CLM45CN.hobart_nag.clm-default

It fails in lnd initialization, but further along. 

cesm.log

 NetCDF: Invalid dimension ID or name
 NetCDF: Invalid dimension ID or name
 NetCDF: Invalid dimension ID or name
 NetCDF: Invalid dimension ID or name
 NetCDF: Variable not found
 NetCDF: Variable not found
[h008:95687] 47 more processes have sent help message help-mpi-btl-openib.txt / reg mem limit low
[h008:95687] Set MCA parameter &quot;orte_base_help_aggregate&quot; to 0 to see all help / error messages

lnd.log

(shr_strdata_print)   mapwrit ( 1) = NOT_SET
(shr_strdata_print)   tintalgo( 1) = nearest
(shr_strdata_print)
(shr_strdata_print) nvectors    =      0
(shr_strdata_print) ----------------------------------------------------------
(shr_dmodel_readLBUB) file lb: /fs/cgd/csm/inputdata/lnd/clm2/firedata/clmforc.Li_2012_hdm_0.5x0.5_AVHRR_simyr1850-2010_c130401.nc       1
(shr_dmodel_readstrm) open   : /fs/cgd/csm/inputdata/lnd/clm2/firedata/clmforc.Li_2012_hdm_0.5x0.5_AVHRR_simyr1850-2010_c130401.nc
(shr_dmodel_readLBUB) file ub: /fs/cgd/csm/inputdata/lnd/clm2/firedata/clmforc.Li_2012_hdm_0.5x0.5_AVHRR_simyr1850-2010_c130401.nc       1

It also looks to me, like there should NOT be any fields with a name starting with CROPPROD1ROOTN.</thetext>
  </long_desc>
      
      

    </bug>
    <bug>
          <bug_id>2336</bug_id>
          
          <creation_ts>2016-07-25 10:56:16 -0600</creation_ts>
          <short_desc>Not all hard-coded constants in the CLM model are double precision...</short_desc>
          <delta_ts>2016-07-25 10:57:33 -0600</delta_ts>
          <reporter_accessible>1</reporter_accessible>
          <cclist_accessible>1</cclist_accessible>
          <classification_id>1</classification_id>
          <classification>Unclassified</classification>
          <product>CCSM/CESM CLM</product>
          <component>CLM 4.5</component>
          <version>CESM1.5.z Development</version>
          <rep_platform>All</rep_platform>
          <op_sys>All</op_sys>
          <bug_status>ASSIGNED</bug_status>
          <resolution></resolution>
          
          
          <bug_file_loc></bug_file_loc>
          <status_whiteboard></status_whiteboard>
          <keywords></keywords>
          <priority>P3</priority>
          <bug_severity>normal</bug_severity>
          <target_milestone>CLM5</target_milestone>
          <dependson>2141</dependson>
          
          <everconfirmed>1</everconfirmed>
          <reporter name="Erik Kluzek">erik</reporter>
          <assigned_to name="Erik Kluzek">erik</assigned_to>
          <cc>andre</cc>
    
    <cc>dlawren</cc>
    
    <cc>oleson</cc>
    
    <cc>rfisher</cc>
    
    <cc>sacks</cc>
          
          <cf_fixedinversion></cf_fixedinversion>

      

      

      

          <comment_sort_order>oldest_to_newest</comment_sort_order>  
          <long_desc isprivate="0" >
    <commentid>7612</commentid>
    <comment_count>0</comment_count>
    <who name="Erik Kluzek">erik</who>
    <bug_when>2016-07-25 10:56:16 -0600</bug_when>
    <thetext>There&apos;s a bunch of hard-coded constants in the model that should be double precision, but are single precision...

Here&apos;s a sampling...

biogeochem/CNC14DecayMod.F90:                  spinup_term = 1.
biogeochem/CNDVDriverMod.F90:              long_name=&apos;land/ocean mask (0.=ocean and 1.=land)&apos;)
biogeochem/CNDVDriverMod.F90:              long_name=&apos;land/ocean mask (0.=ocean and 1.=land)&apos;)
biogeochem/CNDVEstablishmentMod.F90:    real(r8), parameter :: ramp_agddtw = 300.0
biogeochem/CNDVEstablishmentMod.F90:            greffic(p) = 0.
biogeochem/CNDVEstablishmentMod.F90:            heatstress(p) = 0.
biogeochem/CNFUNMod.F90:                     if(delta_CN .gt.0.and. frac_ideal_C_use.lt.1.0)then           
biogeochem/CNFUNMod.F90:                     if(delta_CN.lt.0.0)then
biogeochem/CNFUNMod.F90:   do while(exitloop==0.and.cost_retrans_temp .lt. total_n_resistance.and. &amp;
biogeochem/CNFireBaseMod.F90:                      baf_peatf(c))/2.0*dt))/(dtrotr_col(c)*dayspyr*secspday/dt)/dt
biogeochem/CNGapMortalityMod.F90:    real(r8):: k_mort = 0.3  ! coeff of growth efficiency in mortality equation
biogeochem/CNProductsMod.F90:    kprod1  = 7.2e-8
biogeochem/CNProductsMod.F90:    kprod10 = 7.2e-9
biogeochem/CNProductsMod.F90:    kprod100 = 7.2e-10
biogeochem/DUSTMod.F90:         write(iulog,*) &apos;p2l_1d error: sumwt is greater than 1.0 at l= &apos;,index
biogeochem/DUSTMod.F90:         write(iulog,*) &apos;dstmbl: ryn_nbr_frc_thr_prx_opt &lt; 0.03&apos;
biogeochem/DryDepVelocity.F90:               if (elai(pi) &lt; (minlai+0.05*(maxlai-minlai))) then  
biogeochem/DryDepVelocity.F90:               if(ispec.eq.index_o3.or.ispec.eq.index_o3a.or.ispec.eq.index_so2) then 
biogeochem/DryDepVelocity.F90:                     rs=(fsun(pi)*rssun(pi)/elai(pi))+((rssha(pi)/elai(pi))*(1.-fsun(pi)))
biogeochem/DryDepVelocity.F90:                        if(ispec.ne.index_o3.and.ispec.ne.index_o3a.and.ispec.ne.index_so2) then 
biogeochem/NutrientCompetitionCLM45defaultMod.F90:            f3 = (2.7/(1.0+exp(-0.004*(annsum_npp(p) - 300.0)))) - 0.4
biogeochem/NutrientCompetitionCLM45defaultMod.F90:            f3 = (2.7/(1.0+exp(-0.004*(annsum_npp(p) - 300.0)))) - 0.4
biogeochem/NutrientCompetitionFlexibleCNMod.F90:            f3 = (2.7/(1.0+exp(-0.004*(annsum_npp(p) - 300.0)))) - 0.4
biogeochem/NutrientCompetitionFlexibleCNMod.F90:            f3 = (2.7/(1.0+exp(-0.004*(annsum_npp(p) - 300.0)))) - 0.4
biogeochem/VOCEmissionMod.F90:                co2_ppmv = 1.e6*forc_pco2(g)/forc_pbot(c)
biogeochem/ch4Mod.F90:               write(iulog,*)&apos;CH4 Conservation Error in CH4Mod driver, nstep, c, errch4 (gC /m^2.timestep)&apos;, &amp;
biogeochem/ch4Mod.F90:                  write(iulog,*)&apos;CH4 Conservation Error in CH4Mod driver for lake column, nstep, c, errch4 (gC/m^2.timestep)&apos;, &amp;
biogeochem/ch4Mod.F90:            write(iulog,*)&apos;CH4 Conservation Error in CH4Mod during diffusion, nstep, c, errch4 (mol /m^2.timestep)&apos;, &amp;
biogeochem/dynConsBiogeochemMod.F90:             if(patch%itype(p)==4.or.patch%itype(p)==6)then
biogeophys/ActiveLayerMod.F90:            if ( grc%lat(g) &gt; 0. ) then 
biogeophys/ActiveLayerMod.F90:               altmax(c) = 0.
biogeophys/ActiveLayerMod.F90:            if ( grc%lat(g) &lt;= 0. ) then 
biogeophys/ActiveLayerMod.F90:               altmax(c) = 0.
biogeophys/BalanceCheckMod.F90:             forc_rain_col(c) = 0.
biogeophys/BalanceCheckMod.F90:             forc_snow_col(c) = 0.
biogeophys/BandDiagonalMod.F90:       ab=0.0
biogeophys/CanopyHydrologyMod.F90:             qflx_prec_grnd_snow(p) = 0.
biogeophys/CanopyHydrologyMod.F90:             qflx_prec_grnd_rain(p) = 0.
biogeophys/CanopyHydrologyMod.F90:          accum_factor=0.1
biogeophys/CanopyHydrologyMod.F90:          if (h2osno(c) &gt; 0.0) then
biogeophys/CanopyHydrologyMod.F90:                int_snow(c) = 0. !reset prior to adding newsnow below
biogeophys/CanopyHydrologyMod.F90:                d=0.0
biogeophys/CanopyHydrologyMod.F90:                sigma=1.0e3 * micro_sigma(c) ! convert to mm
biogeophys/CanopyHydrologyMod.F90:                        +sigma/sqrt(2.0*shr_const_pi)*exp(-d**2/(2.0*sigma**2)) &amp;
biogeophys/CanopyTemperatureMod.F90:               qred = (1.-frac_sno(c))*hr_road_perv + frac_sno(c)
biogeophys/LakeFluxesMod.F90:    real(r8), parameter :: prn = 0.713             ! Prandtl # for air at neutral stability
biogeophys/LakeFluxesMod.F90:    real(r8), parameter :: sch = 0.66              ! Schmidt # for water in air at neutral stability
biogeophys/LakeTemperatureMod.F90:          hc_soisno(c) = hc_soisno(c) + cv_lake(c,j)*t_lake(c,j)/1.e6
biogeophys/LakeTemperatureMod.F90:             hc_soisno(c) = hc_soisno(c) + cv(c,j)*t_soisno(c,j)/1.e6
biogeophys/LakeTemperatureMod.F90:             if (j &gt;= 1) hc_soi(c) = hc_soi(c) + cv(c,j)*t_soisno(c,j)/1.e6
biogeophys/LunaMod.F90:         if(tlai(p) &gt; 0.0)then   
biogeophys/LunaMod.F90:                PARTop = RadTop*4.6    !conversion from w/m2 to umol/m2/s. PAR is still in umol photons, not electrons. Also the par240d_z is only for radiation at visible range. Hence 4.6 not 2.3 multiplier. 
biogeophys/LunaMod.F90:                     if(gpp_day(p)&gt;0.0 )then   !only optimize if there is growth and it is C3 plants
biogeophys/LunaMod.F90:                             write(iulog, *) &apos;Warning: leaf nitrogen content become unrealistically high (&gt;15.0 g N/m2 leaf) &apos;, &amp;
biogeophys/LunaMod.F90:                         if(enzs_z(p,z)&lt;1.0) then
biogeophys/LunaMod.F90:             if(ndaysteps(p)&gt;0.0) then
biogeophys/LunaMod.F90:             if(ndaysteps(p)&gt;0.0)then
biogeophys/LunaMod.F90:  chg_per_step = 0.02* FNCa
biogeophys/PhotosynthesisMod.F90:         long_name=&apos;enzyme decay status during stress: 1.0-fully active; 0.0-all decayed&apos;, units=&apos;unitless&apos;, &amp;
biogeophys/PhotosynthesisMod.F90:       if(abs(xm) &lt;= tol1 .or. fb == 0.)then
biogeophys/PhotosynthesisMod.F90:    real(r8), parameter :: tolf=1.e-6,toldx=1.e-9
biogeophys/RootBiophysMod.F90:          rootfr(p,:) = 0.
biogeophys/RootBiophysMod.F90:    real(r8), parameter :: rootprof_exp  = 3.  ! how steep profile is for root C inputs (1/ e-folding depth) (1/m)      
biogeophys/RootBiophysMod.F90:          rootfr(p,1) = 0.
biogeophys/SnowHydrologyMod.F90:    real(r8), parameter :: min_snow_to_keep = 1.e-9  ! fraction of bottom snow layer to keep with capping
biogeophys/SnowSnicarMod.F90:                        mu_one    = 0.5
biogeophys/SnowSnicarMod.F90:                        gamma1(i) = (3**0.5)*(2-(omega_star(i)*(1+g_star(i))))/2
biogeophys/SnowSnicarMod.F90:                        gamma2(i) = omega_star(i)*(3**0.5)*(1-g_star(i))/2
biogeophys/SnowSnicarMod.F90:                        gamma3(i) = (1-((3**0.5)*g_star(i)*mu_not))/2
biogeophys/SnowSnicarMod.F90:                        mu_one    = 1/(3**0.5)
biogeophys/SnowSnicarMod.F90:                        gamma3(i) = (1-((3**0.5)*g_star(i)*mu_not))/2
biogeophys/SnowSnicarMod.F90:                        mu_one    = 0.5
biogeophys/SnowSnicarMod.F90:                        n=floor(i/2.0)
biogeophys/SnowSnicarMod.F90:                     if (flx_abs_lcl(i,bnd_idx) &lt; -0.00001) then
biogeophys/SnowSnicarMod.F90:                  write (iulog,&quot;(a,e12.6,a,i6,a,i6)&quot;) &quot;SNICAR ERROR: Energy conservation error of : &quot;, energy_sum, &amp;
biogeophys/SnowSnicarMod.F90:               if (albout_lcl(bnd_idx) &gt; 1.0) then
biogeophys/SnowSnicarMod.F90:                  write (iulog,*) &quot;SNICAR ERROR: Albedo &gt; 1.0 at c: &quot;, c_idx, &quot; NSTEP= &quot;,nstep
biogeophys/SoilFluxesMod.F90:            if ((h2osoi_liq(c,j)+h2osoi_ice(c,j)) &gt; 0.) then
biogeophys/SoilFluxesMod.F90:               qflx_evap_grnd(p) = 0.
biogeophys/SoilFluxesMod.F90:                 + (1-frac_veg_nosno(p))*(1.-emg(c))*forc_lwrad(c) &amp;
biogeophys/SoilHydrologyInitTimeConstMod.F90:                   if ( soil_layerstruct /= &apos;10SL_3.5m&apos; )then
biogeophys/SoilHydrologyInitTimeConstMod.F90:            d = 0.0
biogeophys/SoilHydrologyInitTimeConstMod.F90:               dfdd = exp(-d**2/(2.0*micro_sigma(c)**2))/(micro_sigma(c)*sqrt(2.0*shr_const_pi))
biogeophys/SoilHydrologyInitTimeConstMod.F90:                 micro_sigma(c)/sqrt(2.0*shr_const_pi)*exp(-d**2/(2.0*micro_sigma(c)**2))         
biogeophys/SoilHydrologyInitTimeConstMod.F90:       xksat = 0.0070556 *( 10.**(-0.884+0.0153*sandvic(i)) )
biogeophys/SoilHydrologyMod.F90:               if (xs(c) &gt; 0.) then
biogeophys/SoilHydrologyMod.F90:             if (h2osfc(c) &lt; 0.0) then
biogeophys/SoilHydrologyMod.F90:                h2osfc(c) = 0.0
biogeophys/SoilHydrologyMod.F90:               * ( 1. - (1.+1.e3*zwt(c)/sucsat(c,nlevsoi))**(-1./bsw(c,nlevsoi)))
biogeophys/SoilHydrologyMod.F90:             if(qcharge_tot &gt; 0.) then !rising water table
biogeophys/SoilHydrologyMod.F90:                        * ( 1. -  (1.+1.e3*zwt(c)/sucsat(c,j))**(-1./bsw(c,j)))
biogeophys/SoilHydrologyMod.F90:                   qcharge_layer=min(qcharge_tot,(s_y*(zwt(c) - zi(c,j-1))*1.e3))
biogeophys/SoilHydrologyMod.F90:                   if (qcharge_tot &lt;= 0.) exit
biogeophys/SoilHydrologyMod.F90:                        * ( 1. -  (1.+1.e3*zwt(c)/sucsat(c,j))**(-1./bsw(c,j)))
biogeophys/SoilHydrologyMod.F90:                   qcharge_layer=max(qcharge_tot,-(s_y*(zi(c,j) - zwt(c))*1.e3))
biogeophys/SoilHydrologyMod.F90:                   if (qcharge_tot &gt;= 0.) then 
biogeophys/SoilHydrologyMod.F90:             sat_lev=0.9
biogeophys/SoilHydrologyMod.F90:                if (rsub_top_tot &gt;= 0.) then 
biogeophys/SoilHydrologyMod.F90:             sat_lev=0.9
biogeophys/SoilHydrologyMod.F90:                   if (rsub_top_tot &gt;= 0.) then 
biogeophys/SoilHydrologyMod.F90:                  * ( 1. - (1.+1.e3*zwt(c)/sucsat(c,nlevsoi))**(-1./bsw(c,nlevsoi)))
biogeophys/SoilHydrologyMod.F90:                if(rsub_top_tot &gt; 0.) then !rising water table
biogeophys/SoilHydrologyMod.F90:                              * ( 1. - (1.+1.e3*zwt(c)/sucsat(c,j))**(-1./bsw(c,j)))
biogeophys/SoilHydrologyMod.F90:                         rsub_top_layer=max(rsub_top_tot,-(s_y*(zi(c,j) - zwt(c))*1.e3))
biogeophys/SoilHydrologyMod.F90:                         if (rsub_top_tot &gt;= 0.) then 
biogeophys/SoilHydrologyMod.F90:             sat_lev=0.9
biogeophys/SoilHydrologyMod.F90:                        * ( 1. - (1.+1.e3*zwt(c)/sucsat(c,k))**(-1./bsw(c,k)))
biogeophys/SoilHydrologyMod.F90:                   if (drainage_tot &gt;= 0.) then 
biogeophys/SoilHydrologyMod.F90:          sat_lev=0.9
biogeophys/SoilHydrologyMod.F90:          if(rsub_top_tot &gt; 0.) then !rising water table
biogeophys/SoilHydrologyMod.F90:                     * ( 1. - (1.+1.e3*zwt(c)/sucsat(c,j))**(-1./bsw(c,j)))
biogeophys/SoilHydrologyMod.F90:                rsub_top_layer=max(rsub_top_tot,-(s_y*(zi(c,j) - zwt(c))*1.e3))
biogeophys/SoilHydrologyMod.F90:                if (rsub_top_tot &gt;= 0.) then 
biogeophys/SoilStateInitTimeConstMod.F90:             if ( soil_layerstruct /= &apos;10SL_3.5m&apos; )then ! apply soil texture from 10 layer input dataset 
biogeophys/SoilStateInitTimeConstMod.F90:             soilstate_inst%bsw_col(c,lev)    = 2.91 + 0.159*clay
biogeophys/SoilStateInitTimeConstMod.F90:             xksat = 0.0070556 *( 10.**(-0.884+0.0153*sand) ) ! mm/s
biogeophys/SoilStateInitTimeConstMod.F90:                xksat = 0.0070556 *( 10.**(-0.884+0.0153*sand) ) ! mm/s
biogeophys/SoilTemperatureMod.F90:         xmf_h2osfc(c) = 0.
biogeophys/SoilTemperatureMod.F90:         zh2osfc=1.0e-3*(0.5*h2osfc(c)) !convert to [m] from [mm]
biogeophys/SoilTemperatureMod.F90:               if (h2osoi_ice(c,j) &gt; 0. .AND. t_soisno(c,j) &gt; tfrz) then
biogeophys/SoilTemperatureMod.F90:       dzm=(0.5*dz_h2osfc(c)+col%z(c,1))
biogeophys/SoilTemperatureMod.F90:         dzm=(0.5*dz_h2osfc(c)+col%z(c,1))
biogeophys/SoilTemperatureMod.F90:       dzm=(0.5*dz_h2osfc(c)+col%z(c,1))
biogeophys/SoilTemperatureMod.F90:       dzm=(0.5*dz_h2osfc(c)+col%z(c,1))
biogeophys/SoilTemperatureMod.F90:       dzm=(0.5*dz_h2osfc(c)+col%z(c,1))
biogeophys/SoilWaterMovementMod.F90:    baseflow_sink = 0.
biogeophys/SoilWaterMovementMod.F90:                  vwc_zwt(c) = min(vwc_zwt(c), 0.5*(watsat(c,nlevsoi) + h2osoi_vol(c,nlevsoi)) )
biogeophys/SoilWaterMovementMod.F90:         dwat_temp = 0.
biogeophys/SoilWaterMovementMod.F90:            qout(j) = 0.
biogeophys/SoilWaterMovementMod.F90:            dqodw1(j) = 0.
biogeophys/SoilWaterMovementMod.F90:            dqodw2(j) = 0.
biogeophys/SoilWaterMovementMod.F90:          qout(j) = 0.
biogeophys/SoilWaterMovementMod.F90:          dqodw1(j) = 0.
biogeophys/SoilWaterMovementMod.F90:               qcharge(c) = -ka * (wh_zwt-wh)  /((zwt(c)+1.e-3)*m_to_mm)
biogeophys/SoilWaterMovementMod.F90:               qcharge(c) = -ka * (wh_zwt-wh)/((zwt(c)-z(c,jwt))*m_to_mm*2.0)
biogeophys/SurfaceAlbedoMod.F90:                albgrd_bc(c,ib) = albsod(c,ib)*(1.-frac_sno(c)) + albsnd_bc(c,ib)*frac_sno(c)
biogeophys/SurfaceAlbedoMod.F90:                albgri_bc(c,ib) = albsoi(c,ib)*(1.-frac_sno(c)) + albsni_bc(c,ib)*frac_sno(c)
biogeophys/SurfaceAlbedoMod.F90:                   albgrd_oc(c,ib) = albsod(c,ib)*(1.-frac_sno(c)) + albsnd_oc(c,ib)*frac_sno(c)
biogeophys/SurfaceAlbedoMod.F90:                   albgri_oc(c,ib) = albsoi(c,ib)*(1.-frac_sno(c)) + albsni_oc(c,ib)*frac_sno(c)
biogeophys/SurfaceAlbedoMod.F90:                albgrd_dst(c,ib) = albsod(c,ib)*(1.-frac_sno(c)) + albsnd_dst(c,ib)*frac_sno(c)
biogeophys/SurfaceAlbedoMod.F90:                albgri_dst(c,ib) = albsoi(c,ib)*(1.-frac_sno(c)) + albsni_dst(c,ib)*frac_sno(c)
biogeophys/SurfaceAlbedoMod.F90:                albgrd_pur(c,ib) = albsod(c,ib)*(1.-frac_sno(c)) + albsnd_pur(c,ib)*frac_sno(c)
biogeophys/SurfaceAlbedoMod.F90:                albgri_pur(c,ib) = albsoi(c,ib)*(1.-frac_sno(c)) + albsni_pur(c,ib)*frac_sno(c)
biogeophys/SurfaceAlbedoMod.F90:                        ((1.-frac_sno(c))*(1-albsod(c,ib))*(flx_absd_snw(c,i,ib)/(1.-albsnd(c,ib))))
biogeophys/SurfaceAlbedoMod.F90:                        ((1.-frac_sno(c))*(1-albsoi(c,ib))*(flx_absi_snw(c,i,ib)/(1.-albsni(c,ib))))
biogeophys/SurfaceAlbedoMod.F90:                        ((1.-frac_sno(c))*(1-albsod(c,ib))*(flx_absd_snw(c,i,ib)/(1.-albsnd(c,ib))))
biogeophys/SurfaceAlbedoMod.F90:                        ((1.-frac_sno(c))*(1-albsoi(c,ib))*(flx_absi_snw(c,i,ib)/(1.-albsni(c,ib))))
biogeophys/SurfaceAlbedoMod.F90:                   flx_absdv(c,i) = flx_absd_snw(c,i,ib)*(1.-albsnd(c,ib))
biogeophys/SurfaceAlbedoMod.F90:                   flx_absiv(c,i) = flx_absi_snw(c,i,ib)*(1.-albsni(c,ib))
biogeophys/SurfaceAlbedoMod.F90:                   flx_absdn(c,i) = flx_absd_snw(c,i,ib)*(1.-albsnd(c,ib))
biogeophys/SurfaceAlbedoMod.F90:                   flx_absin(c,i) = flx_absi_snw(c,i,ib)*(1.-albsni(c,ib))
biogeophys/SurfaceRadiationMod.F90:             write(iulog,*)&quot;flx_absdv1  = &quot;,trd(p,1)*(1.-albgrd(c,1))
biogeophys/SurfaceRadiationMod.F90:             write(iulog,*)&quot;flx_absiv1  = &quot;,tri(p,1)*(1.-albgri(c,1))
biogeophys/SurfaceRadiationMod.F90:             write(iulog,*)&quot;flx_absdn1  = &quot;,trd(p,2)*(1.-albgrd(c,2))
biogeophys/SurfaceRadiationMod.F90:             write(iulog,*)&quot;flx_absin1  = &quot;,tri(p,2)*(1.-albgri(c,2))
biogeophys/SurfaceResistanceMod.F90:            d0 = 2.12e-5*(t_soisno(c,1)/273.15)**1.75 ![Bitelli et al., JH, 08]
biogeophys/TemperatureType.F90:                        this%t_soisno_col(c,j) = 297.56 - (j-1) * ((297.56-293.16)/(nlevgrnd-1)) 
biogeophys/TemperatureType.F90:                     this%t_soisno_col(c,1:nlevurb) = 297.56
biogeophys/TemperatureType.F90:                        this%t_soisno_col(c,j) = 289.46 - (j-1) * ((289.46-295.16)/(nlevgrnd-1)) 
biogeophys/TemperatureType.F90:                     this%t_soisno_col(c,1:nlevurb) = 289.46
biogeophys/TemperatureType.F90:            this%t_veg_patch(p)   = 297.56
biogeophys/TemperatureType.F90:            this%t_veg_patch(p)   = 289.46
biogeophys/TemperatureType.F90:            this%t_ref2m_patch(p) = 297.56
biogeophys/TemperatureType.F90:            this%t_ref2m_patch(p) = 289.46
biogeophys/TemperatureType.F90:               this%t_ref2m_u_patch(p) = 297.56
biogeophys/TemperatureType.F90:               this%t_ref2m_u_patch(p) = 289.46
biogeophys/TemperatureType.F90:                  this%t_ref2m_r_patch(p) = 297.56
biogeophys/TemperatureType.F90:                  this%t_ref2m_r_patch(p) = 289.46
biogeophys/UrbanFluxesMod.F90:            write(iulog,*)&apos;clm model is stopping - error is greater than 4.e-9 kg/m**2/s&apos;
biogeophys/WaterStateType.F90:            avgflag=&apos;A&apos;, long_name=&apos;soil water as frac. of whc for top 0.05 m&apos;, &amp;
biogeophys/WaterStateType.F90:            if(this%snow_depth_col(c) &gt; 0.0)  then
biogeophys/WaterStateType.F90:               fmelt    = (snowbd/100.)**1.
biogeophys/WaterStateType.F90:               this%frac_sno_col(c) = tanh( this%snow_depth_col(c) /(2.5 * zlnd * fmelt) )
cpl/lnd_comp_esmf.F90:         &quot;The Community Land Model version 4.0 is &quot; // &amp;
cpl/lnd_comp_esmf.F90:         &quot;the land model used in the CESM1.0.  &quot; // &amp;
dyn_subgrid/dynLandunitAreaMod.F90:    real(r8), parameter :: tol = 1.e-14  ! tolerance for making sure sum of landunit weights equals 1
main/FuncPedotransferMod.F90:   bsw = 3.10+0.157*clay-0.003*sand            
main/FuncPedotransferMod.F90:   xksat         = 0.0070556 *(10.**(-0.60+0.0126*sand-0.0064*clay) )     !mm/s now use table 4.
main/FuncPedotransferMod.F90:   bsw    = 2.91 + 0.159*clay
main/FuncPedotransferMod.F90:   xksat         = 0.0070556 *( 10.**(-0.884+0.0153*sand) ) ! mm/s, from table 5 
main/FuncPedotransferMod.F90:   watsat = -0.00108*sand+0.494305
main/FuncPedotransferMod.F90:   bsw = 0.137*clay + 3.501
main/clm_driver.F90:1000 format (1x,&apos;nstep = &apos;,i10,&apos;   TS = &apos;,f21.15)
main/clm_initializeMod.F90:       max_decl = 0.409571
main/clm_varcon.F90:  real(r8), parameter :: n_melt=0.7                         ! fsca shape parameter
main/clm_varcon.F90:  real(r8), parameter :: e_ice=6.0                          ! soil ice impedance factor
main/clm_varcon.F90:  real(r8), parameter :: pc = 0.4                           ! threshold probability
main/clm_varcon.F90:  real(r8), parameter :: mu = 0.13889                       ! connectivity exponent 
main/clm_varcon.F90:  real(r8), parameter :: preind_atm_del13c = -6.0   ! preindustrial value for atmospheric del13C
main/clm_varcon.F90:  real(r8), parameter :: preind_atm_ratio = SHR_CONST_PDB + (preind_atm_del13c * SHR_CONST_PDB)/1000.0  ! 13C/12C
main/clm_varcon.F90:  real(r8) :: c13ratio = preind_atm_ratio/(1.0+preind_atm_ratio) ! 13C/(12+13)C preind atmosphere
main/clm_varcon.F90:  real(r8) :: vent_ach = 0.3                    ! ventilation rate (air exchanges per hour)
main/clm_varctl.F90:  character(len=256), public :: source   = &quot;Community Land Model CLM4.0&quot; 
main/clm_varctl.F90:  character(len=256), public :: conventions = &quot;CF-1.0&quot;                   
main/clm_varctl.F90:  character(len=16), public :: soil_layerstruct = &apos;10SL_3.5m&apos;
main/clm_varpar.F90:    if ( soil_layerstruct == &apos;10SL_3.5m&apos; ) then
main/clm_varpar.F90:    else if ( soil_layerstruct == &apos;23SL_3.5m&apos; ) then 
main/clm_varpar.F90:    else if ( soil_layerstruct == &apos;20SL_8.5m&apos; ) then
main/controlMod.F90:          write(iulog,*)&apos;ERROR: nlevsno = &apos;,nlevsno,&apos; is not supported, must be in range 3-12.&apos;
main/controlMod.F90:          write(iulog,*)&apos;ERROR: h2osno_max = &apos;,h2osno_max,&apos; is not supported, must be greater than 0.0.&apos;
main/controlMod.F90:                   &apos;as compared with 0.60, 0.40 for cold frozen lakes with no snow.&apos;
main/histFileMod.F90:              long_name=&apos;land/ocean mask (0.=ocean and 1.=land)&apos;, ncid=nfid(t), &amp;
main/histFileMod.F90:              long_name=&apos;land/ocean mask (0.=ocean and 1.=land)&apos;, ncid=nfid(t), &amp;
main/histFileMod.F90:              long_name=&apos;pft real/fake mask (0.=fake and 1.=real)&apos;, ncid=nfid(t), &amp;
main/histFileMod.F90:              long_name=&apos;pft real/fake mask (0.=fake and 1.=real)&apos;, ncid=nfid(t), &amp;
main/initGridCellsMod.F90:             wtcol2lunit = (1. - wtlunit_roof)/3
main/initGridCellsMod.F90:             wtcol2lunit = (1. - wtlunit_roof)/3
main/initGridCellsMod.F90:             wtcol2lunit = ((1. - wtlunit_roof)/3) * (1.-wtroad_perv)
main/initGridCellsMod.F90:             wtcol2lunit = ((1. - wtlunit_roof)/3) * (wtroad_perv)
main/initVerticalMod.F90:    real(r8)              :: thick_equal = 0.2
main/initVerticalMod.F90:    if ( soil_layerstruct == &apos;10SL_3.5m&apos; ) then 
main/initVerticalMod.F90:    else if ( soil_layerstruct == &apos;23SL_3.5m&apos; )then
main/initVerticalMod.F90:          zsoi(j) = 0.5*(zisoi(j-1) + zisoi(j))
main/initVerticalMod.F90:    else if ( soil_layerstruct == &apos;20SL_8.5m&apos; ) then
main/initVerticalMod.F90:          zsoi(j) = 0.5*(zisoi(j-1) + zisoi(j))
main/initVerticalMod.F90:       dzsoi_decomp(1) = 1.
main/initVerticalMod.F90:             ziurb_wall(l,0) = 0.
main/initVerticalMod.F90:             ziurb_roof(l,0) = 0.
main/initVerticalMod.F90:             ziurb_wall(l,0) = 0.
main/initVerticalMod.F90:             ziurb_roof(l,0) = 0.
main/initVerticalMod.F90:                zurb_wall(l,j) = (j-0.5)*(thick_wall(l)/float(nlevurb))  !node depths
main/initVerticalMod.F90:                zurb_roof(l,j) = (j-0.5)*(thick_roof(l)/float(nlevurb))  !node depths
main/initVerticalMod.F90:             dzurb_roof(l,1) = 0.5*(zurb_roof(l,1)+zurb_roof(l,2))    !thickness b/n two interfaces
main/initVerticalMod.F90:                dzurb_roof(l,j)= 0.5*(zurb_roof(l,j+1)-zurb_roof(l,j-1)) 
main/initVerticalMod.F90:             dzurb_wall(l,1) = 0.5*(zurb_wall(l,1)+zurb_wall(l,2))    !thickness b/n two interfaces
main/initVerticalMod.F90:                dzurb_wall(l,j)= 0.5*(zurb_wall(l,j+1)-zurb_wall(l,j-1)) 
main/initVerticalMod.F90:             ziurb_wall(l,0) = 0.
main/initVerticalMod.F90:                ziurb_wall(l,j) = 0.5*(zurb_wall(l,j)+zurb_wall(l,j+1))          !interface depths
main/initVerticalMod.F90:             ziurb_wall(l,nlevurb) = zurb_wall(l,nlevurb) + 0.5*dzurb_wall(l,nlevurb)
main/initVerticalMod.F90:             ziurb_roof(l,0) = 0.
main/initVerticalMod.F90:                ziurb_roof(l,j) = 0.5*(zurb_roof(l,j)+zurb_roof(l,j+1))          !interface depths
main/initVerticalMod.F90:             ziurb_roof(l,nlevurb) = zurb_roof(l,nlevurb) + 0.5*dzurb_roof(l,nlevurb)
main/subgridAveMod.F90:       write(iulog,*)&apos;p2c_1d error: sumwt is greater than 1.0&apos;
main/subgridAveMod.F90:          write(iulog,*)&apos;p2c_2d error: sumwt is greater than 1.0 at c= &apos;,index,&apos; lev= &apos;,j
main/subgridAveMod.F90:                scale_c2l(c) = 3.0 * lun%canyon_hwr(l) 
main/subgridAveMod.F90:                scale_c2l(c) = 3.0 * lun%canyon_hwr(l) 
main/subgridAveMod.F90:                scale_c2l(c) = (3.0 * lun%canyon_hwr(l)) / (2.*lun%canyon_hwr(l) + 1.)
main/subgridAveMod.F90:                scale_c2l(c) = (3.0 * lun%canyon_hwr(l)) / (2.*lun%canyon_hwr(l) + 1.)
main/subgridAveMod.F90:                scale_c2l(c) = 3.0 / (2.*lun%canyon_hwr(l) + 1.)
main/subgridAveMod.F90:       write(iulog,*)&apos;p2l_1d error: sumwt is greater than 1.0 at l= &apos;,index
main/subgridAveMod.F90:                scale_c2l(c) = 3.0 * lun%canyon_hwr(l) 
main/subgridAveMod.F90:                scale_c2l(c) = 3.0 * lun%canyon_hwr(l) 
main/subgridAveMod.F90:                scale_c2l(c) = (3.0 * lun%canyon_hwr(l)) / (2.*lun%canyon_hwr(l) + 1.)
main/subgridAveMod.F90:                scale_c2l(c) = (3.0 * lun%canyon_hwr(l)) / (2.*lun%canyon_hwr(l) + 1.)
main/subgridAveMod.F90:                scale_c2l(c) = 3.0 / (2.*lun%canyon_hwr(l) + 1.)
main/subgridAveMod.F90:          write(iulog,*)&apos;p2l_2d error: sumwt is greater than 1.0 at l= &apos;,index,&apos; j= &apos;,j
main/subgridAveMod.F90:                scale_c2l(c) = 3.0 * lun%canyon_hwr(l) 
main/subgridAveMod.F90:                scale_c2l(c) = 3.0 * lun%canyon_hwr(l) 
main/subgridAveMod.F90:                scale_c2l(c) = (3.0 * lun%canyon_hwr(l)) / (2.*lun%canyon_hwr(l) + 1.)
main/subgridAveMod.F90:                scale_c2l(c) = (3.0 * lun%canyon_hwr(l)) / (2.*lun%canyon_hwr(l) + 1.)
main/subgridAveMod.F90:                scale_c2l(c) = 3.0 / (2.*lun%canyon_hwr(l) + 1.)
main/subgridAveMod.F90:       write(iulog,*)&apos;p2g_1d error: sumwt is greater than 1.0 at g= &apos;,index
main/subgridAveMod.F90:                scale_c2l(c) = 3.0 * lun%canyon_hwr(l) 
main/subgridAveMod.F90:                scale_c2l(c) = 3.0 * lun%canyon_hwr(l) 
main/subgridAveMod.F90:                scale_c2l(c) = (3.0 * lun%canyon_hwr(l)) / (2.*lun%canyon_hwr(l) + 1.)
main/subgridAveMod.F90:                scale_c2l(c) = (3.0 * lun%canyon_hwr(l)) / (2.*lun%canyon_hwr(l) + 1.)
main/subgridAveMod.F90:                scale_c2l(c) = 3.0 / (2.*lun%canyon_hwr(l) + 1.)
main/subgridAveMod.F90:          write(iulog,*)&apos;p2g_2d error: sumwt gt 1.0 at g/sumwt = &apos;,index,sumwt(index)
main/subgridAveMod.F90:                scale_c2l(c) = 3.0 * lun%canyon_hwr(l) 
main/subgridAveMod.F90:                scale_c2l(c) = 3.0 * lun%canyon_hwr(l) 
main/subgridAveMod.F90:                scale_c2l(c) = (3.0 * lun%canyon_hwr(l)) / (2.*lun%canyon_hwr(l) + 1.)
main/subgridAveMod.F90:                scale_c2l(c) = (3.0 * lun%canyon_hwr(l)) / (2.*lun%canyon_hwr(l) + 1.)
main/subgridAveMod.F90:                scale_c2l(c) = 3.0 / (2.*lun%canyon_hwr(l) + 1.)
main/subgridAveMod.F90:       write(iulog,*)&apos;c2l_1d error: sumwt is greater than 1.0 at l= &apos;,index
main/subgridAveMod.F90:                scale_c2l(c) = 3.0 * lun%canyon_hwr(l) 
main/subgridAveMod.F90:                scale_c2l(c) = 3.0 * lun%canyon_hwr(l) 
main/subgridAveMod.F90:                scale_c2l(c) = (3.0 * lun%canyon_hwr(l)) / (2.*lun%canyon_hwr(l) + 1.)
main/subgridAveMod.F90:                scale_c2l(c) = (3.0 * lun%canyon_hwr(l)) / (2.*lun%canyon_hwr(l) + 1.)
main/subgridAveMod.F90:                scale_c2l(c) = 3.0 / (2.*lun%canyon_hwr(l) + 1.)
main/subgridAveMod.F90:          write(iulog,*)&apos;c2l_2d error: sumwt is greater than 1.0 at l= &apos;,index,&apos; lev= &apos;,j
main/subgridAveMod.F90:                scale_c2l(c) = 3.0 * lun%canyon_hwr(l) 
main/subgridAveMod.F90:                scale_c2l(c) = 3.0 * lun%canyon_hwr(l) 
main/subgridAveMod.F90:                scale_c2l(c) = (3.0 * lun%canyon_hwr(l)) / (2.*lun%canyon_hwr(l) + 1.)
main/subgridAveMod.F90:                scale_c2l(c) = (3.0 * lun%canyon_hwr(l)) / (2.*lun%canyon_hwr(l) + 1.)
main/subgridAveMod.F90:                scale_c2l(c) = 3.0 / (2.*lun%canyon_hwr(l) + 1.)
main/subgridAveMod.F90:       write(iulog,*)&apos;c2g_1d error: sumwt is greater than 1.0 at g= &apos;,index
main/subgridAveMod.F90:                scale_c2l(c) = 3.0 * lun%canyon_hwr(l) 
main/subgridAveMod.F90:                scale_c2l(c) = 3.0 * lun%canyon_hwr(l) 
main/subgridAveMod.F90:                scale_c2l(c) = (3.0 * lun%canyon_hwr(l)) / (2.*lun%canyon_hwr(l) + 1.)
main/subgridAveMod.F90:                scale_c2l(c) = (3.0 * lun%canyon_hwr(l)) / (2.*lun%canyon_hwr(l) + 1.)
main/subgridAveMod.F90:                scale_c2l(c) = 3.0 / (2.*lun%canyon_hwr(l) + 1.)
main/subgridAveMod.F90:          write(iulog,*)&apos;c2g_2d error: sumwt is greater than 1.0 at g= &apos;,index
main/subgridAveMod.F90:       write(iulog,*)&apos;l2g_1d error: sumwt is greater than 1.0 at g= &apos;,index
main/subgridAveMod.F90:          write(iulog,*)&apos;l2g_2d error: sumwt is greater than 1.0 at g= &apos;,index,&apos; lev= &apos;,j
main/subgridRestMod.F90:      real(r8), parameter :: tol = 5.e-3  ! tolerance for checking weights
main/surfrdMod.F90:       if (ldomain%lonc(n)-surfdata_domain%lonc(n) &gt; 300.) then
main/surfrdMod.F90:       elseif (ldomain%lonc(n)-surfdata_domain%lonc(n) &lt; -300.) then
main/surfrdUtilsMod.F90:       write(iulog,*) trim(caller), &apos; ERROR: sum of &apos;, trim(name), &apos; not 1.0 at nl=&apos;, nindx
soilbiogeochem/SoilBiogeochemCarbonStateType.F90:                   if (zsoi(j) &lt; 0.3 ) then  !! only initialize upper soil column
soilbiogeochem/SoilBiogeochemCarbonStateType.F90:                 m = 1. / decomp_cascade_con%spinup_factor(k)
soilbiogeochem/SoilBiogeochemCompetitionMod.F90:            sminn_tot(c) = 0.
soilbiogeochem/SoilBiogeochemCompetitionMod.F90:               if (sminn_tot(c)  &gt;  0.) then
soilbiogeochem/SoilBiogeochemCompetitionMod.F90:            sminn_tot(c) = 0.
soilbiogeochem/SoilBiogeochemCompetitionMod.F90:               if (sminn_tot(c)  &gt;  0.) then
soilbiogeochem/SoilBiogeochemDecompCascadeBGCMod.F90:      tau_l1 = 1./18.5
soilbiogeochem/SoilBiogeochemDecompCascadeBGCMod.F90:      tau_l2_l3 = 1./4.9
soilbiogeochem/SoilBiogeochemDecompCascadeBGCMod.F90:      tau_s1 = 1./7.3
soilbiogeochem/SoilBiogeochemDecompCascadeBGCMod.F90:      tau_s2 = 1./0.2
soilbiogeochem/SoilBiogeochemDecompCascadeBGCMod.F90:      tau_s3 = 1./.0045
soilbiogeochem/SoilBiogeochemDecompCascadeBGCMod.F90:      tau_cwd  = 1./0.3
soilbiogeochem/SoilBiogeochemDecompCascadeCNMod.F90:      rf_decomp_cascade(bounds%begc:bounds%endc,1:nlevdecomp,i_s4atm) = 1.
soilbiogeochem/SoilBiogeochemLittVertTranspMod.F90:      epsilon = 1.e-30
soilbiogeochem/SoilBiogeochemLittVertTranspMod.F90:                        trcr_tendency_ptr(c,j,s) = 0.-(conc_trcr(c,j) + source(c,j,s))
soilbiogeochem/SoilBiogeochemNLeachingMod.F90:    real(r8), parameter :: depth_runoff_Nloss = 0.05   ! (m) depth over which runoff mixes with soil water for N loss to runoff
soilbiogeochem/SoilBiogeochemNitrifDenitrifMod.F90:      pH(bounds%begc:bounds%endc) = 6.5  !!! set all soils with the same pH as placeholder here
soilbiogeochem/SoilBiogeochemNitrifDenitrifMod.F90:            k_nitr_ph_vr(c,j) = 0.56 + atan(rpi * 0.45 * (-5.+ pH(c)))/rpi
soilbiogeochem/SoilBiogeochemNitrifDenitrifMod.F90:            n2_n2o_ratio_denit_vr(c,j) = max(0.16*ratio_k1(c,j), ratio_k1(c,j)*exp(-0.8 * ratio_no3_co2(c,j))) * fr_WFPS(c,j)
soilbiogeochem/SoilBiogeochemNitrogenStateType.F90:             m = 1. / decomp_cascade_con%spinup_factor(k)
soilbiogeochem/SoilBiogeochemNitrogenUptakeMod.F90:       sminn_tot(c) = 0.
soilbiogeochem/SoilBiogeochemNitrogenUptakeMod.F90:          if (sminn_tot(c)  &gt;  0.) then
soilbiogeochem/SoilBiogeochemVerticalProfileMod.F90:  real(r8), public :: rootprof_exp  = 3.  ! how steep profile is for root C inputs (1/ e-folding depth) (1/m)      
soilbiogeochem/SoilBiogeochemVerticalProfileMod.F90:  real(r8), public :: surfprof_exp  = 10. ! how steep profile is for surface components (1/ e_folding depth) (1/m)      
soilbiogeochem/SoilBiogeochemVerticalProfileMod.F90:    real(r8) :: delta = 1.e-10
soilbiogeochem/SoilBiogeochemVerticalProfileMod.F90:                     cinput_rootfr(p,1) = 0.
soilbiogeochem/SoilBiogeochemVerticalProfileMod.F90:               froot_prof(p,1) = 1./dzsoi_decomp(1)
soilbiogeochem/SoilBiogeochemVerticalProfileMod.F90:               croot_prof(p,1) = 1./dzsoi_decomp(1)
soilbiogeochem/SoilBiogeochemVerticalProfileMod.F90:               leaf_prof(p,1) = 1./dzsoi_decomp(1)
soilbiogeochem/SoilBiogeochemVerticalProfileMod.F90:               stem_prof(p,1) = 1./dzsoi_decomp(1)
soilbiogeochem/SoilBiogeochemVerticalProfileMod.F90:               nfixation_prof(c,1) = 1./dzsoi_decomp(1)
soilbiogeochem/SoilBiogeochemVerticalProfileMod.F90:               ndep_prof(c,1) = 1./dzsoi_decomp(1)
soilbiogeochem/SoilBiogeochemVerticalProfileMod.F90:         ndep_prof_sum = 0.
soilbiogeochem/SoilBiogeochemVerticalProfileMod.F90:         nfixation_prof_sum = 0.
soilbiogeochem/SoilBiogeochemVerticalProfileMod.F90:         froot_prof_sum = 0.
soilbiogeochem/SoilBiogeochemVerticalProfileMod.F90:         croot_prof_sum = 0.
soilbiogeochem/SoilBiogeochemVerticalProfileMod.F90:         leaf_prof_sum = 0.
soilbiogeochem/SoilBiogeochemVerticalProfileMod.F90:         stem_prof_sum = 0.
utils/clm_time_manager.F90:    if ( (get_curr_calday &gt; 366.0) .and. (get_curr_calday &lt;= 367.0) .and. &amp;
utils/clm_time_manager.F90:    if ( (get_curr_calday &lt; 1.0) .or. (get_curr_calday &gt; 366.0) )then
utils/clm_time_manager.F90:    if ( (get_calday &gt; 366.0) .and. (get_calday &lt;= 367.0) .and. &amp;
utils/clm_time_manager.F90:    if ( (get_calday &lt; 1.0) .or. (get_calday &gt; 366.0) )then
utils/domainMod.F90:    domain%frac     = -1.0e36</thetext>
  </long_desc><long_desc isprivate="0" >
    <commentid>7613</commentid>
    <comment_count>1</comment_count>
    <who name="Erik Kluzek">erik</who>
    <bug_when>2016-07-25 10:57:33 -0600</bug_when>
    <thetext>Also see 2141 for constants in SoilTemperature...</thetext>
  </long_desc>
      
      

    </bug>
    <bug>
          <bug_id>2344</bug_id>
          
          <creation_ts>2016-08-08 13:16:05 -0600</creation_ts>
          <short_desc>Reproducibility problem with clm4_5_10_r187 -- 30% of the time randomly dies with a methane error</short_desc>
          <delta_ts>2016-08-22 16:33:43 -0600</delta_ts>
          <reporter_accessible>1</reporter_accessible>
          <cclist_accessible>1</cclist_accessible>
          <classification_id>1</classification_id>
          <classification>Unclassified</classification>
          <product>CCSM/CESM CLM</product>
          <component>CLM 5.0</component>
          <version>CESM1.5.z Development</version>
          <rep_platform>All</rep_platform>
          <op_sys>All</op_sys>
          <bug_status>ASSIGNED</bug_status>
          <resolution></resolution>
          
          
          <bug_file_loc></bug_file_loc>
          <status_whiteboard></status_whiteboard>
          <keywords></keywords>
          <priority>P3</priority>
          <bug_severity>normal</bug_severity>
          <target_milestone>CLM5</target_milestone>
          <dependson>2345</dependson>
          
          <everconfirmed>1</everconfirmed>
          <reporter name="Erik Kluzek">erik</reporter>
          <assigned_to name="Erik Kluzek">erik</assigned_to>
          <cc>andre</cc>
    
    <cc>dlawren</cc>
    
    <cc>dll</cc>
    
    <cc>mvertens</cc>
    
    <cc>oleson</cc>
    
    <cc>rfisher</cc>
    
    <cc>sacks</cc>
          
          <cf_fixedinversion></cf_fixedinversion>

      

      

      

          <comment_sort_order>oldest_to_newest</comment_sort_order>  
          <long_desc isprivate="0" >
    <commentid>7648</commentid>
    <comment_count>0</comment_count>
    <who name="Erik Kluzek">erik</who>
    <bug_when>2016-08-08 13:16:05 -0600</bug_when>
    <thetext>A reproducibility issue came in with clm4_5_10_r187 where about 30% of the time the following case will die with a methane error, and other times run to completion. I think simpler cases will die as well, but the simpler tests I did were successful before I realized it wasn&apos;t reproducible.

create_newcase -case clm4_5_10_r187_SP_4x5_ADspin -mach yellowstone_intel -res f45_f45 -user_compset 1850_DATM%CRU_CLM50%BGC_SICE_SOCN_MOSART_SGLC_SWAV -user_pes_setby clm

./xmlchange CLM_ACCELERATED_SPINUP=&quot;on&quot;,STOP_N=19,STOP_OPTION=&quot;nmonths&quot;,CLM_FORCE_COLDSTART=&quot;on&quot;,DATM_CLMNCEP_YR_ALIGN=1901
./xmlchange DATM_CLMNCEP_YR_END=1905,DATM_CLMNCEP_YR_START=1901,DATM_MODE=CLMGSWP3

user_nl_clm
paramfile=&apos;/glade/u/home/rfisher/Matlab/pft_files/FUNparams/TRY_default_c160708_hydr1.5.nc&apos;
fsurdat=&apos;/glade/p/cesm/sdwg_dev/lawrence/surfdata/surfdata_4x5_16pftsmidarctic_simyr2000_c160419.nc&apos;
use_hydrstress=.true.
use_luna=.true.

SourceMods/src.datm/namelist_defaults_datm.xml 
&lt;?xml version=&quot;1.0&quot;?&gt;

&lt;?xml-stylesheet type=&quot;text/xsl&quot; href=&quot;namelist_defaults.xsl&quot;?&gt;

&lt;namelist_defaults&gt;

&lt;!-- =========================================  --&gt;
&lt;!--- streams                                   --&gt;
&lt;!-- =========================================  --&gt;

&lt;streamslist datm_mode=&quot;CLMGSWP3&quot;     &gt;CLMGSWP3.Solar,CLMGSWP3.Precip,CLMGSWP3.TPQW,CLMCRUNCEP_V5.TPQW&lt;/streamslist&gt;

&lt;!-- == TPQW    === --&gt;
&lt;strm_datvar     stream=&quot;CLMCRUNCEP_V5.TPQW&quot;&gt;
  TBOT     tbot
  QBOT     shum
&lt;/strm_datvar&gt;

&lt;!-- == TPQW    === --&gt;
&lt;strm_datvar     stream=&quot;CLMGSWP3.TPQW&quot;&gt;
  WIND     wind
  PSRF     pbot
  FLDS     lwdn
&lt;/strm_datvar&gt;

&lt;/namelist_defaults&gt;

An example error message in cesm.log is...

  41: Negative conc. in ch4tran. c,j,deficit (mol):        3512           1
  41:  8.843302222960208E-003
   0: memory_write: model date =    10623       0 memory =     104.44 MB (highwater)       1946.05 MB (usage)  (pe=    0 comps= ATM ICE OCN WAV ESP)
  65: Methane demands exceed methane available. Error in methane competition (mol/m^3
  65: /s), c,j: -2.755768946371973E-010        6818           2
  65: Latdeg,Londeg=  -30.0000000000000        35.0000000000000
  65: ENDRUN:
  65:  ERROR: Methane demands exceed methane available.ERROR in ch4Mod.F90 at line 33
  65: 90
  65:
  65:
  65:
  65:
  65:
  65:
  65: ERROR: Unknown error submitted to shr_sys_abort.
  65:Image              PC                Routine            Line        Source
  65:cesm.exe           000000000153ABA8  Unknown               Unknown  Unknown
  65:cesm.exe           0000000000E43893  shr_sys_mod_mp_sh         401  shr_sys_mod.F90
  65:cesm.exe           0000000000509058  abortutils_mp_end          43  abortutils.F90
  65:cesm.exe           0000000000A4352D  ch4mod_mp_ch4_tra        3389  ch4Mod.F90
  65:cesm.exe           0000000000A377CD  ch4mod_mp_ch4_           1980  ch4Mod.F90
  65:cesm.exe           0000000000511D82  clm_driver_mp_clm         835  clm_driver.F90
  65:cesm.exe           00000000004FDC49  lnd_comp_mct_mp_l         437  lnd_comp_mct.F90
  65:cesm.exe           000000000042EDFB  component_mod_mp_        1079  component_mod.F90
  65:cesm.exe           0000000000419FB2  cesm_comp_mod_mp_        2509  cesm_comp_mod.F90
  65:cesm.exe           000000000042EB92  MAIN__                     93  cesm_driver.F90
  65:cesm.exe           0000000000417B7E  Unknown               Unknown  Unknown
  65:libc.so.6          00002ACAABC8FD5D  Unknown               Unknown  Unknown
  65:cesm.exe           0000000000417A89  Unknown               Unknown  Unknown


a precursor to the problem seems to be these ch4tran warnings....

grep ch4tran cesm.log.160806-113740 
  36: Negative conc. in ch4tran. c,j,deficit (mol):        2842           1
  98: Negative conc. in ch4tran. c,j,deficit (mol):       11343           1
  24: Negative conc. in ch4tran. c,j,deficit (mol):        1205           1
  34: Negative conc. in ch4tran. c,j,deficit (mol):        2561           1
 141: Negative conc. in ch4tran. c,j,deficit (mol):       17127           1
  53: Negative conc. in ch4tran. c,j,deficit (mol):        5161           1
  73: Negative conc. in ch4tran. c,j,deficit (mol):        7928           1
  37: Negative conc. in ch4tran. c,j,deficit (mol):        2964           1
  40: Negative conc. in ch4tran. c,j,deficit (mol):        3375           1
  93: Negative conc. in ch4tran. c,j,deficit (mol):       10667           1

The ch4tran warnings don&apos;t occur in the simulations that were successful.</thetext>
  </long_desc><long_desc isprivate="0" >
    <commentid>7649</commentid>
    <comment_count>1</comment_count>
    <who name="Erik Kluzek">erik</who>
    <bug_when>2016-08-08 13:17:17 -0600</bug_when>
    <thetext>Rosie tried similar submissions with r185 and r186 and didn&apos;t see runs that died with the same problem for 8 submissions. Hence we think this came in with r187.</thetext>
  </long_desc><long_desc isprivate="0" >
    <commentid>7650</commentid>
    <comment_count>2</comment_count>
    <who name="Erik Kluzek">erik</who>
    <bug_when>2016-08-08 13:19:30 -0600</bug_when>
    <thetext>This is for a sequential layout without threading...

env_mach_pes.xml: NTASKS_ATM 15 
env_mach_pes.xml: NTASKS_CPL 135 
env_mach_pes.xml: NTASKS_ESP 15 
env_mach_pes.xml: NTASKS_GLC 135 
env_mach_pes.xml: NTASKS_ICE 15 
env_mach_pes.xml: NTASKS_LND 135 
env_mach_pes.xml: NTASKS_OCN 15 
env_mach_pes.xml: NTASKS_ROF 135 
env_mach_pes.xml: NTASKS_WAV 15 
[erik@yslogin5 clm4_5_10_r187_SP_4x5_ADspin]$ ./xmlquery list | grep THRDS
env_mach_pes.xml: NTHRDS_ATM 1 
env_mach_pes.xml: NTHRDS_CPL 1 
env_mach_pes.xml: NTHRDS_ESP 1 
env_mach_pes.xml: NTHRDS_GLC 1 
env_mach_pes.xml: NTHRDS_ICE 1 
env_mach_pes.xml: NTHRDS_LND 1 
env_mach_pes.xml: NTHRDS_OCN 1 
env_mach_pes.xml: NTHRDS_ROF 1 
env_mach_pes.xml: NTHRDS_WAV 1

and with daily barriers...

env_run.xml: BARRIER_N 1 
env_run.xml: BARRIER_OPTION ndays</thetext>
  </long_desc><long_desc isprivate="0" >
    <commentid>7651</commentid>
    <comment_count>3</comment_count>
    <who name="Erik Kluzek">erik</who>
    <bug_when>2016-08-08 15:01:27 -0600</bug_when>
    <thetext>We think this problem is just because Rosie&apos;s param file doesn&apos;t have rootprof_beta as a 2D variable. So the 2nd dimension (for Carbon) isn&apos;t getting initialized to anything (and set to garbage) hence the problem.

so this file has rootprof_beta as a 1D variable rather than 2D.

/glade/u/home/rfisher/Matlab/pft_files/FUNparams/TRY_default_c160708_hydr1.5.nc

so this problem shouldn&apos;t occur for the default code where the standard params file is being used -- just for cases where a params file doesn&apos;t have rootprof_beta as a 2D variable.

As a separate issue we should fix the code so it doesn&apos;t allow such a thing to happen.</thetext>
  </long_desc><long_desc isprivate="0" >
    <commentid>7669</commentid>
    <comment_count>4</comment_count>
    <who name="Erik Kluzek">erik</who>
    <bug_when>2016-08-22 16:33:43 -0600</bug_when>
    <thetext>This does also occur on hobart_intel and with both PIO1 and PIO2.</thetext>
  </long_desc>
      
      

    </bug>
    <bug>
          <bug_id>2345</bug_id>
          
          <creation_ts>2016-08-09 16:34:12 -0600</creation_ts>
          <short_desc>CLM doesn&apos;t check that dimensionality is correct for anything it reads in via ncdio_pio</short_desc>
          <delta_ts>2016-08-22 16:38:17 -0600</delta_ts>
          <reporter_accessible>1</reporter_accessible>
          <cclist_accessible>1</cclist_accessible>
          <classification_id>1</classification_id>
          <classification>Unclassified</classification>
          <product>CCSM/CESM CLM</product>
          <component>CLM 5.0</component>
          <version>CESM2.0.x Development</version>
          <rep_platform>All</rep_platform>
          <op_sys>All</op_sys>
          <bug_status>ASSIGNED</bug_status>
          <resolution></resolution>
          
          
          <bug_file_loc></bug_file_loc>
          <status_whiteboard></status_whiteboard>
          <keywords></keywords>
          <priority>P2</priority>
          <bug_severity>normal</bug_severity>
          <target_milestone>CLM5</target_milestone>
          
          <blocked>2344</blocked>
          <everconfirmed>1</everconfirmed>
          <reporter name="Erik Kluzek">erik</reporter>
          <assigned_to name="Erik Kluzek">erik</assigned_to>
          <cc>rfisher</cc>
          
          <cf_fixedinversion></cf_fixedinversion>

      

      

      

          <comment_sort_order>oldest_to_newest</comment_sort_order>  
          <long_desc isprivate="0" >
    <commentid>7653</commentid>
    <comment_count>0</comment_count>
    <who name="Erik Kluzek">erik</who>
    <bug_when>2016-08-09 16:34:12 -0600</bug_when>
    <thetext>CLM&apos;s use of reading of netCDF files via PIO in ncdio_pio, rarely checks if the dimensions are correct for variables being read in. This is notably true of the global reads in for the PFT parameter fields. The lack of error checking caused us to spend a bunch of time chasing down an error that was simply due to the size of a field on a netCDF file to be smaller than expected.</thetext>
  </long_desc><long_desc isprivate="0" >
    <commentid>7670</commentid>
    <comment_count>1</comment_count>
    <who name="Erik Kluzek">erik</who>
    <bug_when>2016-08-22 16:38:17 -0600</bug_when>
    <thetext>At least part of the fault in this is actually due to PIO itself. And it seems to be an issue with both PIO1 and PIO2.</thetext>
  </long_desc>
      
      

    </bug>
    <bug>
          <bug_id>2348</bug_id>
          
          <creation_ts>2016-08-22 11:36:10 -0600</creation_ts>
          <short_desc>Lack of maintenance respiration from snow covered vegetation</short_desc>
          <delta_ts>2016-08-22 11:36:10 -0600</delta_ts>
          <reporter_accessible>1</reporter_accessible>
          <cclist_accessible>1</cclist_accessible>
          <classification_id>1</classification_id>
          <classification>Unclassified</classification>
          <product>CCSM/CESM CLM</product>
          <component>CLM 5.0</component>
          <version>CESM2.0.x Development</version>
          <rep_platform>All</rep_platform>
          <op_sys>All</op_sys>
          <bug_status>ASSIGNED</bug_status>
          <resolution></resolution>
          
          
          <bug_file_loc></bug_file_loc>
          <status_whiteboard></status_whiteboard>
          <keywords></keywords>
          <priority>P3</priority>
          <bug_severity>normal</bug_severity>
          <target_milestone>CLM5</target_milestone>
          
          
          <everconfirmed>1</everconfirmed>
          <reporter name="Erik Kluzek">erik</reporter>
          <assigned_to name="Erik Kluzek">erik</assigned_to>
          <cc>cdkoven</cc>
    
    <cc>dlawren</cc>
    
    <cc>rfisher</cc>
          
          <cf_fixedinversion></cf_fixedinversion>

      

      

      

          <comment_sort_order>oldest_to_newest</comment_sort_order>  
          <long_desc isprivate="0" >
    <commentid>7662</commentid>
    <comment_count>0</comment_count>
    <who name="Erik Kluzek">erik</who>
    <bug_when>2016-08-22 11:36:10 -0600</bug_when>
    <thetext>Maintenance respiration is calculated only when there is some vegetation that is NOT snow covered.

CNMResp has this...

         if (frac_veg_nosno(p) == 1) then

            leaf_mr(p) = lmrsun(p) * laisun(p) * 12.011e-6_r8 + &amp;
                         lmrsha(p) * laisha(p) * 12.011e-6_r8

         else !nosno

            leaf_mr(p) = 0._r8

         end if

frac_veg_nosno is set to 1 if elai+esai&gt;0. and 0 otherwise (in CNVegStructUpdateMod). It looks to me that laisun and laisha is based on the total LAI (even if snow covered). This is in SurfaceRadiation. But, vegetation that is completely snow covered will have zero leaf maintenance respiration.</thetext>
  </long_desc>
      
      

    </bug>
    <bug>
          <bug_id>2352</bug_id>
          
          <creation_ts>2016-09-20 15:07:14 -0600</creation_ts>
          <short_desc>time_bounds for start is a negative number</short_desc>
          <delta_ts>2016-09-22 18:32:57 -0600</delta_ts>
          <reporter_accessible>1</reporter_accessible>
          <cclist_accessible>1</cclist_accessible>
          <classification_id>1</classification_id>
          <classification>Unclassified</classification>
          <product>CCSM/CESM CLM</product>
          <component>CLM 5.0</component>
          <version>CESM2.0.x Development</version>
          <rep_platform>All</rep_platform>
          <op_sys>All</op_sys>
          <bug_status>ASSIGNED</bug_status>
          <resolution></resolution>
          
          
          <bug_file_loc></bug_file_loc>
          <status_whiteboard></status_whiteboard>
          <keywords></keywords>
          <priority>P3</priority>
          <bug_severity>normal</bug_severity>
          <target_milestone>CLM5</target_milestone>
          
          
          <everconfirmed>1</everconfirmed>
          <reporter name="Erik Kluzek">erik</reporter>
          <assigned_to name="Erik Kluzek">erik</assigned_to>
          <cc>mickelso</cc>
    
    <cc>rfisher</cc>
    
    <cc>sacks</cc>
          
          <cf_fixedinversion></cf_fixedinversion>

      

      

      

          <comment_sort_order>oldest_to_newest</comment_sort_order>  
          <long_desc isprivate="0" >
    <commentid>7690</commentid>
    <comment_count>0</comment_count>
    <who name="Erik Kluzek">erik</who>
    <bug_when>2016-09-20 15:07:14 -0600</bug_when>
    <thetext>Based on Sheri Mickelson time_bounds on the clm history files is a negative number. She&apos;d like this to be zero. I haven&apos;t looked into this at all at this point, just repeating what she told me.</thetext>
  </long_desc><long_desc isprivate="0" >
    <commentid>7691</commentid>
    <comment_count>1</comment_count>
    <who name="Bill Sacks">sacks</who>
    <bug_when>2016-09-20 20:47:58 -0600</bug_when>
    <thetext>See bug #794. Caveat that it&apos;s possible that I misunderstood things in making some of my comments there (they came relatively early in my history of working with CLM), but it&apos;s at least worth referring to the comments there before deciding on a solution.</thetext>
  </long_desc><long_desc isprivate="0" >
    <commentid>7692</commentid>
    <comment_count>2</comment_count>
    <who name="Bill Sacks">sacks</who>
    <bug_when>2016-09-21 10:11:18 -0600</bug_when>
    <thetext>From Sheri:

I was mainly asking for clarification in handling the post-processing for CMIP6 CLM data.  In order to properly date the monthly files, we need to average the time bounds.  This puts CLM data as an outlier because it&apos;s first month&apos;s midpoint is different from the other models because of the negative date.  For CMIP5, Gary hand tuned this so the CLM data matched the other components.  
If the negative value is truly correct then the midpoint date should be different and we should leave the different date stamp as is for CMIP6 and deal with the inconsistencies within our datasets.  And second if the midpoint date is supposed to be the same as in the other components then is the negative value really correct then?  I can&apos;t see it both ways.</thetext>
  </long_desc><long_desc isprivate="0" >
    <commentid>7693</commentid>
    <comment_count>3</comment_count>
    <who name="Bill Sacks">sacks</who>
    <bug_when>2016-09-21 10:13:47 -0600</bug_when>
    <thetext>Response to Sheri:

I definitely agree that CLM&apos;s current handling is confusing.

You refer to monthly files... I thought this was not an issue for monthly files, only for files with some other time frequency... if it&apos;s actually an issue for monthly files, too, then I think there is a gap in my understanding.

Also, at least as of 5 years ago, I thought that CLM was consistent with CAM in this respect. Has CAM changed in that time? If so, I agree that CLM should be changed consistently.</thetext>
  </long_desc><long_desc isprivate="0" >
    <commentid>7698</commentid>
    <comment_count>4</comment_count>
    <who name="Erik Kluzek">erik</who>
    <bug_when>2016-09-22 16:34:40 -0600</bug_when>
    <thetext>I think the behavior comes from this in histFileMod.F90

    call get_prev_time(day, sec)
    do t=1,ntapes
       tape(t)%begtime = day + sec/secspday
    end do

Currently, CAM get&apos;s around this, by calling get_curr_time in place of get_prev_time when it&apos;s a startup run.

So we just need something like this...

    if ( is_first_step() ) then
        call get_curr_time(day, sec)
    else
        call get_prev_time(day, sec)
    end if

    do t=1,ntapes
       tape(t)%begtime = day + sec/secspday
    end do</thetext>
  </long_desc><long_desc isprivate="0" >
    <commentid>7699</commentid>
    <comment_count>5</comment_count>
    <who name="Bill Sacks">sacks</who>
    <bug_when>2016-09-22 18:32:57 -0600</bug_when>
    <thetext>Erik: Does that really explain the whole problem? I thought that part of the problem was that there is an extra time step written on startup... and if I remember correctly, the beginning time in the time bounds is actually consistent with that.

Or am I combining two totally separate issues here?</thetext>
  </long_desc>
      
      

    </bug>
    <bug>
          <bug_id>2360</bug_id>
          
          <creation_ts>2016-09-28 11:35:52 -0600</creation_ts>
          <short_desc>Cray compiler issue in wetbulb write statement in CLM</short_desc>
          <delta_ts>2016-09-28 11:35:52 -0600</delta_ts>
          <reporter_accessible>1</reporter_accessible>
          <cclist_accessible>1</cclist_accessible>
          <classification_id>1</classification_id>
          <classification>Unclassified</classification>
          <product>CCSM/CESM CLM</product>
          <component>CLM 5.0</component>
          <version>CESM2.0.x Development</version>
          <rep_platform>All</rep_platform>
          <op_sys>All</op_sys>
          <bug_status>ASSIGNED</bug_status>
          <resolution></resolution>
          
          
          <bug_file_loc></bug_file_loc>
          <status_whiteboard></status_whiteboard>
          <keywords></keywords>
          <priority>P3</priority>
          <bug_severity>normal</bug_severity>
          <target_milestone>CLM5</target_milestone>
          
          
          <everconfirmed>1</everconfirmed>
          <reporter name="Erik Kluzek">erik</reporter>
          <assigned_to name="Erik Kluzek">erik</assigned_to>
          <cc>jedwards</cc>
    
    <cc>rfisher</cc>
          
          <cf_fixedinversion></cf_fixedinversion>

      

      

      

          <comment_sort_order>oldest_to_newest</comment_sort_order>  
          <long_desc isprivate="0" >
    <commentid>7708</commentid>
    <comment_count>0</comment_count>
    <who name="Erik Kluzek">erik</who>
    <bug_when>2016-09-28 11:35:52 -0600</bug_when>
    <thetext>Jim found the following issue in clm4_5_12_r196 for the cray compiler.
It&apos;s breaking up a character string in an awkward way. The cray compiler
is sensitive to doing this.


Index: src/biogeophys/HumanIndexMod.F90

===================================================================

--- src/biogeophys/HumanIndexMod.F90	(revision 80804)

+++ src/biogeophys/HumanIndexMod.F90	(working copy)

@@ -946,7 +946,7 @@

     else

        wb_it = T1 - C  ! Place Holder.  wet bulb temperature same as dry bulb (C)

        write(iulog,*) &apos;WARNING: Wet_Bulb algorithm failed to converge. Setting to T: WB, P, &amp;

-                       T, RH, Q, VaporP: &apos;,wb_it, pin, T1, relhum, qin, vape

+                       &amp;T, RH, Q, VaporP: &apos;,wb_it, pin, T1, relhum, qin, vape

     endif

 

   end subroutine Wet_Bulb</thetext>
  </long_desc>
      
      

    </bug>
    <bug>
          <bug_id>2367</bug_id>
          
          <creation_ts>2016-11-01 13:24:05 -0600</creation_ts>
          <short_desc>Add a list of real parameters as part of what CLM build-namelist does</short_desc>
          <delta_ts>2016-11-09 14:31:45 -0700</delta_ts>
          <reporter_accessible>1</reporter_accessible>
          <cclist_accessible>1</cclist_accessible>
          <classification_id>1</classification_id>
          <classification>Unclassified</classification>
          <product>CCSM/CESM CLM</product>
          <component>CLM 5.0</component>
          <version>CESM2.0.x Development</version>
          <rep_platform>All</rep_platform>
          <op_sys>All</op_sys>
          <bug_status>ASSIGNED</bug_status>
          <resolution></resolution>
          
          
          <bug_file_loc></bug_file_loc>
          <status_whiteboard></status_whiteboard>
          <keywords></keywords>
          <priority>P3</priority>
          <bug_severity>normal</bug_severity>
          <target_milestone>CLM5</target_milestone>
          
          
          <everconfirmed>1</everconfirmed>
          <reporter name="Erik Kluzek">erik</reporter>
          <assigned_to name="Erik Kluzek">erik</assigned_to>
          <cc>rfisher</cc>
          
          <cf_fixedinversion></cf_fixedinversion>

      

      

      

          <comment_sort_order>oldest_to_newest</comment_sort_order>  
          <long_desc isprivate="0" >
    <commentid>7723</commentid>
    <comment_count>0</comment_count>
    <who name="Erik Kluzek">erik</who>
    <bug_when>2016-11-01 13:24:05 -0600</bug_when>
    <thetext>Not all real parameters are added to the default namelist. For Rosie&apos;s parameter estimation work, we thought it would be useful to output a file that lists all of the real parameters as well as the default value (if any) and a comment with a description of what they are. This might make it easier for people to create a user_nl_clm for their parameter estimation experiments.

I&apos;m proposing the filename be &quot;user_nl_clm_real_parameters&quot; and it list all real parameters that are in a namelist. A problem is that right now it might list parameters that might not be able to be set for a given configuration. And it won&apos;t have a default value for all parameters.

In the future we could add more meta-data for things like the min and max expected range for example. We can easily add any needed metadata to the XML file keeping track of namelist items, and anything added there can be easily output as well.</thetext>
  </long_desc><long_desc isprivate="0" >
    <commentid>7724</commentid>
    <comment_count>1</comment_count>
    <who name="Erik Kluzek">erik</who>
    <bug_when>2016-11-01 16:07:19 -0600</bug_when>
    <thetext>Here&apos;s what an initial list looks like:

This includes things used for mksurfdata

! Visible and Near-infrared albedo&apos;s for glacier ice
albice = 0.60,0.40
! Scalar multiplier for base flow rate(ONLY used if lower_boundary_condition is not aquifer or table)
baseflow_scalar = ?.??
! Only used when baset_mapping == varytropicsbylatIntercept at zero latitude to add to baset from the PFT parameter file
baset_latvary_intercept = ?.??
! Only used when baset_mapping == varytropicsbylatSlope with latitude in degrees to vary tropical baset by
baset_latvary_slope = ?.??
! boreal peat fires (/hr)
boreal_peatfire_c = ?.??
! CN Maintenence Respiration base rate for roots(if NOT set, use the value for br_mr on the params file)
br_root = ?.??
! Saturation BTRAN for ignition (0-1)
bt_max = ?.??
! Critical BTRAN for ignition (0-1)
bt_min = ?.??
! Critical threshold for truncation of Carbon (truncate Carbon states to zero below this value)
ccrit = ?.??
! Global constant for deforestation fires (/day)
cli_scale = ?.??
! Critical threshold of negative Carbon to die (abort when Carbon states are below this value)
cnegcrit = ?.??
! Atmospheric CO2 molar ratio (by volume) only used when co2_type==constant (umol/mol)(Set by CCSM_CO2_PPMV)
co2_ppmv = 379.0
! Scalar for cropfire (/hr)
cropfire_a1 = ?.??
! E-folding depth over which decomposition is slowed with depth in all soils.
decomp_depth_efolding = 1.0
! Minimum lake depth to increase non-molecular thermal diffusivities by the factor deepmixing_mixfact.
deepmixing_depthcrit = ?.??
! Factor to increase non-molecular thermal diffusivities for lakes deeper than deepmixing_depthcritto account for unresolved 3D processes.Set to 1 to 
deepmixing_mixfact = ?.??
! Multiplier for nitrate concentration for max denitrification rates(ONLY used if use_nitrif_denitrif is enabled)
denitrif_nitrateconc_coefficient = ?.??
! Exponent power for nitrate concentrationfor max denitrification rates(ONLY used if use_nitrif_denitrif is enabled)
denitrif_nitrateconc_exponent = ?.??
! Multiplier for heterotrophic respiration for max denitrification rates(ONLY used if use_nitrif_denitrif is enabled)
denitrif_respiration_coefficient = ?.??
! Exponent power for heterotrophic respiration for max denitrification rates(ONLY used if use_nitrif_denitrif is enabled)
denitrif_respiration_exponent = ?.??
! Time step (seconds)
dtime = 1800
! minimum time step length (seconds) for adaptive time stepping in richards equation
dtmin = 60.
! Error tolerance for differences in atm/land areas in domain checkingdefault: 1.0e-07
eps_aarea = ?.??
! Error tolerance for differences in atm/land lat/lon in domain checkingdefault: 1.0e-12
eps_agrid = ?.??
! Error tolerance for differences in atm/land masks in domain checkingdefault: 1.0e-13
eps_amask = ?.??
! Error tolerance for differences in fractions in domain checkingdefault: 1.0e-02
eps_frac = ?.??
! Error tolerance for differences in ocean/ice lon/lat in domain checkingdefault: 1.0e-1
eps_oarea = ?.??
! Error tolerance for differences in ocean/ice lon/lat in domain checkingdefault: 1.0e-2
eps_ogrid = ?.??
! Error tolerance for differences in ocean/ice masks in domain checkingdefault: 1.0e-06
eps_omask = ?.??
! Intercept of free living Nitrogen fixation with zero annual ET
freelivfix_intercept = ?.??
! Slope of free living Nitrogen fixation with annual ET
freelivfix_slope_wet = ?.??
! separate q10 for frozen soil respiration rates.  default to same as above zero rates
froz_q10 = ?.??
! Maximum snow depth in mm H2O equivalent. Additional mass gains will be capped when this depth is exceeded.Changes in this value should possibly be accompanied by changes in:- nlevsno: larger values of h2osno_max should be accompanied by increases in nlevsno- glc_snow_persistence_max_days: large values of h2osno_max should generally have  glc_snow_persistence_max_days = 0; small values of h2osno_max should generally have  glc_snow_persistence_max_days &gt; 0.
h2osno_max = 10000.0
! Initial stocks of Carbon to use in soil organic matter pools for CENTURY decomposition
initial_cstocks = ?.??
! Initial seed Carbon to use at planting(only used when CN is on as well as crop)
initial_seed_at_planting = ?.??
! Fraction of intercepted precipitation
interception_fraction = 1.0
! baseline proportion of nitrogen allocated for electron transport (J)
jmaxb1 = ?.??
! Maximum nitrification rate constant (1/s)(ONLY used if use_nitrif_denitrif is enabled)
k_nitr_max = ?.??
! Visible and Near-infrared albedo values for melting lakes. Albedo will relax to these values as temperaturereaches melting when ice is present with no snow layers. Represents puddling, ice disintegration, and white ice.Set to alblak values (0.6, 0.4) to keep albedo constant for ice-covered lakes without snow layers.
lake_melt_icealb = ?.??
! Scalar of leaf respiration to vcmax
leaf_mr_vcm = 0.015d00
! Abort model if coupler timestep wallclock time exceeds this value, ignored if 0,if &amp;lt; 0 then use abs(max_cplstep_time)*cktime as the threshold.default: 0
max_cplstep_time = ?.??
! Maximum depth to mix soils to by croturbation, in permafrost soils.
max_depth_cryoturb = ?.??
! Maximum fraction of leaf that may be wet prior to drip occuring
maximum_leaf_wetted_fraction = 0.05
! Minimum wind speed tht results in compaction (m/s)
min_wind_snowcompact = ?.??
! Eastern edge of the regional grid
mksrf_edgee = ?.??
! Northern edge of the regional grid
mksrf_edgen = ?.??
! Southern edge of the regional grid
mksrf_edges = ?.??
! Western edge of the regional grid
mksrf_edgew = ?.??
! Critical threshold for truncation of Nitrogen (truncate Nitrogen states to zero below this value)
ncrit = ?.??
! Number of days over which to use exponential relaxation of NPP in N fixation calculation
nfix_timeconst = ?.??
! Critical threshold of negative Nitrogen to die (abort when Nitrogen states are below this value)
nnegcrit = ?.??
! non-boreal peat fires (/hr)
non_boreal_peatfire_c = ?.??
! Fire occurance for high GDP areas that are tree dominated (fraction)
occur_hi_gdp_tree = ?.??
! eccentricity of orbit, used when orb_mode is fixed_parameters.default: SHR_ORB_UNDEF_REAL (1.e36)(Not currently used in build-namelist)
orb_eccen = ?.??
! location of vernal equinox in longitude degrees, used when orb_mode is fixed_parameters.default: SHR_ORB_UNDEF_REAL (1.e36)(Not currently used in build-namelist)
orb_mvelp = ?.??
! obliquity of orbit in degrees, used when orb_mode is fixed_parameters.default: SHR_ORB_UNDEF_REAL (1.e36)(Not currently used in build-namelist)
orb_obliq = ?.??
! Snow compaction overburden exponential factor (1/K)Not used for snow_overburden_compaction_method=Vionnet2012
overburden_compress_tfactor = ?.??
! Perturbation limit when doing error growth test
pertlim = ?.??
! Plant Function Type fraction to override global file with for mksurfdata
pft_frc = ?.??
! Potential human ignition counts (/person/month)
pot_hmn_ign_counts_alpha = ?.??
! Representative concentration pathway for future scenarios [radiative forcing at peak or 2100 in W/m^2]-999.9 means do NOT use a future scenario, just use historical data.
rcp = -999.9
! Tolerance for relative errordefault: -1.0e-8
reprosum_diffmax = ?.??
! Saturation RH for ignition (0-100)
rh_hgh = ?.??
! Critical RH for ignition (0-100)
rh_low = ?.??
! grid point latitude associated with single column mode.set by PTS_LAT in env_run.xml.
scmlat = ?.??
! grid point longitude associated with single column mode.set by PTS_LON in env_run.xml.
scmlon = ?.??
! Soil percent clay to override global file with for mksurfdata
soil_clay = ?.??
! Soil maximum fraction to override global file with for mksurfdata
soil_fmax = ?.??
! Soil percent sand to override global file with for mksurfdata
soil_sand = ?.??
! Base advective flux (downwards) for SOM.
som_adv_flux = ?.??
! Profile over which to distribute C and N coming from surface pools (leaves, stem, grain).
surfprof_exp = ?.??
! Upper Limit on Destructive Metamorphism Compaction [kg/m3]
upplim_destruct_metamorph = 175.d00
! a very small number: used to check for sub step completion for adaptive time stepping in richards equation
verysmall = 1.e-8
! Michaelis-Mentin maximum methane oxidation rate (mol/m^3-water/s), in the unsaturated zone.
vmax_oxid_unsat = ?.??
! Wall time limit for rundefault: -1.0
wall_time_limit = ?.??
! Temperature resolution of saturation vapor pressure lookup tables in Kelvin.(This is only used if wv_sat_use_tables is .true.)Default: 1.0
wv_sat_table_spacing = ?.??
! Width of the liquid-ice transition range in mixed-phase water saturation vaporpressure calculations. The range always ends at 0 degrees Celsius, so thisvariable only affects the start of the transition.Default: 20KWARNING: CAM is tuned to the default value of this variable. Because it affectsso many different parameterizations, changes to this variable may require asignificant retuning of CAM&apos;s cloud physics to give reasonable results.
wv_sat_transition_start = ?.??
! tolerance to double length of substep for adaptive time stepping in richards equation
xtolerlower = 1.e-2
! tolerance to halve length of substep for adaptive time stepping in richards equation
xtolerupper = 1.e-1
! The maximum value to use for zeta under stable conditions
zetamaxstable = 0.5d00</thetext>
  </long_desc><long_desc isprivate="0" >
    <commentid>7740</commentid>
    <comment_count>2</comment_count>
    <who name="Erik Kluzek">erik</who>
    <bug_when>2016-11-09 14:31:45 -0700</bug_when>
    <thetext>I have this started as part of clm4_5_12_r200. It doesn&apos;t happen automatically though.</thetext>
  </long_desc>
      
      

    </bug>
    <bug>
          <bug_id>2372</bug_id>
          
          <creation_ts>2016-11-09 13:14:01 -0700</creation_ts>
          <short_desc>Remove need to check readvar for checkDates for crop</short_desc>
          <delta_ts>2016-11-09 13:14:01 -0700</delta_ts>
          <reporter_accessible>1</reporter_accessible>
          <cclist_accessible>1</cclist_accessible>
          <classification_id>1</classification_id>
          <classification>Unclassified</classification>
          <product>CCSM/CESM CLM</product>
          <component>CLM 5.0</component>
          <version>CESM2.0.x Development</version>
          <rep_platform>All</rep_platform>
          <op_sys>All</op_sys>
          <bug_status>ASSIGNED</bug_status>
          <resolution></resolution>
          
          
          <bug_file_loc></bug_file_loc>
          <status_whiteboard></status_whiteboard>
          <keywords></keywords>
          <priority>P3</priority>
          <bug_severity>normal</bug_severity>
          <target_milestone>CLM5</target_milestone>
          
          
          <everconfirmed>1</everconfirmed>
          <reporter name="Erik Kluzek">erik</reporter>
          <assigned_to name="Erik Kluzek">erik</assigned_to>
          <cc>rfisher</cc>
          
          <cf_fixedinversion></cf_fixedinversion>

      

      

      

          <comment_sort_order>oldest_to_newest</comment_sort_order>  
          <long_desc isprivate="0" >
    <commentid>7738</commentid>
    <comment_count>0</comment_count>
    <who name="Erik Kluzek">erik</who>
    <bug_when>2016-11-09 13:14:01 -0700</bug_when>
    <thetext>The following shouldn&apos;t depend on readvar for unrelated variables...

Index: CropType.F90
===================================================================
--- CropType.F90	(revision 81586)
+++ CropType.F90	(working copy)
@@ -429,8 +429,10 @@
             dim1name=&apos;pft&apos;, long_name=&apos;crop phenology phase&apos;, &amp;
             units=&apos;0-not planted, 1-planted, 2-leaf emerge, 3-grain fill, 4-harvest&apos;, &amp;
             interpinic_flag=&apos;interp&apos;, readvar=readvar, data=this%cphase_patch)
-       if (flag==&apos;read&apos; .and. readvar)  then
-          call this%checkDates( )
+       if (flag==&apos;read&apos; )then
+          call this%checkDates( )  ! Check that restart date is same calendar date (even if year is different)
+                                   ! This is so that it properly goes through
+                                   ! the crop phases
        end if
     end if</thetext>
  </long_desc>
      
      

    </bug>
    <bug>
          <bug_id>2380</bug_id>
          
          <creation_ts>2016-11-29 11:10:22 -0700</creation_ts>
          <short_desc>Remove logic for missing_crops in mksurfdata_map</short_desc>
          <delta_ts>2016-11-29 11:10:22 -0700</delta_ts>
          <reporter_accessible>1</reporter_accessible>
          <cclist_accessible>1</cclist_accessible>
          <classification_id>1</classification_id>
          <classification>Unclassified</classification>
          <product>CCSM/CESM CLM</product>
          <component>CLM 5.0</component>
          <version>CESM2.0.x Development</version>
          <rep_platform>All</rep_platform>
          <op_sys>All</op_sys>
          <bug_status>ASSIGNED</bug_status>
          <resolution></resolution>
          
          
          <bug_file_loc></bug_file_loc>
          <status_whiteboard></status_whiteboard>
          <keywords></keywords>
          <priority>P3</priority>
          <bug_severity>normal</bug_severity>
          <target_milestone>CLM5</target_milestone>
          
          
          <everconfirmed>1</everconfirmed>
          <reporter name="Erik Kluzek">erik</reporter>
          <assigned_to name="Erik Kluzek">erik</assigned_to>
          <cc>dlawren</cc>
    
    <cc>lawrence</cc>
    
    <cc>rfisher</cc>
    
    <cc>sacks</cc>
          
          <cf_fixedinversion></cf_fixedinversion>

      

      

      

          <comment_sort_order>oldest_to_newest</comment_sort_order>  
          <long_desc isprivate="0" >
    <commentid>7758</commentid>
    <comment_count>0</comment_count>
    <who name="Erik Kluzek">erik</who>
    <bug_when>2016-11-29 11:10:22 -0700</bug_when>
    <thetext>There&apos;s some logic in mksurfdat.F90 and mkpftMod.F90 for mksurfdata_map that allows PFT raw datasets without all of the prognostic crop CFT&apos;s to be used. For a transient case the first year has to have crop, and then it uses that as a constant for future years.

Since, we are moving to raw datasets that always contain prognostic crop, we can remove this logic as a simplification. We&apos;ll leave it in place, until all the raw datasets are in place and available and we can use crop datasets for non-crop simulations (with create_croplandunit=.true.).

Also see...

https://trello.com/c/uWWZq88m/252-collapse-all-crops-to-generic-for-sp-or-non-crop-bgc-simulations</thetext>
  </long_desc>
      
      

    </bug>
    <bug>
          <bug_id>2382</bug_id>
          
          <creation_ts>2016-12-01 11:09:03 -0700</creation_ts>
          <short_desc>Move rawdata soil depth file into inputdata and svn</short_desc>
          <delta_ts>2017-01-12 15:06:02 -0700</delta_ts>
          <reporter_accessible>1</reporter_accessible>
          <cclist_accessible>1</cclist_accessible>
          <classification_id>1</classification_id>
          <classification>Unclassified</classification>
          <product>CCSM/CESM CLM</product>
          <component>CLM 5.0</component>
          <version>CESM2.0.x Development</version>
          <rep_platform>All</rep_platform>
          <op_sys>All</op_sys>
          <bug_status>ASSIGNED</bug_status>
          <resolution></resolution>
          
          
          <bug_file_loc></bug_file_loc>
          <status_whiteboard></status_whiteboard>
          <keywords></keywords>
          <priority>P3</priority>
          <bug_severity>normal</bug_severity>
          <target_milestone>CLM5</target_milestone>
          
          
          <everconfirmed>1</everconfirmed>
          <reporter name="Erik Kluzek">erik</reporter>
          <assigned_to name="Erik Kluzek">erik</assigned_to>
          <cc>andre</cc>
    
    <cc>dlawren</cc>
    
    <cc>rfisher</cc>
    
    <cc>swensosc</cc>
          
          <cf_fixedinversion></cf_fixedinversion>

      

      

      

          <comment_sort_order>oldest_to_newest</comment_sort_order>  
          <long_desc isprivate="0" >
    <commentid>7762</commentid>
    <comment_count>0</comment_count>
    <who name="Erik Kluzek">erik</who>
    <bug_when>2016-12-01 11:09:03 -0700</bug_when>
    <thetext>As of clm4_5_2_r125, mksurfdata_map is using a private copy of the soil depth file from Sean:

namelist_defaults_clm4_5_tools.xml:&gt;/glade/p/work/swensosc/soildepth_data/u.arizona/soil_alluvial_thickness_5x5min.no_nan.nc

We need to move this over into inputdata and make sure it&apos;s checked into subversion.</thetext>
  </long_desc><long_desc isprivate="0" >
    <commentid>7801</commentid>
    <comment_count>1</comment_count>
    <who name="Erik Kluzek">erik</who>
    <bug_when>2017-01-12 15:06:02 -0700</bug_when>
    <thetext>I now have it in the standard location and in svn in clm4_5_14_r215. At: 

$CSMDATA/lnd/clm2/rawdata/mksf_soilthk_5x5min_ORNL_SOILS_simyr1900-2015_c150701.nc

But, before closing this I want to add some additional metadata to describe the source of the data.

Here&apos;s and email from Patrick giving some information on the dataset:

Hi Dave,

I provided a dataset on 6/26/2015, which had all variables related to our DTB dataset binned into 5x5 arcminute grid cells.  It contained data at this resolution for all of our grids (upland valley soil depth, upland hillslope soil depth, lowland soil depth, and overall soil depth) as well as the % coverage for each landscape unit (upland valley, upland hillslope, lowland, as well as ocean, lakes, and ice for which soil depths were not reported).

There were two aggregation methods as I was asked to report both.  For the first, data for the 5x5 arcminute grid cells were created by averaging the original 30 arcsecond data, and for the second, data for the 5x5 arcminute grid cells were created by taking the median of the original 30 arcsecond data.

Hope this helps,

Thanks,
-Patrick

Patrick Broxton
Researcher
Arizona Remote Sensing Center
School of Natural Resources and the Environment

ENR2 Bldg. N407
1064 E. Lowell Street
The University of Arizona
Tucson, AZ  85721</thetext>
  </long_desc>
      
      

    </bug>
    <bug>
          <bug_id>2383</bug_id>
          
          <creation_ts>2016-12-05 13:07:58 -0700</creation_ts>
          <short_desc>Negative nitrogen error in BC5L45BGC case at year 5.</short_desc>
          <delta_ts>2016-12-13 11:49:29 -0700</delta_ts>
          <reporter_accessible>1</reporter_accessible>
          <cclist_accessible>1</cclist_accessible>
          <classification_id>1</classification_id>
          <classification>Unclassified</classification>
          <product>CCSM/CESM CLM</product>
          <component>CLM 5.0</component>
          <version>CESM2.0.x Development</version>
          <rep_platform>All</rep_platform>
          <op_sys>All</op_sys>
          <bug_status>ASSIGNED</bug_status>
          <resolution></resolution>
          
          
          <bug_file_loc></bug_file_loc>
          <status_whiteboard></status_whiteboard>
          <keywords></keywords>
          <priority>P3</priority>
          <bug_severity>normal</bug_severity>
          <target_milestone>CLM5</target_milestone>
          
          
          <everconfirmed>1</everconfirmed>
          <reporter name="Erik Kluzek">erik</reporter>
          <assigned_to name="Erik Kluzek">erik</assigned_to>
          <cc>dlawren</cc>
    
    <cc>erik</cc>
    
    <cc>jedwards</cc>
    
    <cc>mickelso</cc>
    
    <cc>mvertens</cc>
    
    <cc>rfisher</cc>
          
          <cf_fixedinversion></cf_fixedinversion>

      

      

      

          <comment_sort_order>oldest_to_newest</comment_sort_order>  
          <long_desc isprivate="0" >
    <commentid>7763</commentid>
    <comment_count>0</comment_count>
    <who name="Erik Kluzek">erik</who>
    <bug_when>2016-12-05 13:07:58 -0700</bug_when>
    <thetext>Sheri ran into the following problem at 50525 in BC5L45BGC compset...

./create_newcase -case /glade/scratch/mickelso/cylc_testing/cylc_setup.f09_g16.BC5L45BGC.cesm2_0_beta04_short/ -res f09_g16 -compset BC5L45BGC

This is a 2000_control f09_g16 case, starting from spunup initial conditions...

/glade/p/cesmdata/cseg/inputdata/lnd/clm2/initdata_map/clmi.I2000CLM45CRUBGC.2000-01-01.0.9x1.25_gx1v6_simyr2000_c160413.nc

 
453: QNEG3 from chemistry/SO2:m=  8 lat/lchnk=   3321 Min. mixing ratio violated at    2 points.  Reset to  1.0E-36 Worst =-2.4E-12 at i,k=   8 26
  25:  filew failed, worst i, j, qtmp, q =            1          77
  25: -5.253789982329533E-161  0.000000000000000E+000
 372: dpcoup dqreq           3        2835          12 -2.163540346209262E-165
 372:  4.741815226971638E-165  1.998551585573850E-165
 175: ERROR: Carbon or Nitrogen patch negative =    17.6242454427402
 175:  -6.04926967432914
 175: ERROR: limits =   -60.0000000000000       -6.00000000000000
 175: ENDRUN:
 175: ERROR: carbon or nitrogen state critically negative ERROR in CNPrecisionControl
 175: Mod.F90 at line 202
 175:
 175:
 175:
 175:
 175:
 175:
 175: ERROR: Unknown error submitted to shr_sys_abort.
 175:Image              PC                Routine            Line        Source
 175:cesm.exe           00000000038694CD  Unknown               Unknown  Unknown
 175:cesm.exe           000000000315DD06  shr_sys_mod_mp_sh         401  shr_sys_mod.F90
 175:cesm.exe           00000000022BF348  abortutils_mp_end          43  abortutils.F90
 175:cesm.exe           000000000246BF72  cnprecisioncontro         442  CNPrecisionControlMod.F90</thetext>
  </long_desc>
      
      

    </bug>
    <bug>
          <bug_id>2384</bug_id>
          
          <creation_ts>2016-12-05 15:06:44 -0700</creation_ts>
          <short_desc>CLM45/CLM50 tests that fail on laramie</short_desc>
          <delta_ts>2017-05-02 13:45:04 -0600</delta_ts>
          <reporter_accessible>1</reporter_accessible>
          <cclist_accessible>1</cclist_accessible>
          <classification_id>1</classification_id>
          <classification>Unclassified</classification>
          <product>CCSM/CESM CLM</product>
          <component>CLM 4.5</component>
          <version>CESM2.0.x Development</version>
          <rep_platform>All</rep_platform>
          <op_sys>All</op_sys>
          <bug_status>ASSIGNED</bug_status>
          <resolution></resolution>
          
          
          <bug_file_loc></bug_file_loc>
          <status_whiteboard></status_whiteboard>
          <keywords></keywords>
          <priority>P3</priority>
          <bug_severity>normal</bug_severity>
          <target_milestone>CLM5</target_milestone>
          
          <blocked>2439</blocked>
          <everconfirmed>1</everconfirmed>
          <reporter name="Erik Kluzek">erik</reporter>
          <assigned_to name="Ben Andre">andre</assigned_to>
          <cc>erik</cc>
    
    <cc>fischer</cc>
    
    <cc>jedwards</cc>
    
    <cc>mvertens</cc>
    
    <cc>rfisher</cc>
    
    <cc>sacks</cc>
          
          <cf_fixedinversion></cf_fixedinversion>

      

      

      

          <comment_sort_order>oldest_to_newest</comment_sort_order>  
          <long_desc isprivate="0" >
    <commentid>7764</commentid>
    <comment_count>0</comment_count>
    <who name="Erik Kluzek">erik</who>
    <bug_when>2016-12-05 15:06:44 -0700</bug_when>
    <thetext>Chris carried out some prealpha testing on laramie and ran into these clm failures.

FAIL ERPP180x2_D_Ld5.f19_g16.I1850CLM45.laramie_intel.clm-default RUN time=90
160: ERROR: get_proc_bounds ERROR: Calling from inside a threaded region
160:Image PC Routine Line Source
160:cesm.exe 000000000379C483 Unknown Unknown Unknown
160:cesm.exe 0000000002E1F6DC shr_sys_mod_mp_sh 401 shr_sys_mod.F90
160:cesm.exe 0000000002E1F2FF shr_sys_mod_mp_sh 230 shr_sys_mod.F90
160:cesm.exe 0000000000941B5F decompmod_mp_get 218 decompMod.F90
160:cesm.exe 00000000013417CD getglobalvaluesmo 47 GetGlobalValuesMod.F90
160:cesm.exe 0000000001343DE5 getglobalvaluesmo 119 GetGlobalValuesMod.F90
160:cesm.exe 0000000000837A4E abortutilsmp_end 69 abortutils.F90
160:cesm.exe 00000000017366F8 snowsnicarmod_mp 426 SnowSnicarMod.F90
160:cesm.exe 0000000001DCF85A surfacealbedomod_ 620 SurfaceAlbedoMod.F90
160:cesm.exe 0000000000864EAE clm_driver_mp_clm 1003 clm_driver.F90

FAIL ERS_D.f09_g16.B1850.laramie_intel.allactive-defaultio RUN time=1562
101: ERROR: get_proc_bounds ERROR: Calling from inside a threaded region

FAIL SMS_D.f09_g16.B1850.laramie_intel.allactive-defaultio RUN time=1553
82: ERROR: get_proc_bounds ERROR: Calling from inside a threaded region

The last two tests didn&apos;t provide any trace backs.</thetext>
  </long_desc><long_desc isprivate="0" >
    <commentid>7766</commentid>
    <comment_count>1</comment_count>
    <who name="Erik Kluzek">erik</who>
    <bug_when>2016-12-05 15:10:03 -0700</bug_when>
    <thetext>Not, one part of the problem is calling endrun in a threaded region which is known to fail (see bug 2027).

The actual error is something wrong with the snow grain radius. Chris will give us more info. on the filesystem is up so he can show us.</thetext>
  </long_desc>
      
      

    </bug>
    <bug>
          <bug_id>2387</bug_id>
          
          <creation_ts>2016-12-09 13:37:31 -0700</creation_ts>
          <short_desc>Automatic restarts will fail for CLM if the last restarts are written before the end of the simulation</short_desc>
          <delta_ts>2016-12-09 16:49:43 -0700</delta_ts>
          <reporter_accessible>1</reporter_accessible>
          <cclist_accessible>1</cclist_accessible>
          <classification_id>1</classification_id>
          <classification>Unclassified</classification>
          <product>CCSM/CESM CLM</product>
          <component>CLM 5.0</component>
          <version>CESM2.0.x Development</version>
          <rep_platform>All</rep_platform>
          <op_sys>All</op_sys>
          <bug_status>ASSIGNED</bug_status>
          <resolution></resolution>
          
          
          <bug_file_loc></bug_file_loc>
          <status_whiteboard></status_whiteboard>
          <keywords></keywords>
          <priority>P3</priority>
          <bug_severity>normal</bug_severity>
          <target_milestone>CLM5</target_milestone>
          
          
          <everconfirmed>1</everconfirmed>
          <reporter name="Erik Kluzek">erik</reporter>
          <assigned_to name="Erik Kluzek">erik</assigned_to>
          <cc>aliceb</cc>
    
    <cc>dlawren</cc>
    
    <cc>dll</cc>
    
    <cc>oleson</cc>
    
    <cc>rfisher</cc>
          
          <cf_fixedinversion></cf_fixedinversion>

      

      

      

          <comment_sort_order>oldest_to_newest</comment_sort_order>  
          <long_desc isprivate="0" >
    <commentid>7770</commentid>
    <comment_count>0</comment_count>
    <who name="Erik Kluzek">erik</who>
    <bug_when>2016-12-09 13:37:31 -0700</bug_when>
    <thetext>Danica setup a case with clm4_5_12_r191 (cime: clm4_5_11_r188_cime4.5.14) where STOP_N=23/REST_N=10. So restarts don&apos;t coincide with the end of the model run. It then dies on automatic restart trying to read the non-existing history files that go along with the year 2026 restart files. 

history settings are:

hist_mfilt     = 1,1,365,8760
hist_nhtfrq    = 0,0,-24,-1
hist_fincl2    = &apos;TLAI&apos;,&apos;NPP&apos;,&apos;GRAINC:X&apos;,&apos;QVEGT&apos;,&apos;FCEV&apos;,&apos;FCTR&apos;,&apos;FGEV&apos;,&apos;FPSN&apos;,&apos;FSH&apos;,&apos;QDRAI&apos;,&apos;QOVER&apos;,&apos;QRGWL&apos;,&apos;QSOIL&apos;,&apos;QVEGE&apos;,&apos;TOTECOSYSC&apos;,&apos;NEE&apos;,&apos;HR&apos;,&apos;ER&apos;,&apos;GPP&apos;,&apos;O3UPTAKESUN&apos;,&apos;O3UPTAKESHA&apos;
hist_fincl3    = &apos;CPHASE&apos;,&apos;GRAINC&apos;
hist_fincl4    = &apos;OZONE&apos;,&apos;OZONEMSK&apos;

The end of the cesm.log contains this...

   1: NetCDF: Variable not found
   1: NetCDF: Variable not found
   1: No such file or directory
   1: pio_support::pio_die:: myrank=          -1 : ERROR: ionf_mod.F90:         235 :
   1:  No such file or directory
   1:Image              PC                Routine            Line        Source
   1:cesm.exe           0000000001515098  Unknown               Unknown  Unknown
   1:cesm.exe           0000000000E4C8C1  pio_support_mp_pi         120  pio_support.F90
   1:cesm.exe           0000000000E4A9B2  pio_utils_mp_chec          74  pio_utils.F90
   1:cesm.exe           0000000000F5D03A  ionf_mod_mp_open_         235  ionf_mod.F90
   1:cesm.exe           0000000000E3C44F  piolib_mod_mp_pio        2694  piolib_mod.F90
   1:cesm.exe           00000000005DBDFB  ncdio_pio_mp_ncd_         195  ncdio_pio.F90.in


The lnd.log completes to reading the restart history files as expected...


 (GETFIL): attempting to find local file
 clm4_5_12_r191_CRUCLM45BGCCrop2deg_TransientCO2.clm2.rh3.2026-01-01-00000.nc
 (GETFIL): using
 clm4_5_12_r191_CRUCLM45BGCCrop2deg_TransientCO2.clm2.rh3.2026-01-01-00000.nc
  in current working directory

The next part is reading in the history files as given on the restart dataset:

 locfnh =
  &quot;./clm4_5_12_r191_CRUCLM45BGCCrop2deg_TransientCO2.clm2.h0.2025-12.nc                                                                                                                                   &quot;,
  &quot;./clm4_5_12_r191_CRUCLM45BGCCrop2deg_TransientCO2.clm2.h1.2025-12.nc                                                                                                                                   &quot;,
  &quot;./clm4_5_12_r191_CRUCLM45BGCCrop2deg_TransientCO2.clm2.h2.2026-01-01-00000.nc                                                                                                                          &quot;,
  &quot;./clm4_5_12_r191_CRUCLM45BGCCrop2deg_TransientCO2.clm2.h3.2026-01-01-00000.nc                                                                                                                          &quot; ;

 locfnhr =
  &quot;./clm4_5_12_r191_CRUCLM45BGCCrop2deg_TransientCO2.clm2.rh0.2026-01-01-00000.nc                                                                                                                         &quot;,
  &quot;./clm4_5_12_r191_CRUCLM45BGCCrop2deg_TransientCO2.clm2.rh1.2026-01-01-00000.nc                                                                                                                         &quot;,
  &quot;./clm4_5_12_r191_CRUCLM45BGCCrop2deg_TransientCO2.clm2.rh2.2026-01-01-00000.nc                                                                                                                         &quot;,
  &quot;./clm4_5_12_r191_CRUCLM45BGCCrop2deg_TransientCO2.clm2.rh3.2026-01-01-00000.nc


Since, these files were archived away, the restart can&apos;t continue without them.</thetext>
  </long_desc><long_desc isprivate="0" >
    <commentid>7771</commentid>
    <comment_count>1</comment_count>
    <who name="Erik Kluzek">erik</who>
    <bug_when>2016-12-09 13:52:05 -0700</bug_when>
    <thetext>The call in histFileMod.F90 that fails is this...

             if (tape(t)%ntimes /= 0) then
                call ncd_pio_openfile (nfid(t), trim(locfnh(t)), ncd_write)
             end if

ncd_pio_openfile has this...
    ierr = pio_openfile(pio_subsystem, file, io_type, fname, mode)

    if(ierr/= PIO_NOERR) then
       call shr_sys_abort(&apos;ncd_pio_openfile ERROR: Failed to open file&apos;)
    else if(pio_iotask_rank(pio_subsystem)==0 .and. masterproc) then
       write(iulog,*) &apos;Opened existing file &apos;, trim(fname), file%fh
    end if

But, it&apos;s failing in pio_openfile before coming back to this level. It would&apos;ve helped in this situation to know what file was failing on the open. I originally thought it was a problem with the rh3 restart-history file.</thetext>
  </long_desc><long_desc isprivate="0" >
    <commentid>7772</commentid>
    <comment_count>2</comment_count>
    <who name="Erik Kluzek">erik</who>
    <bug_when>2016-12-09 16:49:43 -0700</bug_when>
    <thetext>This may be related to the following cime issue:

https://github.com/ESMCI/cime/issues/594

which now has a fix for it.</thetext>
  </long_desc>
      
      

    </bug>
    <bug>
          <bug_id>2390</bug_id>
          
          <creation_ts>2016-12-19 12:53:26 -0700</creation_ts>
          <short_desc>Urban time-varying streams</short_desc>
          <delta_ts>2016-12-20 16:10:12 -0700</delta_ts>
          <reporter_accessible>1</reporter_accessible>
          <cclist_accessible>1</cclist_accessible>
          <classification_id>1</classification_id>
          <classification>Unclassified</classification>
          <product>CCSM/CESM CLM</product>
          <component>CLM 5.0</component>
          <version>CESM1.5.z Development</version>
          <rep_platform>All</rep_platform>
          <op_sys>All</op_sys>
          <bug_status>NEW</bug_status>
          <resolution></resolution>
          
          
          <bug_file_loc></bug_file_loc>
          <status_whiteboard></status_whiteboard>
          <keywords></keywords>
          <priority>P3</priority>
          <bug_severity>normal</bug_severity>
          <target_milestone>CLM5</target_milestone>
          
          
          <everconfirmed>1</everconfirmed>
          <reporter name="Keith Oleson">oleson</reporter>
          <assigned_to name="Erik Kluzek">erik</assigned_to>
          <cc>dlawren</cc>
    
    <cc>erik</cc>
    
    <cc>oleson</cc>
    
    <cc>rfisher</cc>
    
    <cc>sacks</cc>
          
          <cf_fixedinversion></cf_fixedinversion>

      

      

      

          <comment_sort_order>oldest_to_newest</comment_sort_order>  
          <long_desc isprivate="0" >
    <commentid>7776</commentid>
    <comment_count>0</comment_count>
    <who name="Keith Oleson">oleson</who>
    <bug_when>2016-12-19 12:53:26 -0700</bug_when>
    <thetext>Bob Tomas encountered an urban time-varying stream related error with cesm2_0_beta04:

(shr_dmodel_readLBUB) file lb: /glade/p/cesmdata/cseg/inputdata/lnd/clm2/urbandata/CLM50_tbuildmax_Oleson_2016_0.9x1.25_simyr1849-2106_c160923.nc       2
(shr_dmodel_readstrm) open   : /glade/p/cesmdata/cseg/inputdata/lnd/clm2/urbandata/CLM50_tbuildmax_Oleson_2016_0.9x1.25_simyr1849-2106_c160923.nc
(shr_dmodel_readLBUB) file ub: /glade/p/cesmdata/cseg/inputdata/lnd/clm2/urbandata/CLM50_tbuildmax_Oleson_2016_0.9x1.25_simyr1849-2106_c160923.nc       2
 ERROR: no valid urban data for g=            1
 landunit type:              7
 RROR: Unknown error submitted to shr_sys_abort.

This occurs in UrbanTimeVarType.F90 (which I wrote for the urban time-varying streams).
He is running an LGM simulation for which there are no urban areas.

There is a check in that routine to see if there is valid urban data if urbpoi is true. I had forgotten that urbpoi could be true even if pct_urban = 0, because it looks like it is simply keyed off of URBAN_REGION_ID from the surface dataset, regardless of the value of pct_urban.  It looks like I need to also check whether or not the landunit is active, perhaps using lun%active(l)?  Or is there a better way to do this?  The relevant code is:

   found = .false.
   do l = bounds%begl,bounds%endl
      if (lun%urbpoi(l)) then
         glun  = lun%gridcell(l)
         !
         ! Determine vector index corresponding to glun
         !
         ig = 0
         do g = bounds%begg,bounds%endg
            ig = ig+1
            if (g == glun) exit
         end do

         if ( .not. urban_valid(g) .or. (this%t_building_max(l) &lt;= 0._r8)) then
            found = .true.
            gindx = g
            lindx = l
            exit
         end if
      end if
   end do
   if ( found ) then
      write(iulog,*)&apos;ERROR: no valid urban data for g= &apos;,gindx
      write(iulog,*)&apos;landunit type:   &apos;,lun%itype(l)
      write(iulog,*)&apos;urban_valid:     &apos;,urban_valid(gindx)
      write(iulog,*)&apos;t_building_max:  &apos;,this%t_building_max(lindx)
      call endrun(msg=errmsg(sourcefile, __LINE__))
   end if

So I was thinking of modifying the if statement as:

if (lun%urbpoi(l) .and. lun%active(l)) then</thetext>
  </long_desc><long_desc isprivate="0" >
    <commentid>7779</commentid>
    <comment_count>1</comment_count>
    <who name="Keith Oleson">oleson</who>
    <bug_when>2016-12-20 16:10:12 -0700</bug_when>
    <thetext>Changing &quot;fillalgo&quot; for the urbantv stream from the current value of &quot;none&quot; to &quot;nn&quot; (nearest neighbor) allows the model to run. This implies that gridcells that have no data are being filled in with valid data.

To check the actual data being filled in, I ran an &quot;allurban&quot; run where urban landunits run everywhere and I output a dov2xy=false file that contains &quot;TBUILD_MAX&quot; which is the field read in from the urbantv stream.  I converted this to 2d and I see that this has the effect of filling in a nearest neighbor valid value for every gridcell that has non-zero URBAN_REGION_ID, e.g, for this particular simulation there are now valid values of TBUILD_MAX in Antarctica.  These values are 380K which is what I expect for an 1850 simulation.

So, I think there are two changes to be made.  As I previously mentioned, the first is to additionally check whether the urban landunit is active, i.e., in UrbanTimeVarType.F90:

&lt; !KO      if (lun%urbpoi(l)) then
&lt; !KO
&lt;       if (lun%urbpoi(l) .and. lun%active(l)) then
&lt; !KO

And the second is to change fillalgo from &quot;none&quot; to &quot;nn&quot;.</thetext>
  </long_desc>
      
      

    </bug>
    <bug>
          <bug_id>2391</bug_id>
          
          <creation_ts>2016-12-19 14:36:00 -0700</creation_ts>
          <short_desc>Add single point tower data for smallvilleIA</short_desc>
          <delta_ts>2016-12-19 14:58:16 -0700</delta_ts>
          <reporter_accessible>1</reporter_accessible>
          <cclist_accessible>1</cclist_accessible>
          <classification_id>1</classification_id>
          <classification>Unclassified</classification>
          <product>CCSM/CESM CLM</product>
          <component>CLM 5.0</component>
          <version>unspecified</version>
          <rep_platform>All</rep_platform>
          <op_sys>All</op_sys>
          <bug_status>ASSIGNED</bug_status>
          <resolution></resolution>
          
          
          <bug_file_loc></bug_file_loc>
          <status_whiteboard></status_whiteboard>
          <keywords></keywords>
          <priority>P3</priority>
          <bug_severity>normal</bug_severity>
          <target_milestone>CLM5</target_milestone>
          
          
          <everconfirmed>1</everconfirmed>
          <reporter name="Erik Kluzek">erik</reporter>
          <assigned_to name="Erik Kluzek">erik</assigned_to>
          <cc>rfisher</cc>
    
    <cc>sacks</cc>
          
          <cf_fixedinversion></cf_fixedinversion>

      

      

      

          <comment_sort_order>oldest_to_newest</comment_sort_order>  
          <long_desc isprivate="0" >
    <commentid>7777</commentid>
    <comment_count>0</comment_count>
    <who name="Erik Kluzek">erik</who>
    <bug_when>2016-12-19 14:36:00 -0700</bug_when>
    <thetext></thetext>
  </long_desc><long_desc isprivate="0" >
    <commentid>7778</commentid>
    <comment_count>1</comment_count>
    <who name="Bill Sacks">sacks</who>
    <bug_when>2016-12-19 14:58:16 -0700</bug_when>
    <thetext>Purpose is so that smallville tests can turn around faster (when running with CRU forcing data, over half the time is spent in datm)</thetext>
  </long_desc>
      
      

    </bug>
    <bug>
          <bug_id>2394</bug_id>
          
          <creation_ts>2016-12-22 15:58:38 -0700</creation_ts>
          <short_desc>Methane demands exceed methane available</short_desc>
          <delta_ts>2016-12-22 15:58:38 -0700</delta_ts>
          <reporter_accessible>1</reporter_accessible>
          <cclist_accessible>1</cclist_accessible>
          <classification_id>1</classification_id>
          <classification>Unclassified</classification>
          <product>CCSM/CESM CLM</product>
          <component>CLM 5.0</component>
          <version>unspecified</version>
          <rep_platform>All</rep_platform>
          <op_sys>All</op_sys>
          <bug_status>ASSIGNED</bug_status>
          <resolution></resolution>
          
          
          <bug_file_loc></bug_file_loc>
          <status_whiteboard></status_whiteboard>
          <keywords></keywords>
          <priority>P3</priority>
          <bug_severity>normal</bug_severity>
          <target_milestone>CLM5</target_milestone>
          
          
          <everconfirmed>1</everconfirmed>
          <reporter name="Erik Kluzek">erik</reporter>
          <assigned_to name="Erik Kluzek">erik</assigned_to>
          <cc>cdkoven</cc>
    
    <cc>dlawren</cc>
    
    <cc>oleson</cc>
    
    <cc>rfisher</cc>
          
          <cf_fixedinversion></cf_fixedinversion>

      

      

      

          <comment_sort_order>oldest_to_newest</comment_sort_order>  
          <long_desc isprivate="0" >
    <commentid>7784</commentid>
    <comment_count>0</comment_count>
    <who name="Erik Kluzek">erik</who>
    <bug_when>2016-12-22 15:58:38 -0700</bug_when>
    <thetext>This is with the SMS_Lm25.f19_g16.ICLM45BGCCROP.yellowstone_gnu.clm-cropMonthOutput test with transcrop_n05_clm4_5_13_r210 after time-step 208...

  89: ENDRUN: ERROR: Methane demands exceed methane available.ERROR in /glade/p/work/erik/clm_transcrop/components/clm/src/biogeochem/ch4Mod.F90 at line 3418                                                                                                                                                                                                                                                                                                                                                                                                
  89: ERROR: Unknown error submitted to shr_sys_abort.
  74: Methane demands exceed methane available. Error in methane competition (mol/m^3/s), c,j:  -1.5575315045230422E-009       33170           2
  74: Latdeg,Londeg=   8.5263157894735997        80.000000000000000
  74: ENDRUN: ERROR: Methane demands exceed methane available.ERROR in /glade/p/work/erik/clm_transcrop/components/clm/src/biogeochem/ch4Mod.F90 at line 3418

with stack trace...

  89:#0  0x2B80A405EB57
  74:#0  0x2B8377A15B57
  89:#1  0x9E7BF9 in __shr_sys_mod_MOD_shr_sys_backtrace
  89:#2  0x9E7F52 in __shr_sys_mod_MOD_shr_sys_abort
  89:#3  0x4A1542 in __abortutils_MOD_endrun_vanilla
  89:#4  0x7A7DB2 in __ch4mod_MOD_ch4_tran at ch4Mod.F90:0
  89:#5  0x7BE1F9 in __ch4mod_MOD_ch4
  89:#6  0x4A80A9 in __clm_driver_MOD_clm_drv
  89:#7  0x49D2FB in __lnd_comp_mct_MOD_lnd_run_mct
  89:#8  0x41D893 in __component_mod_MOD_component_run
  74:#1  0x9E7BF9 in __shr_sys_mod_MOD_shr_sys_backtrace
  89:#9  0x40B658 in __cesm_comp_mod_MOD_cesm_run</thetext>
  </long_desc>
      
      

    </bug>
    <bug>
          <bug_id>2400</bug_id>
          
          <creation_ts>2017-01-12 11:19:20 -0700</creation_ts>
          <short_desc>Problem with mksurfdata_map for smallville landuse.timeseries</short_desc>
          <delta_ts>2017-12-15 13:27:28 -0700</delta_ts>
          <reporter_accessible>1</reporter_accessible>
          <cclist_accessible>1</cclist_accessible>
          <classification_id>1</classification_id>
          <classification>Unclassified</classification>
          <product>CCSM/CESM CLM</product>
          <component>CLM 5.0</component>
          <version>CESM2.0.x Development</version>
          <rep_platform>All</rep_platform>
          <op_sys>All</op_sys>
          <bug_status>ASSIGNED</bug_status>
          <resolution></resolution>
          
          
          <bug_file_loc></bug_file_loc>
          <status_whiteboard></status_whiteboard>
          <keywords></keywords>
          <priority>P3</priority>
          <bug_severity>normal</bug_severity>
          <target_milestone>CLM5</target_milestone>
          
          
          <everconfirmed>1</everconfirmed>
          <reporter name="Erik Kluzek">erik</reporter>
          <assigned_to name="Erik Kluzek">erik</assigned_to>
          <cc>dlawren</cc>
    
    <cc>rfisher</cc>
    
    <cc>sacks</cc>
          
          <cf_fixedinversion></cf_fixedinversion>

      

      

      

          <comment_sort_order>oldest_to_newest</comment_sort_order>  
          <long_desc isprivate="0" >
    <commentid>7798</commentid>
    <comment_count>0</comment_count>
    <who name="Erik Kluzek">erik</who>
    <bug_when>2017-01-12 11:19:20 -0700</bug_when>
    <thetext>With clm4_5_14_r215 I get the following when trying to run the smallville landuse.timeseries site in mksurfdata_map

The command is...

./mksurfdata.pl -no_surfdata -glc_nec 0 -y 1850-1855 -r 1x1_smallvilleIA -pft_idx 17,18,19,20,21,22,23,24,25,26,27,28,29,30,31,32,33,34,35,36,37,38,39,40,41,42,43,44,45,46,47,48,49,50,51,52,53,54,55,56,57,58,59,60,61,62,63,64,65,66,67,68,69,70,71,72,73,74,75,76,77,78 -pft_frc 6.5,1.5,1.6,1.7,1.8,1.9,1.5,1.6,1.7,1.8,1.9,1.5,1.5,1.5,1.5,1.5,1.5,1.5,1.5,1.5,1.5,1.5,1.5,1.5,1.5,1.5,1.5,1.5,1.5,1.5,1.5,1.5,1.5,1.5,1.5,1.5,1.5,1.5,1.5,1.5,1.5,1.5,1.5,1.5,1.5,1.5,1.5,1.5,1.5,1.5,1.5,1.5,1.5,1.5,1.5,1.5,1.5,1.5,1.5,1.5,1.5,1.5 -dynpft single_point_dynpft_files/landuse_timeseries_smallvilleIA_hist_simyr1850-1855.txt

It fails in harvest with...

 sum over domain of cft           77   1.50000000000000     
 sum over domain of cft           78   1.50000000000000     
 
 fsurdat is blank: skipping writing surface dataset
 creating dynamic land use dataset
 SKIP: PFT_LULCC                
 SKIP: CFT_LULCC                
 (OPNFIL): Successfully opened file 
 single_point_dynpft_files/landuse_timeseries_smallvilleIA_hist_simyr1850-1855.t
 xt on unit=           98
forrtl: severe (24): end-of-file during read, unit -5, file Internal List-Directed Read
Image              PC                Routine            Line        Source             
mksurfdata_map     00000000004A3394  Unknown               Unknown  Unknown
mksurfdata_map     00000000004BF39F  Unknown               Unknown  Unknown
mksurfdata_map     00000000004BDE2E  Unknown               Unknown  Unknown
mksurfdata_map     0000000000430A5C  mkharvestmod_mp_m        1080  mkharvestMod.F90
mksurfdata_map     000000000046B182  MAIN__                   1113  mksurfdat.F90
mksurfdata_map     000000000040975E  Unknown               Unknown  Unknown
libc.so.6          0000003DD441ED5D  Unknown               Unknown  Unknown
mksurfdata_map     0000000000409669  Unknown               Unknown  Unknown

this is probably a fairly simple problem as harvest should be set to zero for the smallville case.</thetext>
  </long_desc><long_desc isprivate="0" >
    <commentid>7963</commentid>
    <comment_count>1</comment_count>
    <who name="Erik Kluzek">erik</who>
    <bug_when>2017-04-30 17:20:09 -0600</bug_when>
    <thetext>The problem is that now there are more harvest variables and some of them are 2D. So this part of the code...

  read(substring,*) oride_harv(1:numharv-1)
  call shr_string_betweenTags( string, graz_start, graz_end, substring, rc )
  if ( rc /= 0 )then
     write(6,*) subname//&apos;Trouble finding grazing start end tags&apos;
     call abort()
  end if
  read(substring,*) oride_harv(numharv)
  if ( harvest_fieldnames(numharv) /= &apos;GRAZING&apos; )then
     write(6,*) subname, &apos; grazing is NOT last field as was expected&apos;
     call abort()
  end if

Doesn&apos;t work for the new situation where numharv = 9, and it&apos;s trying to read this..

single_point_dynpft_files/landuse_timeseries_smallvilleIA_hist_simyr1850-1855.txt

&lt;pft_f&gt;100&lt;/pft_f&gt;&lt;pft_i&gt;13&lt;/pft_i&gt;&lt;harv&gt;0,0,0,0,0&lt;/harv&gt;&lt;graz&gt;0&lt;/graz&gt;

The new types added are: FERTNITRO_CFT, UNREPRESENTED_PFT_LULCC, and UNREPRESENTED_CFT_LULCC.

We could assume they were all zero, or have each of them in a separate tag for the full PFT or CFT array as appropriate for each variable. And grazing needs to not be the last one expected as the code is doing now. This might need to be on it&apos;s own line as well.</thetext>
  </long_desc><long_desc isprivate="0" >
    <commentid>8388</commentid>
    <comment_count>2</comment_count>
    <who name="Bill Sacks">sacks</who>
    <bug_when>2017-12-15 13:27:28 -0700</bug_when>
    <thetext>This bug also causes problems for the smallville surface datasets. I have generated new smallville surface datasets for use in my branch where we always use glc_nec=10; I have reproduced this problem from the trunk (clm4_5_18_r268): If you create a smallville surface dataset from the new code, this test dies:

ERS_Lm20_Mmpi-serial.1x1_smallvilleIA.I2000Clm50BgcCropGs.yellowstone_pgi.clm-monthly

with

 nstep =      20638   TS =   291.686611321149996
 nbalance warning           12   1.4411518807585587E+017
   1.0416666267607459E+033
 inputs,ffix,nfix,ndep =    9.0350776681062120E-006    0.000000000000000
   7.1360665356088945E-005
 outputs,lch,roff,dnit =    7.1251042104887423E-004   5.0115995744049076E-004
   1.8369184307236034E-006
 nbalance warning           13   1.4411518807585587E+017
   1.0416666267607459E+033
 inputs,ffix,nfix,ndep =    8.1483508116845273E-006    0.000000000000000
   7.1360665356088945E-005
 outputs,lch,roff,dnit =    9.4723224351003603E-005   2.3798922889612187E-004
   5.3013520824923123E-007
 column nbalance error    =    1.4411518807585587E+017           13
 Latdeg,Londeg            =     40.68780000000000
    267.0228000000000
 begnb                    =     1924.662070527338
 endnb                    =    1.0416666267607459E+033
 delta store              =    1.0416666267607459E+033
 input mass               =    1.0416666267607461E+033
 output mass              =    4.6651752730440522E-004
 net flux                 =    1.0416666267607461E+033
 inputs,ffix,nfix,ndep    =    8.1483508116845273E-006
    0.000000000000000        7.1360665356088945E-005
 outputs,ffix,nfix,ndep   =    9.4723224351003603E-005
   2.3798922889612187E-004   5.3013520824923123E-007
 ENDRUN:
 ERROR in /glade2/scratch2/sacks/cesm_code/clm4_5_18_r268/components/clm/src/biogeochem/CNBalanceCheckMod.F90 at line 351

It looks like the problem is that UNREPRESENTED_PFT_LULCC and UNREPRESENTED_CFT_LULCC are 1e36 in the file.

This test isn&apos;t very important (and I realized it needs to be reworked to test what it says it&apos;s testing), so I&apos;m going to let it fail for now.

Other smallville tests are okay right now, because they still point to the old landuse_timeseries file (despite pointing to a new fsurdat): the problem with this one is that there is no landuse_timeseries file so these messed up fields on the surface dataset cause problems.</thetext>
  </long_desc>
      
      

    </bug>
    <bug>
          <bug_id>2410</bug_id>
          
          <creation_ts>2017-01-19 10:21:56 -0700</creation_ts>
          <short_desc>When use_dynroots are on, and interpolating from IC if can&apos;t find a nearest neighbor, use PFT==1 for rootfr</short_desc>
          <delta_ts>2017-01-19 13:18:57 -0700</delta_ts>
          <reporter_accessible>1</reporter_accessible>
          <cclist_accessible>1</cclist_accessible>
          <classification_id>1</classification_id>
          <classification>Unclassified</classification>
          <product>CCSM/CESM CLM</product>
          <component>CLM 5.0</component>
          <version>CESM2.0.x Development</version>
          <rep_platform>All</rep_platform>
          <op_sys>All</op_sys>
          <bug_status>ASSIGNED</bug_status>
          <resolution></resolution>
          
          
          <bug_file_loc></bug_file_loc>
          <status_whiteboard></status_whiteboard>
          <keywords></keywords>
          <priority>P3</priority>
          <bug_severity>normal</bug_severity>
          <target_milestone>CLM5</target_milestone>
          
          <blocked>2405</blocked>
          <everconfirmed>1</everconfirmed>
          <reporter name="Erik Kluzek">erik</reporter>
          <assigned_to name="Erik Kluzek">erik</assigned_to>
          <cc>dlawren</cc>
    
    <cc>oleson</cc>
    
    <cc>rfisher</cc>
    
    <cc>sacks</cc>
          
          <cf_fixedinversion></cf_fixedinversion>

      

      

      

          <comment_sort_order>oldest_to_newest</comment_sort_order>  
          <long_desc isprivate="0" >
    <commentid>7817</commentid>
    <comment_count>0</comment_count>
    <who name="Erik Kluzek">erik</who>
    <bug_when>2017-01-19 10:21:56 -0700</bug_when>
    <thetext>When use_dynroots==.true. and interpolation from initial conditions is being done, instead of copying rootfr from nearest baresoil as is done for everything else when init_interp_fill_missing_with_natveg==.true. copy from PFT==1.</thetext>
  </long_desc><long_desc isprivate="0" >
    <commentid>7818</commentid>
    <comment_count>1</comment_count>
    <who name="Erik Kluzek">erik</who>
    <bug_when>2017-01-19 10:27:39 -0700</bug_when>
    <thetext>In order to do this an additional optional flag needs to be sent to restartvar

ifmissingfrompft=1

like so

         call restartvar(ncid=ncid, flag=flag, varname=&apos;rootfr&apos;, xtype=ncd_double,  &amp;
              dim1name=&apos;pft&apos;, dim2name=&apos;levgrnd&apos;, switchdim=.true., &amp;
              long_name=&apos;root fraction&apos;, units=&apos;&apos;, 
ifmissingfrompft=1, &amp;
              interpinic_flag=&apos;interp&apos;, readvar=readvar, data=this%rootfr_patch)


by default it would imply &quot;0&quot; bare-soil.

Logic inside of restartvar then needs to be changed such that it doesn&apos;t just check for explicitly baresoil, but from the given PFT index. The name of is_baresoil should also change to something like is_givenpft where again the default would be 0.</thetext>
  </long_desc><long_desc isprivate="0" >
    <commentid>7820</commentid>
    <comment_count>2</comment_count>
    <who name="Erik Kluzek">erik</who>
    <bug_when>2017-01-19 10:35:33 -0700</bug_when>
    <thetext>Bug 2405 depends on the solution presented here.</thetext>
  </long_desc><long_desc isprivate="0" >
    <commentid>7824</commentid>
    <comment_count>3</comment_count>
    <who name="Bill Sacks">sacks</who>
    <bug_when>2017-01-19 13:18:57 -0700</bug_when>
    <thetext>I think this should be closed, since it was based on a misunderstanding (replaced by bug 2412).

Also: I don&apos;t think this idea will work: you can&apos;t use different &quot;template&quot; patches for different variables with the way init_interp works - and even if you could, I don&apos;t think that&apos;s a good idea, because you&apos;d end up with some inconsistent, Frankenstein state.</thetext>
  </long_desc>
      
      

    </bug>
    <bug>
          <bug_id>2411</bug_id>
          
          <creation_ts>2017-01-19 10:29:36 -0700</creation_ts>
          <short_desc>Carbon root profiles aren&apos;t modified with dynamic roots</short_desc>
          <delta_ts>2017-01-19 10:29:36 -0700</delta_ts>
          <reporter_accessible>1</reporter_accessible>
          <cclist_accessible>1</cclist_accessible>
          <classification_id>1</classification_id>
          <classification>Unclassified</classification>
          <product>CCSM/CESM CLM</product>
          <component>CLM 5.0</component>
          <version>CESM2.0.x Development</version>
          <rep_platform>All</rep_platform>
          <op_sys>All</op_sys>
          <bug_status>ASSIGNED</bug_status>
          <resolution></resolution>
          
          
          <bug_file_loc></bug_file_loc>
          <status_whiteboard></status_whiteboard>
          <keywords></keywords>
          <priority>P3</priority>
          <bug_severity>normal</bug_severity>
          <target_milestone>CLM5</target_milestone>
          
          
          <everconfirmed>1</everconfirmed>
          <reporter name="Erik Kluzek">erik</reporter>
          <assigned_to name="Erik Kluzek">erik</assigned_to>
          <cc>dlawren</cc>
    
    <cc>dll</cc>
    
    <cc>oleson</cc>
    
    <cc>rfisher</cc>
          
          <cf_fixedinversion></cf_fixedinversion>

      

      

      

          <comment_sort_order>oldest_to_newest</comment_sort_order>  
          <long_desc isprivate="0" >
    <commentid>7819</commentid>
    <comment_count>0</comment_count>
    <who name="Erik Kluzek">erik</who>
    <bug_when>2017-01-19 10:29:36 -0700</bug_when>
    <thetext>Currently carbon root profiles are unmodified when use_dynroots=.true. as it only varies rootfr and not crootfr.</thetext>
  </long_desc>
      
      

    </bug>
    <bug>
          <bug_id>2414</bug_id>
          
          <creation_ts>2017-01-21 19:12:08 -0700</creation_ts>
          <short_desc>LATBASET is always output to history even if not used and even though it&apos;s a constant</short_desc>
          <delta_ts>2017-01-21 19:12:08 -0700</delta_ts>
          <reporter_accessible>1</reporter_accessible>
          <cclist_accessible>1</cclist_accessible>
          <classification_id>1</classification_id>
          <classification>Unclassified</classification>
          <product>CCSM/CESM CLM</product>
          <component>CLM 5.0</component>
          <version>CESM2.0.x Development</version>
          <rep_platform>All</rep_platform>
          <op_sys>All</op_sys>
          <bug_status>ASSIGNED</bug_status>
          <resolution></resolution>
          
          
          <bug_file_loc></bug_file_loc>
          <status_whiteboard></status_whiteboard>
          <keywords></keywords>
          <priority>P3</priority>
          <bug_severity>normal</bug_severity>
          <target_milestone>CLM5</target_milestone>
          
          
          <everconfirmed>1</everconfirmed>
          <reporter name="Erik Kluzek">erik</reporter>
          <assigned_to name="Erik Kluzek">erik</assigned_to>
          <cc>rfisher</cc>
          
          <cf_fixedinversion></cf_fixedinversion>

      

      

      

          <comment_sort_order>oldest_to_newest</comment_sort_order>  
          <long_desc isprivate="0" >
    <commentid>7828</commentid>
    <comment_count>0</comment_count>
    <who name="Erik Kluzek">erik</who>
    <bug_when>2017-01-21 19:12:08 -0700</bug_when>
    <thetext>LATBASET is always output to history files even if it&apos;s not used and even though it is time-constant. It should be added to the time-constant variables and only output if it&apos;s actually being used.</thetext>
  </long_desc>
      
      

    </bug>
    <bug>
          <bug_id>2418</bug_id>
          
          <creation_ts>2017-01-30 17:07:02 -0700</creation_ts>
          <short_desc>Mask is removed from grid definition, so CLM config_compsets.xml needs to change</short_desc>
          <delta_ts>2017-03-02 12:11:46 -0700</delta_ts>
          <reporter_accessible>1</reporter_accessible>
          <cclist_accessible>1</cclist_accessible>
          <classification_id>1</classification_id>
          <classification>Unclassified</classification>
          <product>CCSM/CESM CLM</product>
          <component>clm4.0</component>
          <version>CESM2.0.x Development</version>
          <rep_platform>All</rep_platform>
          <op_sys>All</op_sys>
          <bug_status>ASSIGNED</bug_status>
          <resolution></resolution>
          
          
          <bug_file_loc></bug_file_loc>
          <status_whiteboard></status_whiteboard>
          <keywords></keywords>
          <priority>P3</priority>
          <bug_severity>normal</bug_severity>
          <target_milestone>CLM5</target_milestone>
          
          
          <everconfirmed>1</everconfirmed>
          <reporter name="Erik Kluzek">erik</reporter>
          <assigned_to name="Erik Kluzek">erik</assigned_to>
          <cc>andre</cc>
    
    <cc>mvertens</cc>
    
    <cc>sacks</cc>
          
          <cf_fixedinversion></cf_fixedinversion>

      

      

      

          <comment_sort_order>oldest_to_newest</comment_sort_order>  
          <long_desc isprivate="0" >
    <commentid>7849</commentid>
    <comment_count>0</comment_count>
    <who name="Erik Kluzek">erik</who>
    <bug_when>2017-01-30 17:07:02 -0700</bug_when>
    <thetext>cime5.2.0.alpha.20 has an updated grid definition that removes the &quot;mask&quot; part of the name. Thus the grid to match for in config_compsets.xml for CLM has to change to remove the mask part in the match.

Hence changes like the following where &quot;_m%gx1v6 is removed from the grid match...

Index: config_compsets.xml
===================================================================
--- config_compsets.xml	(revision 83093)
+++ config_compsets.xml	(working copy)
@@ -457,113 +457,113 @@
 
     &lt;entry id=&quot;RUN_TYPE&quot;&gt;
       &lt;values&gt;
-	&lt;value grid=&quot;a%1.9x2.5_l%1.9x2.5_.*_r%r05_m%gx1v6&quot;	compset=&quot;1850_DATM%QIA_CLM40%CN_SICE_SOCN_RTM_SGLC_SWAV&quot;  &gt;hybrid&lt;/value&gt;
-	&lt;value grid=&quot;a%1.9x2.5_l%1.9x2.5_.*_r%r05_m%gx1v6&quot;	compset=&quot;2000_DATM%QIA_CLM40%SP_SICE_SOCN_RTM_SGLC_SWAV&quot;  &gt;hybrid&lt;/value&gt;
-	&lt;value grid=&quot;a%1.9x2.5_l%1.9x2.5_.*_r%r05_m%gx1v6&quot;	compset=&quot;2000_DATM%QIA_CLM40%CN_SICE_SOCN_RTM_SGLC_SWAV&quot;  &gt;hybrid&lt;/value&gt;
.
.
.
-	&lt;value grid=&quot;a%0.9x1.25_l%0.9x1.25_.*_r%r05_m%gx1v6&quot;	compset=&quot;RCP8_DATM%QIA_CLM40%CN_SICE_SOCN_RTM_SGLC_SWAV&quot;  &gt;hybrid&lt;/value&gt;
+	&lt;value grid=&quot;a%1.9x2.5_l%1.9x2.5_.*_r%r05&quot;	compset=&quot;1850_DATM%QIA_CLM40%CN_SICE_SOCN_RTM_SGLC_SWAV&quot;  &gt;hybrid&lt;/value&gt;
+	&lt;value grid=&quot;a%1.9x2.5_l%1.9x2.5_.*_r%r05&quot;	compset=&quot;2000_DATM%QIA_CLM40%SP_SICE_SOCN_RTM_SGLC_SWAV&quot;  &gt;hybrid&lt;/value&gt;
+	&lt;value grid=&quot;a%1.9x2.5_l%1.9x2.5_.*_r%r05&quot;	.
.
.
.
compset=&quot;RCP6_DATM%QIA_CLM40%CN_SICE_SOCN_RTM_SGLC_SWAV&quot;  &gt;hybrid&lt;/value&gt;
+	&lt;value grid=&quot;a%0.9x1.25_l%0.9x1.25_.*_r%r05&quot;	compset=&quot;RCP8_DATM%QIA_CLM40%CN_SICE_SOCN_RTM_SGLC_SWAV&quot;  &gt;hybrid&lt;/value&gt;
       &lt;/values&gt;
     &lt;/entry&gt;</thetext>
  </long_desc><long_desc isprivate="0" >
    <commentid>7850</commentid>
    <comment_count>1</comment_count>
    <who name="Erik Kluzek">erik</who>
    <bug_when>2017-01-31 10:44:46 -0700</bug_when>
    <thetext>OK, turns out this was an unintentional change in cime. It&apos;s assigned issue #1079.

https://github.com/ESMCI/cime/issues/1079</thetext>
  </long_desc><long_desc isprivate="0" >
    <commentid>7880</commentid>
    <comment_count>2</comment_count>
    <who name="Erik Kluzek">erik</who>
    <bug_when>2017-02-28 14:27:50 -0700</bug_when>
    <thetext>Updating to cime5.2.0.alpha23 doesn&apos;t fix this problem even though this was supposed to be fixed in cime. But, the workaround below is harmless. I think the only issue might be when we need this cime feature for CLM5.0.</thetext>
  </long_desc><long_desc isprivate="0" >
    <commentid>7881</commentid>
    <comment_count>3</comment_count>
    <who name="Erik Kluzek">erik</who>
    <bug_when>2017-03-02 12:11:46 -0700</bug_when>
    <thetext>OK, the new grid definition includes other grids, so there is an additional free mask that is needed when you match with mask which is still the last match to make...

So grid matches should be like...

grid=&quot;a%1.9x2.5_l%1.9x2.5_.*_r%r05_.*_m%gx1v6&quot;</thetext>
  </long_desc>
      
      

    </bug>
    <bug>
          <bug_id>2421</bug_id>
          
          <creation_ts>2017-02-10 18:10:02 -0700</creation_ts>
          <short_desc>Have CLM listen to the driver for number of threads rather than OMP_NUM_THREADS</short_desc>
          <delta_ts>2017-02-10 18:20:45 -0700</delta_ts>
          <reporter_accessible>1</reporter_accessible>
          <cclist_accessible>1</cclist_accessible>
          <classification_id>1</classification_id>
          <classification>Unclassified</classification>
          <product>CCSM/CESM CLM</product>
          <component>CLM 5.0</component>
          <version>CESM2.0.x Development</version>
          <rep_platform>All</rep_platform>
          <op_sys>All</op_sys>
          <bug_status>ASSIGNED</bug_status>
          <resolution></resolution>
          
          
          <bug_file_loc></bug_file_loc>
          <status_whiteboard></status_whiteboard>
          <keywords></keywords>
          <priority>P3</priority>
          <bug_severity>normal</bug_severity>
          <target_milestone>CLM5</target_milestone>
          
          
          <everconfirmed>1</everconfirmed>
          <reporter name="Erik Kluzek">erik</reporter>
          <assigned_to name="Erik Kluzek">erik</assigned_to>
          <cc>dlawren</cc>
    
    <cc>mvertens</cc>
    
    <cc>rfisher</cc>
          
          <cf_fixedinversion></cf_fixedinversion>

      

      

      

          <comment_sort_order>oldest_to_newest</comment_sort_order>  
          <long_desc isprivate="0" >
    <commentid>7857</commentid>
    <comment_count>0</comment_count>
    <who name="Erik Kluzek">erik</who>
    <bug_when>2017-02-10 18:10:02 -0700</bug_when>
    <thetext>This is CLM&apos;s part of Issue 864 for cime, where the components don&apos;t listen to what the driver sets the number of threads for them -- but use the env variable OMP_NUM_THREADS

https://github.com/ESMCI/cime/issues/864

This can be a problem if another component is threaded, and you don&apos;t want CLM to be. It&apos;ll end up being threaded anyway.</thetext>
  </long_desc><long_desc isprivate="0" >
    <commentid>7858</commentid>
    <comment_count>1</comment_count>
    <who name="Erik Kluzek">erik</who>
    <bug_when>2017-02-10 18:20:45 -0700</bug_when>
    <thetext>This is a problem both in controlMod and decompMod. The seq_comm_getnthreads interface to seq_comm_mod needs to be queried in lnd_comp_mct and the result saved in CLM.</thetext>
  </long_desc>
      
      

    </bug>
    <bug>
          <bug_id>2439</bug_id>
          
          <creation_ts>2017-04-05 14:01:12 -0600</creation_ts>
          <short_desc>BalanceCheck: Calls get_proc_bounds from threaded region</short_desc>
          <delta_ts>2017-05-02 13:45:04 -0600</delta_ts>
          <reporter_accessible>1</reporter_accessible>
          <cclist_accessible>1</cclist_accessible>
          <classification_id>1</classification_id>
          <classification>Unclassified</classification>
          <product>CCSM/CESM CLM</product>
          <component>CLM 5.0</component>
          <version>unspecified</version>
          <rep_platform>All</rep_platform>
          <op_sys>All</op_sys>
          <bug_status>ASSIGNED</bug_status>
          <resolution></resolution>
          
          
          <bug_file_loc></bug_file_loc>
          <status_whiteboard></status_whiteboard>
          <keywords></keywords>
          <priority>P3</priority>
          <bug_severity>normal</bug_severity>
          <target_milestone>CLM5</target_milestone>
          <dependson>2027</dependson>
    
    <dependson>2310</dependson>
    
    <dependson>2384</dependson>
          
          <everconfirmed>1</everconfirmed>
          <reporter name="Gautam Bisht">gbisht</reporter>
          <assigned_to name="Erik Kluzek">erik</assigned_to>
          <cc>rfisher</cc>
          
          <cf_fixedinversion></cf_fixedinversion>

      

      

      

          <comment_sort_order>oldest_to_newest</comment_sort_order>  
          <long_desc isprivate="0" >
    <commentid>7918</commentid>
    <comment_count>0</comment_count>
    <who name="Gautam Bisht">gbisht</who>
    <bug_when>2017-04-05 14:01:12 -0600</bug_when>
    <thetext>The bug was discovered by Azamat Mametjanov (azamat@mcs.anl.gov) with ACME, but it is also applicable to CLM. BalanceCheck() is called by each thread. When a balance check is violated, the thread attempts to determine the global index and if CLM had more than 1 thread, the code will crash. Below is the call sequence:

BalanceCheck()
 - GetGlobalIndex()
   - call get_proc_bounds()</thetext>
  </long_desc><long_desc isprivate="0" >
    <commentid>7973</commentid>
    <comment_count>1</comment_count>
    <who name="Erik Kluzek">erik</who>
    <bug_when>2017-05-02 13:45:04 -0600</bug_when>
    <thetext>Note, we have several other bugs recognized with this problem. I added them to the depends on above.</thetext>
  </long_desc>
      
      

    </bug>
    <bug>
          <bug_id>2442</bug_id>
          
          <creation_ts>2017-04-12 10:57:58 -0600</creation_ts>
          <short_desc>CLM deaths in restFile_enddef on cheyenne in some cases due to overflow of float to integer on restart</short_desc>
          <delta_ts>2017-07-12 19:29:50 -0600</delta_ts>
          <reporter_accessible>1</reporter_accessible>
          <cclist_accessible>1</cclist_accessible>
          <classification_id>1</classification_id>
          <classification>Unclassified</classification>
          <product>CCSM/CESM CLM</product>
          <component>CLM 5.0</component>
          <version>CESM2.0.x Development</version>
          <rep_platform>All</rep_platform>
          <op_sys>All</op_sys>
          <bug_status>ASSIGNED</bug_status>
          <resolution></resolution>
          
          
          <bug_file_loc></bug_file_loc>
          <status_whiteboard></status_whiteboard>
          <keywords></keywords>
          <priority>P3</priority>
          <bug_severity>major</bug_severity>
          <target_milestone>CLM5</target_milestone>
          
          <blocked>2445</blocked>
          <everconfirmed>1</everconfirmed>
          <reporter name="Erik Kluzek">erik</reporter>
          <assigned_to name="Erik Kluzek">erik</assigned_to>
          <cc>andre</cc>
    
    <cc>cacraig</cc>
    
    <cc>eaton</cc>
    
    <cc>fischer</cc>
    
    <cc>jedwards</cc>
    
    <cc>mvertens</cc>
    
    <cc>rfisher</cc>
    
    <cc>sacks</cc>
          
          <cf_fixedinversion></cf_fixedinversion>

      

      

      

          <comment_sort_order>oldest_to_newest</comment_sort_order>  
          <long_desc isprivate="0" >
    <commentid>7922</commentid>
    <comment_count>0</comment_count>
    <who name="Erik Kluzek">erik</who>
    <bug_when>2017-04-12 10:57:58 -0600</bug_when>
    <thetext>The following test fails on cheyenne due to overflow in conversion to a 4-byte integer.

ERS_D_Ld5.f09_g16.ICLM45ED.cheyenne_intel.clm-edTest

The traceback is...

1: RTM river discharge into ocean: ICE
1: pionfput_mod.F90         128           1           4         255           1
1: m3/s
1: pionfput_mod.F90         128           1           4           1           1 A
1: pio_support::pio_die:: myrank=          -1 : ERROR: nf_mod.F90:        1508 :
1: Overflow when type cast to 4-byte integer.
73: pio_support::pio_die:: myrank=          -1 : ERROR: nf_mod.F90:        1508 :
73: Overflow when type cast to 4-byte integer.
37: pio_support::pio_die:: myrank=          -1 : ERROR: nf_mod.F90:        1508 :
37: Overflow when type cast to 4-byte integer.
109: pio_support::pio_die:: myrank=          -1 : ERROR: nf_mod.F90:        1508 :
109: Overflow when type cast to 4-byte integer.
37:Image              PC                Routine            Line        Source
37:cesm.exe           0000000003A595ED  Unknown               Unknown  Unknown
37:cesm.exe           0000000003498576  pio_support_mp_pi         120  pio_support.F90
37:cesm.exe           0000000003496920  pio_utils_mp_chec          59  pio_utils.F90
37:cesm.exe           0000000003465CDD  nf_mod_mp_pio_end        1508  nf_mod.F90
37:cesm.exe           0000000000B9E118  ncdio_pio_mp_ncd_         386  ncdio_pio.F90.in
37:cesm.exe           0000000000C28127  restfilemod_mp_re         731  restFileMod.F90
37:cesm.exe           0000000000C20C30  restfilemod_mp_re         109  restFileMod.F90
37:cesm.exe           00000000008B18E2  clm_driver_mp_clm        1197  clm_driver.F90</thetext>
  </long_desc><long_desc isprivate="0" >
    <commentid>7931</commentid>
    <comment_count>1</comment_count>
    <who name="Ben Andre">andre</who>
    <bug_when>2017-04-14 11:52:42 -0600</bug_when>
    <thetext>We discussed this on the fates SW call, and the feeling was that the restart interface has change so much that it&apos;s not worth spending a lot of time on. If a quick look at this points to a an issue with fates, then please mark as expected fail and cheyenne will be tested and fixed with the upcoming fates reintegration.</thetext>
  </long_desc><long_desc isprivate="0" >
    <commentid>7936</commentid>
    <comment_count>2</comment_count>
    <who name="Erik Kluzek">erik</who>
    <bug_when>2017-04-18 17:46:51 -0600</bug_when>
    <thetext>In the DDT debugging session I learned more about the problem here. The error happens on the PIO end definition call. I think what the problem is that the dimension of some variables exceed 32-byte integers (multiplying the dimensions together). numCohorts for this case is about 33 million. So multiplying by a thousand you exceed a signed 4-byte integer. It looks like the open statements are supposed to be opening with large file support 64BIT_OFFSET, so this shouldn&apos;t be a limitation, and yet it is.

The call it dies in is restFile_enddef in restFile_write...

    call subgridRestWrite(bounds, ncid, flag=&apos;define&apos; )

    call accumulRest( ncid, flag=&apos;define&apos; )

    call clm_instRest(bounds, ncid, flag=&apos;define&apos;)

    if (present(rdate)) then
       call hist_restart_ncd (bounds, ncid, flag=&apos;define&apos;, rdate=rdate )
    end if

    call restFile_enddef( ncid )

I tried building everything with 8 byte integers with &quot;-i8&quot; to the compiler and that failed in trying to resolve overloaded functions based on the data types.</thetext>
  </long_desc><long_desc isprivate="0" >
    <commentid>7938</commentid>
    <comment_count>3</comment_count>
    <who name="Erik Kluzek">erik</who>
    <bug_when>2017-04-19 00:59:30 -0600</bug_when>
    <thetext>Jim suggested I try opening up 64BIT_DATA rather than 64BIT_OFFSET. So I tried that and it fails the same way.

Index: ../../../components/clm/src/main/ncdio_pio.F90.in
===================================================================
--- ../../../components/clm/src/main/ncdio_pio.F90.in	(revision 84459)
+++ ../../../components/clm/src/main/ncdio_pio.F90.in	(working copy)
@@ -24,7 +24,7 @@
   use perf_mod       , only : t_startf, t_stopf
   use fileutils      , only : getavu, relavu
   use mct_mod        , only : mct_gsMap, mct_gsMap_lsize, mct_gsMap_gsize, mct_gsMap_orderedPoints
-  use pio            , only : file_desc_t, io_desc_t, iosystem_desc_t, pio_64bit_offset
+  use pio            , only : file_desc_t, io_desc_t, iosystem_desc_t, pio_64bit_data
   use pio            , only : pio_bcast_error, pio_char, pio_clobber, pio_closefile, pio_createfile, pio_def_dim
   use pio            , only : pio_def_var, pio_double, pio_enddef, pio_get_att, pio_get_var, pio_global, pio_initdecomp
   use pio            , only : pio_inq_att, pio_inq_dimid, pio_inq_dimlen, pio_inq_dimname, pio_inq_vardimid, pio_inq_varid
@@ -259,7 +259,7 @@
        end if
     end if
 
-    ierr = pio_createfile(pio_subsystem, file, my_io_type, fname, ior(PIO_CLOBBER,PIO_64BIT_OFFSET))
+    ierr = pio_createfile(pio_subsystem, file, my_io_type, fname, ior(PIO_CLOBBER,PIO_64BIT_DATA))
 
     if(ierr/= PIO_NOERR) then
        call shr_sys_abort( &apos; ncd_pio_createfile ERROR: Failed to open file to write: &apos;//trim(fname))</thetext>
  </long_desc><long_desc isprivate="0" >
    <commentid>7952</commentid>
    <comment_count>4</comment_count>
    <who name="Ben Andre">andre</who>
    <bug_when>2017-04-25 18:09:18 -0600</bug_when>
    <thetext>TL,DR: A work around for this problem is to change the edTest to use netcdf instead of pnetcdf.

---------

I followed up on Jim and Erik discussion in Comment 3 by setting both PIO_64BIT_OFFSET and PIO_64BIT_DATA, but it didn&apos;t fix the error:

 
  -    ierr = pio_createfile(pio_subsystem, file, my_io_type, fname, ior(PIO_CLOBBER,PIO_64BIT_OFFSET))
  +    ierr = pio_createfile(pio_subsystem, file, my_io_type, fname, &amp;
  +       ior(ior(PIO_CLOBBER,PIO_64BIT_OFFSET),PIO_64BIT_DATA))
 

This case uses pio1 and pnetcdf by default. Replace pnetcdf for netcdf then this will run to completion:


  $ ./xmlquery PIO_TYPENAME
  	PIO_TYPENAME: [&apos;CPL:pnetcdf&apos;, &apos;ATM:netcdf&apos;, &apos;LND:netcdf&apos;, &apos;ICE:pnetcdf&apos;, &apos;OCN:pnetcdf&apos;, &apos;ROF:pnetcdf&apos;, &apos;GLC:pnetcdf&apos;, &apos;WAV:pnetcdf&apos;, &apos;ESP:pnetcdf&apos;]


It looks like yellowstone and cheyenne are using:

* cheyenne - pnetcdf 1.8.0

* yellowstone - pnetcdf 1.6.1

Looking at the release notes for pnetcdf:

https://trac.mcs.anl.gov/projects/parallel-netcdf/wiki/ReleaseNotes-1.7.0

  Other updates:

    * Conform with netCDF on the maximal dimension size for CDF-2 file format to be (2^32 - 4)

According to the netcdf doc

http://www.unidata.ucar.edu/software/netcdf/docs/netcdf_introduction.html

  NetCDF Classic Format
    ...
    For these users, 64-bit offset format is a natural choice. It greatly eases the size restrictions of netCDF classic files (see 64 bit Offset Limitations).

    Files with the 64-bit offsets are identified with a “CDF\002” at the beginning of the file. In this documentation this format is called “64-bit offset format.”

Looking at the hexdump of the file that I think is being written seems to indicate that this is a 64bit file:

    $ hexdump -C ERS_D_Ld5.f09_g16.ICLM45ED.cheyenne_intel.clm-edTest.junk-2442.clm2.rh0.0001-01-04-00000.nc 
    00000000  43 44 46 02 00 00 00 00  00 00 00 0a 00 00 00 1c  |CDF.............|

So I guess I don&apos;t really understand the netcdf file formats, but it seems like a contradiction that pnetcdf is now consistent with netcdf v2 format, but limits the size to 32 bits. Maybe something changed between pnetcdf 1.6 and 1.8 that we need to update the internals of the I/O stack?</thetext>
  </long_desc><long_desc isprivate="0" >
    <commentid>7956</commentid>
    <comment_count>5</comment_count>
    <who name="Erik Kluzek">erik</who>
    <bug_when>2017-04-26 16:06:01 -0600</bug_when>
    <thetext>I talked to Ben about this afternoon. Jim has an idea about what is happening, and something bad in our definitions for ED is causing it to output in NetCDF2 format. This is also due to bad behavior on pnetcdf&apos;s, which is why going to netcdf works.

What I realized in 2445, is that even on yellowstone some of the files are being produced but I can&apos;t read them (a ncdump tells me the file is in a unrecognized format). So this problem affects yellowstone as well as it&apos;s creating files you can&apos;t read. cheyenne is actually being more courteous and stopping rather than creating mystery files that are unreadable. Although CLM is apparently able to read them because restart tests seem to work.</thetext>
  </long_desc><long_desc isprivate="0" >
    <commentid>7957</commentid>
    <comment_count>6</comment_count>
    <who name="Jim Edwards">jedwards</who>
    <bug_when>2017-04-26 16:09:44 -0600</bug_when>
    <thetext>I think that you&apos;ll find that the files are unreadable only in certain versions of ncdump. You may need to load a netcdf mopdule so that you point to a newer version of this tool.</thetext>
  </long_desc><long_desc isprivate="0" >
    <commentid>7958</commentid>
    <comment_count>7</comment_count>
    <who name="Erik Kluzek">erik</who>
    <bug_when>2017-04-26 17:43:26 -0600</bug_when>
    <thetext>(In reply to Jim Edwards from comment #6)
&gt; I think that you&apos;ll find that the files are unreadable only in certain
&gt; versions of ncdump. You may need to load a netcdf mopdule so that you point
&gt; to a newer version of this tool.

OK, I was able to find a version of ncdump that would work. Although only the version 4.4 versions would work, all of the older ones wouldn&apos;t. They give this...

ncdump -h $MYSCR/SMS_D_Ld5.f45_f45.ICLM45ED.yellowstone_intel.clm-edTest.20170424_133019_2sh1t7/run/SMS_D_Ld5.f45_f45.ICLM45ED.yellowstone_intel.clm-edTest.20170424_133019_2sh1t7.clm2.r.0001-01-06-00000.nc
ncdump: /glade/scratch/erik/SMS_D_Ld5.f45_f45.ICLM45ED.yellowstone_intel.clm-edTest.20170424_133019_2sh1t7/run/SMS_D_Ld5.f45_f45.ICLM45ED.yellowstone_intel.clm-edTest.20170424_133019_2sh1t7.clm2.r.0001-01-06-00000.nc: NetCDF: Unknown file format

But, then tools built on top of netcdf -- like ncview -- won&apos;t necessarily work presumably depending on the version of netcdf they were built with.</thetext>
  </long_desc><long_desc isprivate="0" >
    <commentid>7962</commentid>
    <comment_count>8</comment_count>
    <who name="Ben Andre">andre</who>
    <bug_when>2017-04-28 19:18:14 -0600</bug_when>
    <thetext>TL,DR : My recommendation is to remove this test and mark the issue as won&apos;t fix. 

-------

Jim pointed out that the CDF2 format issue I was seeing was because 64bit offset and data are mutually exclusive. I reverted to 64bit data and it is correctly generating a CDF5 format file. So that was a red herring.

I verified that this is a problem with ED specific code by trying a couple of permutations on the test without ED and commenting out the calls to ED restart.

More debugging led me further into the ED restart stack which has been massively refactored in the upcoming fates tag. I ran the failing test on my incoming branch and it passes.

I&apos;m running the full ED/fates test suite on cheyenne this weekend to verify my branch is OK, and I&apos;ll ensure ED/Fates tests work on cheyenne when my tag comes in. My recommendation is to remove this test and mark the issue as won&apos;t fix.</thetext>
  </long_desc><long_desc isprivate="0" >
    <commentid>7972</commentid>
    <comment_count>9</comment_count>
    <who name="Ben Andre">andre</who>
    <bug_when>2017-05-02 11:38:13 -0600</bug_when>
    <thetext>Update: I ran all ed and clm tests over the weekend and the results were as follows:

yellowstone:
  aux_clm :
    pass - ERS_D_Ld5.f09_g16.ICLM45ED.yellowstone_intel.clm-edTest

  ed : 
    pass - ERS_D_Ld5.f09_g16.ICLM45ED.yellowstone_gnu.clm-edTest
    pass - ERS_D_Ld5.f09_g16.ICLM45ED.yellowstone_intel.clm-edTest
    pass - ERS_D_Ld5.f09_g16.ICLM45ED.yellowstone_pgi.clm-edTest
    pass - ERS_D_Ld5.f09_g16.ICLM50FATES.yellowstone_gnu.clm-edTest
    pass - ERS_D_Ld5.f09_g16.ICLM50FATES.yellowstone_intel.clm-edTest
    pass - ERS_D_Ld5.f09_g16.ICLM50FATES.yellowstone_pgi.clm-edTest
    pass - ERS_D_Ld5.f19_g16.ICLM45ED.yellowstone_gnu.clm-edTest
    pass - ERS_D_Ld5.f19_g16.ICLM45ED.yellowstone_intel.clm-edTest
    pass - ERS_D_Ld5.f19_g16.ICLM45ED.yellowstone_pgi.clm-edTest
    pass - ERS_D_Ld5.f19_g16.ICLM50FATES.yellowstone_gnu.clm-edTest
    pass - ERS_D_Ld5.f19_g16.ICLM50FATES.yellowstone_intel.clm-edTest
    pass - ERS_D_Ld5.f19_g16.ICLM50FATES.yellowstone_pgi.clm-edTest

cheyenne:
  aux_clm : 
    pass - ERS_D_Ld5.f09_g16.ICLM45ED.cheyenne_intel.clm-edTest
  ed :
    fail - ERS_D_Ld5.f09_g16.ICLM50FATES.cheyenne_intel.clm-edTest
    fail - ERS_D_Ld5.f19_g16.ICLM50FATES.cheyenne_intel.clm-edTest
    pass - ERS_D_Ld5.f19_g16.ICLM45ED.cheyenne_intel.clm-edTest
    pass - ERS_D_Ld5.f09_g16.ICLM45ED.cheyenne_intel.clm-edTest


So, there&apos;s still a problem on cheyenne with high res, but only with clm5fates, not clm45ed.

Differences between clm45 and clm5 from the same test run:

 hexdump -C ../ERS_D_Ld5.f09_g16.ICLM45ED.cheyenne_intel.clm-edTest.C.04281953-edi/run/ERS_D_Ld5.f09_g16.ICLM45ED.cheyenne_intel.clm-edTest.C.04281953-edi.clm2.r.0001-01-04-00000.nc | head
00000000  43 44 46 02 00 00 00 00  00 00 00 0a 00 00 00 10  |CDF.............|

 hexdump -C ../ERS_D_Ld5.f09_g16.ICLM50FATES.cheyenne_intel.clm-edTest.C.04281953-edi/run/ERS_D_Ld5.f09_g16.ICLM50FATES.cheyenne_intel.clm-edTest.C.04281953-edi.clm2.r.0001-01-04-00000.nc | head
00000000  43 44 46 05 00 00 00 00  00 00 00 00 00 00 00 0a  |CDF.............|

Diff-ing the cases, it looks like with clm45 is using netcdf by default, while clm5 is using pnetcdf by default. Reviewing old fates history to figure out why, we encounter an issue a year ago that resulted in just setting all ED compsets to default to netcdf instead of pnetcdf. So, this is probably still broken for all ED/FATES compsets in the upcoming branch.

I spend a all day yesterday trying to track this down further by isolating the variables that cause the problem. I identified a couple of them, but haven&apos;t figured out yet why they are different.

I&apos;ll try to look at this more, but I think I&apos;m going to need a debug build of the I/O stack to understand what pnetcdf is unhappy with.

I need to do some other cleanup stuff to stay on track with the fates reintegration.</thetext>
  </long_desc><long_desc isprivate="0" >
    <commentid>8055</commentid>
    <comment_count>10</comment_count>
    <who name="Erik Kluzek">erik</who>
    <bug_when>2017-06-02 11:52:20 -0600</bug_when>
    <thetext>Chris is now seeing this same problem in F compsets...

ERP_Ln9.f09_f09.F1850_DONOTUSE.cheyenne_intel.cam-outfrq9s_clm5</thetext>
  </long_desc><long_desc isprivate="0" >
    <commentid>8067</commentid>
    <comment_count>11</comment_count>
    <who name="Chris Fischer">fischer</who>
    <bug_when>2017-06-12 14:39:50 -0600</bug_when>
    <thetext>The only place I&apos;m seeing this error now is in

ERP_Ln9.f09_f09_mg17.FHIST_DEV.cheyenne_intel.cam-outfrq9s_clm5</thetext>
  </long_desc><long_desc isprivate="0" >
    <commentid>8068</commentid>
    <comment_count>12</comment_count>
    <who name="Chris Fischer">fischer</who>
    <bug_when>2017-06-12 14:40:32 -0600</bug_when>
    <thetext>I should also add this is for cesm2_0_alpha06o.</thetext>
  </long_desc><long_desc isprivate="0" >
    <commentid>8069</commentid>
    <comment_count>13</comment_count>
    <who name="Cheryl Craig">cacraig</who>
    <bug_when>2017-06-12 15:40:28 -0600</bug_when>
    <thetext>So did CLM come up with a fix for this bug, or did it just &quot;go away&quot;.  Looking back over this exchange, it&apos;s not sounding like its an easy bug to find and fix.</thetext>
  </long_desc><long_desc isprivate="0" >
    <commentid>8070</commentid>
    <comment_count>14</comment_count>
    <who name="Ben Andre">andre</who>
    <bug_when>2017-06-12 15:49:47 -0600</bug_when>
    <thetext>It went away.

It was originally only occurring when ED/fates was on. My original thought was that ED was doing something wrong with the indexing or data to cause the overflow, but after debugging it for a while and talking with Jim, we started thinking it was another issue where a struct was being incorrectly copied and something was getting corrupted or dropped. At some point when I was merging this stopped being reproducible, so I assumed it was actually a fates problem that was fixed by the fates restart refactor.</thetext>
  </long_desc><long_desc isprivate="0" >
    <commentid>8071</commentid>
    <comment_count>15</comment_count>
    <who name="Jim Edwards">jedwards</who>
    <bug_when>2017-06-12 20:40:23 -0600</bug_when>
    <thetext>It&apos;s there in the F compset, I&apos;ve been able to reproduce with the simpler test
SMS_Ln9.f09_f09_mg17.FHIST_DEV.cheyenne_intel.cam-outfrq9s_clm5

An error in the enddef statement indicates that there was something wrong with an attribute.   
It appears to be located in the call to 
                                                                               
       call soilbiogeochem_nitrogenstate_inst%restart(bounds, ncid, flag=flag)                            
                                                                      
at around lines 527 of file clm_InstMod.F90 commenting out that line causes the enddef to complete.</thetext>
  </long_desc><long_desc isprivate="0" >
    <commentid>8078</commentid>
    <comment_count>16</comment_count>
    <who name="Chris Fischer">fischer</who>
    <bug_when>2017-06-14 14:45:12 -0600</bug_when>
    <thetext>I was able to get FHIST_DEV to run by changing the number of nodes being used from 4 to 10.  This matches the layout being used on yellowstone.</thetext>
  </long_desc><long_desc isprivate="0" >
    <commentid>8079</commentid>
    <comment_count>17</comment_count>
    <who name="Erik Kluzek">erik</who>
    <bug_when>2017-06-14 15:03:40 -0600</bug_when>
    <thetext>(In reply to Chris Fischer from comment #16)
&gt; I was able to get FHIST_DEV to run by changing the number of nodes being
&gt; used from 4 to 10.  This matches the layout being used on yellowstone.

This sounds like we just aren&apos;t giving enough processors for these cases on cheyenne, since memory (mostly) scales with processor count for CLM. So I&apos;m wondering if the FATES case, might run if we ran it with more processors?</thetext>
  </long_desc><long_desc isprivate="0" >
    <commentid>8085</commentid>
    <comment_count>18</comment_count>
    <who name="Chris Fischer">fischer</who>
    <bug_when>2017-06-15 15:49:08 -0600</bug_when>
    <thetext>Brian E. was able to get f09_f09_mg17.FHIST_DEV.cheyenne_intel to fail using
10 nodes with NTASKS=120 and NTHRDS=3.  This is running on 10 nodes.


37: pio_support::pio_die:: myrank=          -1 : ERROR: nf_mod.F90:        1520 : 
37: Overflow when type cast to 4-byte integer.
37:Image              PC                Routine            Line        Source             
37:cesm.exe           000000000321971D  Unknown               Unknown  Unknown
37:cesm.exe           0000000002E96271  pio_support_mp_pi         120  pio_support.F90
37:cesm.exe           0000000002E947CA  pio_utils_mp_chec          60  pio_utils.F90
37:cesm.exe           0000000002E7F00C  nf_mod_mp_pio_end        1520  nf_mod.F90
37:cesm.exe           00000000023FD0EA  restfilemod_mp_re         732  restFileMod.F90
37:cesm.exe           000000000230C3ED  clm_driver_mp_clm        1168  clm_driver.F90
37:cesm.exe           00000000022FA863  lnd_comp_mct_mp_l         444  lnd_comp_mct.F90
37:cesm.exe           000000000043071B  component_mod_mp_         681  component_mod.F90
37:cesm.exe           00000000004195DE  cesm_comp_mod_mp_        2639  cesm_comp_mod.F90
37:cesm.exe           0000000000430436  MAIN__                     68  cesm_driver.F90</thetext>
  </long_desc><long_desc isprivate="0" >
    <commentid>8086</commentid>
    <comment_count>19</comment_count>
    <who name="Erik Kluzek">erik</who>
    <bug_when>2017-06-15 15:54:56 -0600</bug_when>
    <thetext>(In reply to Chris Fischer from comment #18)
&gt; Brian E. was able to get f09_f09_mg17.FHIST_DEV.cheyenne_intel to fail using
&gt; 10 nodes with NTASKS=120 and NTHRDS=3.  This is running on 10 nodes.
&gt; 
&gt; 
&gt; 37: pio_support::pio_die:: myrank=          -1 : ERROR: nf_mod.F90:       
&gt; 1520 : 
&gt; 37: Overflow when type cast to 4-byte integer.
&gt; 37:Image              PC                Routine            Line       
&gt; Source             
.
.
.
&gt; cesm_comp_mod.F90
&gt; 37:cesm.exe           0000000000430436  MAIN__                     68 
&gt; cesm_driver.F90

Chris if this is a size/memory issue using threads would run into it quicker. Can you try with 30 nodes NTASKS=360 and NTHRDS=3? If that works, it might be useful to see if it seems to consistently fail for smaller layouts and work for larger ones. And then see at what point it starts to fail...</thetext>
  </long_desc><long_desc isprivate="0" >
    <commentid>8087</commentid>
    <comment_count>20</comment_count>
    <who name="Chris Fischer">fischer</who>
    <bug_when>2017-06-15 16:19:31 -0600</bug_when>
    <thetext>NTASKS=360 and NTHRDS=3 worked.</thetext>
  </long_desc><long_desc isprivate="0" >
    <commentid>8136</commentid>
    <comment_count>21</comment_count>
    <who name="Bill Sacks">sacks</who>
    <bug_when>2017-07-12 19:25:14 -0600</bug_when>
    <thetext>Renaming this issue to reflect its more general incarnation</thetext>
  </long_desc><long_desc isprivate="0" >
    <commentid>8137</commentid>
    <comment_count>22</comment_count>
    <who name="Bill Sacks">sacks</who>
    <bug_when>2017-07-12 19:29:32 -0600</bug_when>
    <thetext>It sounds like Jim E was on the track of this bug earlier (comment 15). There are only 10 or so variables in the offending routine. Would it make sense to comment them out one by one to see which one is the problem?</thetext>
  </long_desc>
      
      

    </bug>
    <bug>
          <bug_id>2453</bug_id>
          
          <creation_ts>2017-05-05 13:04:12 -0600</creation_ts>
          <short_desc>Memory error with restart variable vcmx25t</short_desc>
          <delta_ts>2017-05-05 13:04:12 -0600</delta_ts>
          <reporter_accessible>1</reporter_accessible>
          <cclist_accessible>1</cclist_accessible>
          <classification_id>1</classification_id>
          <classification>Unclassified</classification>
          <product>CCSM/CESM CLM</product>
          <component>CLM 5.0</component>
          <version>CESM2.0.z Development</version>
          <rep_platform>All</rep_platform>
          <op_sys>All</op_sys>
          <bug_status>ASSIGNED</bug_status>
          <resolution></resolution>
          
          
          <bug_file_loc></bug_file_loc>
          <status_whiteboard></status_whiteboard>
          <keywords></keywords>
          <priority>P3</priority>
          <bug_severity>normal</bug_severity>
          <target_milestone>CLM5</target_milestone>
          
          
          <everconfirmed>1</everconfirmed>
          <reporter name="Erik Kluzek">erik</reporter>
          <assigned_to name="Erik Kluzek">erik</assigned_to>
          <cc>andre</cc>
    
    <cc>dlawren</cc>
    
    <cc>jedwards</cc>
    
    <cc>rfisher</cc>
    
    <cc>sacks</cc>
          
          <cf_fixedinversion></cf_fixedinversion>

      

      

      

          <comment_sort_order>oldest_to_newest</comment_sort_order>  
          <long_desc isprivate="0" >
    <commentid>7980</commentid>
    <comment_count>0</comment_count>
    <who name="Erik Kluzek">erik</who>
    <bug_when>2017-05-05 13:04:12 -0600</bug_when>
    <thetext>clm4_5_15_r236. DDT detects a memory error deep in the PIO stack for this test...

SMS_D_Ld1.f10_f10.I1850CRUCLM50BGCCROP.yellowstone_intel.clm-clm50KSinkMOut.20170505_104938_gzzixi

It comes from this in Photosynthesis Restart read line 759

   call restartvar(ncid=ncid, flag=flag, varname=&apos;vcmx25t&apos;, xtype=ncd_double,  &amp;
         dim1name=&apos;pft&apos;, long_name=&apos;canopy profile of vcmax25&apos;, &amp;
         units=&apos;umol/m2/s&apos;, &amp;
         interpinic_flag=&apos;interp&apos;, readvar=readvar, data=this%luvcmax25top_patch)

The memory error it gives is:

Process 1: 

Memory error detected in /usr/lib64/libmlx4​-rdmav2.so:

mprotect failed

And then

Process 1: 

Process stopped in ​_​_memset​_sse2 from /lib64/libc.so.6 with signal SIGSEGV ​(Segmentation fault)​.

Reason/Origin: invalid permissions for mapped object
Your program will probably be terminated if you continue.
You can use the stack controls to see what the process was doing at the time.

The test itself fails outside the memory error, and it&apos;s unable to run beyond the memory problem. The test that is run in this case is run without DEBUG and hence runs to completion. 

This was brought in at clm4_5_15_r232. I tried with clm4_5_14_r231 and I get a similar error for soilresis_col. So I&apos;m documenting this error and will get back to it later.</thetext>
  </long_desc>
      
      

    </bug>
    <bug>
          <bug_id>2455</bug_id>
          
          <creation_ts>2017-05-09 12:44:28 -0600</creation_ts>
          <short_desc>PGI specific error at initialization</short_desc>
          <delta_ts>2017-05-09 12:44:28 -0600</delta_ts>
          <reporter_accessible>1</reporter_accessible>
          <cclist_accessible>1</cclist_accessible>
          <classification_id>1</classification_id>
          <classification>Unclassified</classification>
          <product>CCSM/CESM CLM</product>
          <component>CLM 5.0</component>
          <version>unspecified</version>
          <rep_platform>All</rep_platform>
          <op_sys>All</op_sys>
          <bug_status>ASSIGNED</bug_status>
          <resolution></resolution>
          
          
          <bug_file_loc></bug_file_loc>
          <status_whiteboard></status_whiteboard>
          <keywords></keywords>
          <priority>P3</priority>
          <bug_severity>normal</bug_severity>
          <target_milestone>CLM5</target_milestone>
          
          
          <everconfirmed>1</everconfirmed>
          <reporter name="Erik Kluzek">erik</reporter>
          <assigned_to name="Erik Kluzek">erik</assigned_to>
          <cc>rfisher</cc>
          
          <cf_fixedinversion></cf_fixedinversion>

      

      

      

          <comment_sort_order>oldest_to_newest</comment_sort_order>  
          <long_desc isprivate="0" >
    <commentid>7985</commentid>
    <comment_count>0</comment_count>
    <who name="Erik Kluzek">erik</who>
    <bug_when>2017-05-09 12:44:28 -0600</bug_when>
    <thetext>Even after fixing bug 2454. PGI i showing problems on hobart with clm4_5_16_r237. It dies at startup with this error...

(   45)  h025.cgd.ucar.edu
(   46)  h025.cgd.ucar.edu
(   47)  h025.cgd.ucar.edu
 ERROR:
 GETFIL: FAILED to get /fs/cgd/csm/inputdata/share/domains/domain.clm/domain.lnd.fv10x15_USGS.110713.nc
 ERROR:


There doesn&apos;t seem to be anything wrong with this file, nor is it clear why this works in clm4_5_15_r236 and fails in this version.</thetext>
  </long_desc>
      
      

    </bug>
    <bug>
          <bug_id>2464</bug_id>
          
          <creation_ts>2017-05-19 12:12:34 -0600</creation_ts>
          <short_desc>allowlakeprod are outputing standard variables instead of the &quot;lake&quot; specific versions...</short_desc>
          <delta_ts>2017-05-20 08:32:00 -0600</delta_ts>
          <reporter_accessible>1</reporter_accessible>
          <cclist_accessible>1</cclist_accessible>
          <classification_id>1</classification_id>
          <classification>Unclassified</classification>
          <product>CCSM/CESM CLM</product>
          <component>CLM 5.0</component>
          <version>unspecified</version>
          <rep_platform>All</rep_platform>
          <op_sys>All</op_sys>
          <bug_status>ASSIGNED</bug_status>
          <resolution></resolution>
          
          
          <bug_file_loc></bug_file_loc>
          <status_whiteboard></status_whiteboard>
          <keywords></keywords>
          <priority>P3</priority>
          <bug_severity>normal</bug_severity>
          <target_milestone>CLM5</target_milestone>
          
          
          <everconfirmed>1</everconfirmed>
          <reporter name="Erik Kluzek">erik</reporter>
          <assigned_to name="Erik Kluzek">erik</assigned_to>
          <cc>cdkoven</cc>
    
    <cc>dlawren</cc>
    
    <cc>rfisher</cc>
    
    <cc>subin</cc>
          
          <cf_fixedinversion></cf_fixedinversion>

      

      

      

          <comment_sort_order>oldest_to_newest</comment_sort_order>  
          <long_desc isprivate="0" >
    <commentid>8035</commentid>
    <comment_count>0</comment_count>
    <who name="Erik Kluzek">erik</who>
    <bug_when>2017-05-19 12:12:34 -0600</bug_when>
    <thetext>When allowlakeprod is on, the lake specific version of variables should be output, and yet it&apos;s outputting the non-lake versions which already are output.

This is in clm4_5_16_r241. I need someone to look at this and check if I&apos;m right about this or not. I noticed this looking at the code for other issues.

[erik@yslogin1 biogeochem]$ svn diff ch4Mod.F90 
Index: ch4Mod.F90
===================================================================
--- ch4Mod.F90	(revision 85170)
+++ ch4Mod.F90	(working copy)
@@ -602,45 +602,45 @@
     end if
 
     if (hist_wrtch4diag .and. allowlakeprod) then
-       this%ch4_prod_depth_sat_col(begc:endc,1:nlevgrnd) = spval
+       this%ch4_prod_depth_lake_col(begc:endc,1:nlevgrnd) = spval
        call hist_addfld2d (fname=&apos;CH4_PROD_DEPTH_LAKE&apos;, units=&apos;mol/m3/s&apos;, type2d=&apos;levgrnd&apos;, &amp;
             avgflag=&apos;A&apos;, long_name=&apos;CH4 production in each soil layer, lake col. only&apos;, &amp;
-            ptr_col=this%ch4_prod_depth_sat_col)
+            ptr_col=this%ch4_prod_depth_lake_col)
     end if
 
     if (hist_wrtch4diag .and. allowlakeprod) then
-       this%conc_ch4_sat_col(begc:endc,1:nlevgrnd) = spval
+       this%conc_ch4_lake_col(begc:endc,1:nlevgrnd) = spval
        call hist_addfld2d (fname=&apos;CONC_CH4_LAKE&apos;, units=&apos;mol/m3&apos;, type2d=&apos;levgrnd&apos;, &amp;
             avgflag=&apos;A&apos;, long_name=&apos;CH4 Concentration each soil layer, lake col. only&apos;, &amp;
-            ptr_col=this%conc_ch4_sat_col)
+            ptr_col=this%conc_ch4_lake_col)
     end if
 
     if (hist_wrtch4diag .and. allowlakeprod) then
-       this%conc_o2_sat_col(begc:endc,1:nlevgrnd) = spval
+       this%conc_o2_lake_col(begc:endc,1:nlevgrnd) = spval
        call hist_addfld2d (fname=&apos;CONC_O2_LAKE&apos;, units=&apos;mol/m3&apos;, type2d=&apos;levgrnd&apos;, &amp;
             avgflag=&apos;A&apos;, long_name=&apos;O2 Concentration each soil layer, lake col. only&apos;, &amp;
-            ptr_col=this%conc_o2_sat_col)
+            ptr_col=this%conc_o2_lake_col)
     end if
 
     if (hist_wrtch4diag .and. allowlakeprod) then
-       this%ch4_surf_diff_sat_col(begc:endc) = spval
+       this%ch4_surf_diff_lake_col(begc:endc) = spval
        call hist_addfld1d (fname=&apos;CH4_SURF_DIFF_LAKE&apos;, units=&apos;mol/m2/s&apos;,  &amp;
             avgflag=&apos;A&apos;, long_name=&apos;diffusive surface CH4 flux, lake col. only (+ to atm)&apos;, &amp;
-            ptr_col=this%ch4_surf_diff_sat_col)
+            ptr_col=this%ch4_surf_diff_lake_col)
     end if
 
     if (hist_wrtch4diag .and. allowlakeprod) then
-       this%ch4_surf_ebul_sat_col(begc:endc) = spval
+       this%ch4_surf_ebul_lake_col(begc:endc) = spval
        call hist_addfld1d (fname=&apos;CH4_SURF_EBUL_LAKE&apos;, units=&apos;mol/m2/s&apos;,  &amp;
             avgflag=&apos;A&apos;, long_name=&apos;ebullition surface CH4 flux, lake col. only (+ to atm)&apos;, &amp;
-            ptr_col=this%ch4_surf_ebul_sat_col)
+            ptr_col=this%ch4_surf_ebul_lake_col)
     end if
 
     if (hist_wrtch4diag .and. allowlakeprod) then
-       this%ch4_oxid_depth_sat_col(begc:endc,1:nlevgrnd) = spval
+       this%ch4_oxid_depth_lake_col(begc:endc,1:nlevgrnd) = spval
        call hist_addfld2d (fname=&apos;CH4_OXID_DEPTH_LAKE&apos;, units=&apos;mol/m2/s&apos;, type2d=&apos;levgrnd&apos;,  &amp;
             avgflag=&apos;A&apos;, long_name=&apos;CH4 oxidation in each soil layer, lake col. only&apos;, &amp;
-            ptr_col=this%ch4_oxid_depth_sat_col)
+            ptr_col=this%ch4_oxid_depth_lake_col)
     end if
 
     if (hist_wrtch4diag) then</thetext>
  </long_desc><long_desc isprivate="0" >
    <commentid>8036</commentid>
    <comment_count>1</comment_count>
    <who name="Erik Kluzek">erik</who>
    <bug_when>2017-05-19 12:41:29 -0600</bug_when>
    <thetext>If this is a legit problem it goes back to the beginning of this work. The changes below also do work.

It also appears that we don&apos;t have any tests for allowlakeprod.</thetext>
  </long_desc><long_desc isprivate="0" >
    <commentid>8037</commentid>
    <comment_count>2</comment_count>
    <who name="Erik Kluzek">erik</who>
    <bug_when>2017-05-19 13:04:14 -0600</bug_when>
    <thetext>Add Zack to the CC list.</thetext>
  </long_desc><long_desc isprivate="0" >
    <commentid>8038</commentid>
    <comment_count>3</comment_count>
    <who name="David Lawrence">dlawren</who>
    <bug_when>2017-05-20 08:32:00 -0600</bug_when>
    <thetext>Zack is no longer working in the field so is not likely to comment.  We do not and have not used the lake production code so if this is a bug, it hasn&apos;t affected anything.  We have no current plans to use it, either, though if the fix is easy, we should go ahead and do it.</thetext>
  </long_desc>
      
      

    </bug>
    <bug>
          <bug_id>2467</bug_id>
          
          <creation_ts>2017-06-01 12:01:20 -0600</creation_ts>
          <short_desc>Case on non-year boundary dies with error about ignoring ic_date for a crop case, even though for a branch or hybrid case</short_desc>
          <delta_ts>2017-06-12 14:50:28 -0600</delta_ts>
          <reporter_accessible>1</reporter_accessible>
          <cclist_accessible>1</cclist_accessible>
          <classification_id>1</classification_id>
          <classification>Unclassified</classification>
          <product>CCSM/CESM CLM</product>
          <component>CLM 5.0</component>
          <version>unspecified</version>
          <rep_platform>All</rep_platform>
          <op_sys>All</op_sys>
          <bug_status>ASSIGNED</bug_status>
          <resolution></resolution>
          
          
          <bug_file_loc></bug_file_loc>
          <status_whiteboard></status_whiteboard>
          <keywords></keywords>
          <priority>P1</priority>
          <bug_severity>major</bug_severity>
          <target_milestone>CLM5</target_milestone>
          
          
          <everconfirmed>1</everconfirmed>
          <reporter name="Erik Kluzek">erik</reporter>
          <assigned_to name="Erik Kluzek">erik</assigned_to>
          <cc>klindsay</cc>
    
    <cc>rfisher</cc>
          
          <cf_fixedinversion></cf_fixedinversion>

      

      

      

          <comment_sort_order>oldest_to_newest</comment_sort_order>  
          <long_desc isprivate="0" >
    <commentid>8050</commentid>
    <comment_count>0</comment_count>
    <who name="Erik Kluzek">erik</who>
    <bug_when>2017-06-01 12:01:20 -0600</bug_when>
    <thetext>Keith Lindsay ran into a problem where CLM&apos;s build-namelist died with an error about ignoring the IC-date for a crop case even though it&apos;s a branch case. The error condition applies when trying to find an finidat file not for a branch or hybrid case, or a case where the finidat file is provided.

Here&apos;s the email communication from Keith, and my reply
Hi,

I&apos;m trying to do a coupled run that is a branch off of another run of mine. The non-ocean codebase is the same as Cecile&apos;s B1850 149 case.

CASEROOT=/glade/p/work/klindsay/cesm20_cases/B1850/b.e20.B1850.f09_g17.pi_control.all.149.marbl_dev_klindsay_n60.C

user_nl_clm is the same as Cecile&apos;s, except that I&apos;ve commented out the setting of finidat, as I want to use the IC from the run that I&apos;m branching from.

When I run preview_namelists, I get the following error from CLM build-namelist

err=ERROR : CLM build-namelist::CLMBuildNamelist::setup_logic_initial_conditions() : using ignore_ic_date is incompatable with crop!

The run that I&apos;m branching off of is also a branch, and that worked fine. The only difference between the runs is RUN_REFDATE.
In the case that works, RUN_REFDATE is on a year boundary, and in this case, RUN_REFDATE is not, it is 0031-01-03.
I&apos;m not sure why this would cause a problem, if it is the problem.

I&apos;m inferring that I&apos;m doing something non-supported, but I don&apos;t what that is.
I&apos;m not knowingly setting ignore_ic_date, I don&apos;t see it anywhere in $CASEROOT.

I could use some help here.

Thanks, Keith

Erik Kluzek &lt;erik@ucar.edu&gt;
11:55 AM (1 minute ago)

to Keith, Keith, David 

Categorize this message as:Personal 
Never show this again
Keith

Since, you are starting up from a reference case (so finding an finidat file doesn&apos;t matter) this is CLM build-namelist aborting on something it really shouldn&apos;t. I&apos;m going to create a bug report on this issue.

But, for your immediate problem you can either remove the setting of &quot;-ignore_ic_date&quot; in CLM buildnml...

/glade/p/cgd/oce/people/klindsay/svn_co/cesm2_0_alpha06h_finalclm50paramsfile_n26_clm4_5_15_r233_mosart1_0_23_marbl_dev_klindsay_n60/components/clm/cime_config/buildnml

where it sets the variable &quot;ignore&quot; to either &quot;-ignore_ic_year&quot; or &quot;-ignore_ic_date&quot;.

Or you could remove the abort in 

/glade/p/cgd/oce/people/klindsay/svn_co/cesm2_0_alpha06h_finalclm50paramsfile_n26_clm4_5_15_r233_mosart1_0_23_marbl_dev_klindsay_n60/components/clm/bld/CLMBuildNamelist.pm

by removing or commenting out the line...

fatal_error(&quot;using ignore_ic_date is incompatable with crop!&quot;);</thetext>
  </long_desc><long_desc isprivate="0" >
    <commentid>8051</commentid>
    <comment_count>1</comment_count>
    <who name="Erik Kluzek">erik</who>
    <bug_when>2017-06-01 12:53:27 -0600</bug_when>
    <thetext>Keith points out the following, which indicates a related but slightly different issue:

Thanks for the quick response. The latter work-around has me up and running.

FYI, the former work-around led to the error message:
err=ERROR : CLM build-namelist::CLMBuildNamelist::setup_logic_initial_conditions() : use_init_interp is set BUT finidat is NOT, need to set both
It looks like build-namelist was picking up use_init_interp=.true. from namelist_defaults.
I guess I could have worked around this by explicitly setting use_init_interp=.false. in user_nl_clm.
But I wonder why it should be necessary to make such settings on a branch run.</thetext>
  </long_desc>
      
      

    </bug>
    <bug>
          <bug_id>2469</bug_id>
          
          <creation_ts>2017-06-05 15:50:59 -0600</creation_ts>
          <short_desc>Cleanup restartvar_{DIMS}d_{TYPE} to ONLY be valid for a 1d interface as we already have a restart_2d_{TYPE}_bounds interface for 2D</short_desc>
          <delta_ts>2017-06-05 15:56:45 -0600</delta_ts>
          <reporter_accessible>1</reporter_accessible>
          <cclist_accessible>1</cclist_accessible>
          <classification_id>1</classification_id>
          <classification>Unclassified</classification>
          <product>CCSM/CESM CLM</product>
          <component>CLM 5.0</component>
          <version>unspecified</version>
          <rep_platform>All</rep_platform>
          <op_sys>All</op_sys>
          <bug_status>ASSIGNED</bug_status>
          <resolution></resolution>
          
          
          <bug_file_loc></bug_file_loc>
          <status_whiteboard></status_whiteboard>
          <keywords></keywords>
          <priority>P3</priority>
          <bug_severity>normal</bug_severity>
          <target_milestone>CLM5</target_milestone>
          <dependson>2468</dependson>
          
          <everconfirmed>1</everconfirmed>
          <reporter name="Erik Kluzek">erik</reporter>
          <assigned_to name="Erik Kluzek">erik</assigned_to>
          <cc>andre</cc>
    
    <cc>dlawren</cc>
    
    <cc>mvertens</cc>
    
    <cc>rfisher</cc>
    
    <cc>sacks</cc>
          
          <cf_fixedinversion></cf_fixedinversion>

      

      

      

          <comment_sort_order>oldest_to_newest</comment_sort_order>  
          <long_desc isprivate="0" >
    <commentid>8057</commentid>
    <comment_count>0</comment_count>
    <who name="Erik Kluzek">erik</who>
    <bug_when>2017-06-05 15:50:59 -0600</bug_when>
    <thetext>restUtilMod.F90.in has two interfaces for restartvars, one should really only be used for the 1d interface and the second for the 2d one. The first one is supposed general, but it doesn&apos;t do enough checking to be correct for a 2d case. The only valid options are 1d and 2d anyway, so generalizing the first to work for both isn&apos;t worth it. So the data array should be data(:) and dim2name removed from the first interface and changed to restartvar_1d_{TYPE}. Note, the other thing that distinguishes the two is the optional arguments: lowerb2, and upperb2 are possible for the 2d case, but not the 1d one. And in the 1d case, dim1name is NOT a required argument like it is in the 2d one (along with dim2name).

Bug 2468 came to be because of this problem since switchdim is really required when dimname2name is set.</thetext>
  </long_desc><long_desc isprivate="0" >
    <commentid>8058</commentid>
    <comment_count>1</comment_count>
    <who name="Erik Kluzek">erik</who>
    <bug_when>2017-06-05 15:56:45 -0600</bug_when>
    <thetext>You could also save duplication between the two methods, by having a private subroutine call that both interfaces would call for the part that&apos;s identical between both. The main guts of the two are completely duplicated. It would make the two interfaces clearer if the bulk of the differences between the two just had to do with the 1d versus 2d difference. And that could be accomplished by a private subroutine that both call.</thetext>
  </long_desc>
      
      

    </bug>
    <bug>
          <bug_id>2470</bug_id>
          
          <creation_ts>2017-06-06 15:56:42 -0600</creation_ts>
          <short_desc>CLM is getting the mask from the clm namelist_defaults rather than from top level scripts</short_desc>
          <delta_ts>2017-06-06 15:56:42 -0600</delta_ts>
          <reporter_accessible>1</reporter_accessible>
          <cclist_accessible>1</cclist_accessible>
          <classification_id>1</classification_id>
          <classification>Unclassified</classification>
          <product>CCSM/CESM CLM</product>
          <component>CLM 5.0</component>
          <version>CESM2.0.x Development</version>
          <rep_platform>All</rep_platform>
          <op_sys>All</op_sys>
          <bug_status>ASSIGNED</bug_status>
          <resolution></resolution>
          
          
          <bug_file_loc></bug_file_loc>
          <status_whiteboard></status_whiteboard>
          <keywords></keywords>
          <priority>P3</priority>
          <bug_severity>normal</bug_severity>
          <target_milestone>CLM5</target_milestone>
          
          
          <everconfirmed>1</everconfirmed>
          <reporter name="Erik Kluzek">erik</reporter>
          <assigned_to name="Erik Kluzek">erik</assigned_to>
          <cc>andre</cc>
    
    <cc>dlawren</cc>
    
    <cc>mvertens</cc>
    
    <cc>rfisher</cc>
    
    <cc>sacks</cc>
          
          <cf_fixedinversion></cf_fixedinversion>

      

      

      

          <comment_sort_order>oldest_to_newest</comment_sort_order>  
          <long_desc isprivate="0" >
    <commentid>8060</commentid>
    <comment_count>0</comment_count>
    <who name="Erik Kluzek">erik</who>
    <bug_when>2017-06-06 15:56:42 -0600</bug_when>
    <thetext>This is certainly in clm4_5_16_r243 and goes quite a way back. Quite a while ago CLM had to assume the land ocean mask based on the specific grid. The high level CESM scripts have evolved so that now the env variable MASK_GRID is set which can be used to set the mask for all of the standard global grids. The only thing that CLM uses with the mask is to find the appropriate initial conditions file. Since, we are interpolating for CLM45 and CLM50 the assumed mask doesn&apos;t matter. But, it does matter for CLM40, and when we tried to go from testing g16 masks to g17 CLM thought the mask was g16 and so found g16 finidat files, but they are incompatible when running at a g17 mask.

So to fix this we need to make sure components/clm/cime_config/buildnml sends MASK_GRID to clm build-namelist with the -mask option (for standard global grids). When the MASK_GRID is null it should use the assumed mask (which should only be for single point or regional cases).</thetext>
  </long_desc>
      
      

    </bug>
    <bug>
          <bug_id>2490</bug_id>
          
          <creation_ts>2017-07-10 13:03:13 -0600</creation_ts>
          <short_desc>CNBalanceCheckMod.f90 gives an error on hobart using gnu with openmpi</short_desc>
          <delta_ts>2017-07-10 13:03:13 -0600</delta_ts>
          <reporter_accessible>1</reporter_accessible>
          <cclist_accessible>1</cclist_accessible>
          <classification_id>1</classification_id>
          <classification>Unclassified</classification>
          <product>CCSM/CESM CLM</product>
          <component>CLM 5.0</component>
          <version>CESM2.0.z Development</version>
          <rep_platform>Other</rep_platform>
          <op_sys>Linux</op_sys>
          <bug_status>NEW</bug_status>
          <resolution></resolution>
          
          
          <bug_file_loc></bug_file_loc>
          <status_whiteboard></status_whiteboard>
          <keywords></keywords>
          <priority>P3</priority>
          <bug_severity>minor</bug_severity>
          <target_milestone>CLM5</target_milestone>
          
          
          <everconfirmed>1</everconfirmed>
          <reporter name="Alice Bertini">aliceb</reporter>
          <assigned_to name="Erik Kluzek">erik</assigned_to>
          <cc>rfisher</cc>
          
          <cf_fixedinversion></cf_fixedinversion>

      

      

      

          <comment_sort_order>oldest_to_newest</comment_sort_order>  
          <long_desc isprivate="0" >
    <commentid>8122</commentid>
    <comment_count>0</comment_count>
    <who name="Alice Bertini">aliceb</who>
    <bug_when>2017-07-10 13:03:13 -0600</bug_when>
    <thetext>Test specific:
hobart using compiler/gnu/5.4.0 and mpi/gcc/openmpi-2.0.2-static
test - ERS_Pm.f09_g17.B1850.hobart_gnu.allactive-defaultio
cesm2_0_alpha06n with CLM tag 
https://svn-ccsm-models.cgd.ucar.edu/clm2/trunk_tags/clm4_5_16_r242/components/clm

gives the following cesm.log error in CNBalanceCheckMod.F90 at line 217:

cbalance warning      307135   927330467.36064720        1.1400000000000001E+036
 column cbalance error    =    927330467.36064720           307135
 Latdeg,Londeg=   84.345549738219987        330.00000000000000
 begcb                    =    1.1400000000000001E+036
 endcb                    =    1.1400000000000001E+036
 delta store              =    0.0000000000000000
 --- Inputs ---
 gpp                      =    0.0000000000000000
 --- Outputs ---
 er                       =    0.0000000000000000
 col_fire_closs           =    0.0000000000000000
 col_hrv_xsmrpool_to_atm  =    0.0000000000000000
 wood_harvestc            =    0.0000000000000000
 grainc_to_cropprodc      =    0.0000000000000000
 -1*som_c_leached         =    927330467.36064720

*******

The same test, same tag works fine with compiler/intel/15.0.2.164 andmpi/intel/mvapich2-2.1-qlc. Was also able to successfully run a PFS test and
a regular B1850, f09_g17 9 month case for both compilers and libraries. 

So, I think there&apos;s either a problem with the test or the compiler / mpilib 
configuration for this test.</thetext>
  </long_desc>
      
      

    </bug>
    <bug>
          <bug_id>2497</bug_id>
          
          <creation_ts>2017-07-28 14:27:33 -0600</creation_ts>
          <short_desc>psi_soil_ref obsolete</short_desc>
          <delta_ts>2017-07-28 14:27:33 -0600</delta_ts>
          <reporter_accessible>1</reporter_accessible>
          <cclist_accessible>1</cclist_accessible>
          <classification_id>1</classification_id>
          <classification>Unclassified</classification>
          <product>CCSM/CESM CLM</product>
          <component>CLM 5.0</component>
          <version>unspecified</version>
          <rep_platform>All</rep_platform>
          <op_sys>All</op_sys>
          <bug_status>NEW</bug_status>
          <resolution></resolution>
          
          
          <bug_file_loc></bug_file_loc>
          <status_whiteboard></status_whiteboard>
          <keywords></keywords>
          <priority>P3</priority>
          <bug_severity>minor</bug_severity>
          <target_milestone>CLM5</target_milestone>
          
          
          <everconfirmed>1</everconfirmed>
          <reporter>djk2120</reporter>
          <assigned_to name="Erik Kluzek">erik</assigned_to>
          <cc>rfisher</cc>
          
          <cf_fixedinversion></cf_fixedinversion>

      

      

      

          <comment_sort_order>oldest_to_newest</comment_sort_order>  
          <long_desc isprivate="0" >
    <commentid>8167</commentid>
    <comment_count>0</comment_count>
    <who name="">djk2120</who>
    <bug_when>2017-07-28 14:27:33 -0600</bug_when>
    <thetext>psi_soil_ref, which is on the parameter file and referenced in PhotosynthesisMod.F90, is now obsolete following Sean&apos;s updates to the soil-root conductances in PHS</thetext>
  </long_desc>
      
      

    </bug>
    <bug>
          <bug_id>2500</bug_id>
          
          <creation_ts>2017-08-09 11:37:27 -0600</creation_ts>
          <short_desc>ne30 case fails on hobart_nag due to floating overflow</short_desc>
          <delta_ts>2017-08-23 10:14:35 -0600</delta_ts>
          <reporter_accessible>1</reporter_accessible>
          <cclist_accessible>1</cclist_accessible>
          <classification_id>1</classification_id>
          <classification>Unclassified</classification>
          <product>CCSM/CESM CLM</product>
          <component>CLM 5.0</component>
          <version>CESM2.0.x Development</version>
          <rep_platform>All</rep_platform>
          <op_sys>All</op_sys>
          <bug_status>ASSIGNED</bug_status>
          <resolution></resolution>
          
          
          <bug_file_loc></bug_file_loc>
          <status_whiteboard></status_whiteboard>
          <keywords></keywords>
          <priority>P3</priority>
          <bug_severity>normal</bug_severity>
          <target_milestone>CLM5</target_milestone>
          <dependson>2447</dependson>
          
          <everconfirmed>1</everconfirmed>
          <reporter name="Erik Kluzek">erik</reporter>
          <assigned_to name="Erik Kluzek">erik</assigned_to>
          <cc>andre</cc>
    
    <cc>dlawren</cc>
    
    <cc>fischer</cc>
    
    <cc>mvertens</cc>
    
    <cc>rfisher</cc>
    
    <cc>sacks</cc>
          
          <cf_fixedinversion></cf_fixedinversion>

      

      

      

          <comment_sort_order>oldest_to_newest</comment_sort_order>  
          <long_desc isprivate="0" >
    <commentid>8180</commentid>
    <comment_count>0</comment_count>
    <who name="Erik Kluzek">erik</who>
    <bug_when>2017-08-09 11:37:27 -0600</bug_when>
    <thetext>ERP_D_Ld5.ne30_g16.I1850Clm50BgcCrop.hobart_nag.clm-default fails in clm4_5_16_r253 as follows below. Chris Fischer also had it fail in: cesm2_0_alpha07c. And looking back it fails in cesm2_0_alpha07b, but works in cesm2_0_alpha07a (according to looking at the baselines on hobart, which have history files for 07a, but are missing for 07b and 07c). 07a had clm4_5_16_r242, and 07b jumps from r243 up to clm4_5_16_r249, so most likely this problem starts occurring somewhere between r243 and r249.

I&apos;m flagging bug 2447 -- because maybe this is the same issue?

Also, note we don&apos;t do this test in aux_clm -- but do with CESM alpha or beta testing for some reason? Shouldn&apos;t we also test this in aux_clm?

Here&apos;s the failure from the cesm.log file. Looks like it happens just after initialization.

   Creating variable usurf
   Creating variable uvel
   Creating variable vvel
    Writing to file ERP_D_Ld5.ne30_g16.I1850Clm50BgcCrop.hobart_nag.clm-default.20170809_104356_hxvib8.cism.initial_hist.0001-01-01-00000.nc at time    0.0000000000000000
Runtime Error: *** Arithmetic exception: Floating overflow - aborting

cesm.exe:26853 terminated with signal 6 at PC=7f287d4b85f7 SP=7ffcf514c1e8.  Backtrace:
/lib64/libc.so.6(gsignal+0x37)[0x7f287d4b85f7]
/lib64/libc.so.6(abort+0x148)[0x7f287d4b9ce8]
/usr/local/nag-6.1/lib/NAG_Fortran/libf61rts.so.1(__NAGf90_signal_handler+0xa2)[0x7f287dbe7642]
/lib64/libpthread.so.0(+0xf100)[0x7f287e424100]
/scratch/cluster/erik/ERP_D_Ld5.ne30_g16.I1850Clm50BgcCrop.hobart_nag.clm-default.20170809_104356_hxvib8/bld/cesm.exe[0x141cc7f]
/scratch/cluster/erik/ERP_D_Ld5.ne30_g16.I1850Clm50BgcCrop.hobart_nag.clm-default.20170809_104356_hxvib8/bld/cesm.exe[0x1cc6d63]
/scratch/cluster/erik/ERP_D_Ld5.ne30_g16.I1850Clm50BgcCrop.hobart_nag.clm-default.20170809_104356_hxvib8/bld/cesm.exe[0xdfe84c]
/scratch/cluster/erik/ERP_D_Ld5.ne30_g16.I1850Clm50BgcCrop.hobart_nag.clm-default.20170809_104356_hxvib8/bld/cesm.exe[0x821b11]
/scratch/cluster/erik/ERP_D_Ld5.ne30_g16.I1850Clm50BgcCrop.hobart_nag.clm-default.20170809_104356_hxvib8/bld/cesm.exe[0x7c2f46]
/scratch/cluster/erik/ERP_D_Ld5.ne30_g16.I1850Clm50BgcCrop.hobart_nag.clm-default.20170809</thetext>
  </long_desc><long_desc isprivate="0" >
    <commentid>8189</commentid>
    <comment_count>1</comment_count>
    <who name="Bill Sacks">sacks</who>
    <bug_when>2017-08-23 10:14:35 -0600</bug_when>
    <thetext>From addr2line, I get the following point of failure:

/fs/cgd/data0/erik/clm_trunk/components/clm/src/soilbiogeochem/SoilBiogeochemCompetitionMod.F90:665

which is:

smin_no3_to_plant_vr(c,j) = (smin_no3_vr(c,j)/dt)*((plant_ndemand(c)* &amp;
     nuptake_prof(c,j)-smin_nh4_to_plant_vr(c,j))*compet_plant_no3 / sum_no3_demand_scaled(c,j))</thetext>
  </long_desc>
      
      

    </bug>
    <bug>
          <bug_id>2505</bug_id>
          
          <creation_ts>2017-08-25 16:27:07 -0600</creation_ts>
          <short_desc>Set stream_year_first_urbantv/last for CLM4.5 just for consistency</short_desc>
          <delta_ts>2017-08-25 16:27:07 -0600</delta_ts>
          <reporter_accessible>1</reporter_accessible>
          <cclist_accessible>1</cclist_accessible>
          <classification_id>1</classification_id>
          <classification>Unclassified</classification>
          <product>CCSM/CESM CLM</product>
          <component>CLM 4.5</component>
          <version>unspecified</version>
          <rep_platform>All</rep_platform>
          <op_sys>All</op_sys>
          <bug_status>ASSIGNED</bug_status>
          <resolution></resolution>
          
          
          <bug_file_loc></bug_file_loc>
          <status_whiteboard></status_whiteboard>
          <keywords></keywords>
          <priority>P3</priority>
          <bug_severity>minor</bug_severity>
          <target_milestone>CLM5</target_milestone>
          
          
          <everconfirmed>1</everconfirmed>
          <reporter name="Erik Kluzek">erik</reporter>
          <assigned_to name="Erik Kluzek">erik</assigned_to>
          <cc>dll</cc>
    
    <cc>oleson</cc>
    
    <cc>rfisher</cc>
          
          <cf_fixedinversion></cf_fixedinversion>

      

      

      

          <comment_sort_order>oldest_to_newest</comment_sort_order>  
          <long_desc isprivate="0" >
    <commentid>8191</commentid>
    <comment_count>0</comment_count>
    <who name="Erik Kluzek">erik</who>
    <bug_when>2017-08-25 16:27:07 -0600</bug_when>
    <thetext>Danica and I noticed that stream_year_first_urbantv/stream_year_last_urbantv was being set to 2000 for 1850 spinup cases. It turns out it doesn&apos;t matter for CLM4.5 cases as the file it points to is static, but for consistency we should set it for CLM4.5 and not just CLM5.0 because it looks like the case is setup wrong as it is.

So we should set it for the CLM4.5 cases as well as CLM50 just so it looks correct.</thetext>
  </long_desc>
      
      

    </bug>
    <bug>
          <bug_id>2506</bug_id>
          
          <creation_ts>2017-08-25 18:31:41 -0600</creation_ts>
          <short_desc>ntree used before it&apos;s set in pftconMod.F90</short_desc>
          <delta_ts>2017-08-25 18:31:41 -0600</delta_ts>
          <reporter_accessible>1</reporter_accessible>
          <cclist_accessible>1</cclist_accessible>
          <classification_id>1</classification_id>
          <classification>Unclassified</classification>
          <product>CCSM/CESM CLM</product>
          <component>CLM 4.5</component>
          <version>CESM2.0.x Development</version>
          <rep_platform>All</rep_platform>
          <op_sys>All</op_sys>
          <bug_status>ASSIGNED</bug_status>
          <resolution></resolution>
          
          
          <bug_file_loc></bug_file_loc>
          <status_whiteboard></status_whiteboard>
          <keywords></keywords>
          <priority>P3</priority>
          <bug_severity>normal</bug_severity>
          <target_milestone>CLM5</target_milestone>
          
          
          <everconfirmed>1</everconfirmed>
          <reporter name="Erik Kluzek">erik</reporter>
          <assigned_to name="Erik Kluzek">erik</assigned_to>
          <cc>dlawren</cc>
    
    <cc>mvertens</cc>
    
    <cc>rfisher</cc>
    
    <cc>slevis</cc>
          
          <cf_fixedinversion></cf_fixedinversion>

      

      

      

          <comment_sort_order>oldest_to_newest</comment_sort_order>  
          <long_desc isprivate="0" >
    <commentid>8192</commentid>
    <comment_count>0</comment_count>
    <who name="Erik Kluzek">erik</who>
    <bug_when>2017-08-25 18:31:41 -0600</bug_when>
    <thetext>Sam Levis found this problem. The variable ntree is used before it&apos;s set in pftconMod.F90, which means the variable &quot;tree&quot; will be set incorrectly. It looks like the only use of the variable &quot;tree&quot; is when Dynamic Vegetation is used in CNDVLightMod.F90.

This goes back to the beginning of pftconMod.F90 in some refactoring that went on in clm4_5_1_r097.</thetext>
  </long_desc>
      
      

    </bug>
    <bug>
          <bug_id>2511</bug_id>
          
          <creation_ts>2017-09-18 00:28:32 -0600</creation_ts>
          <short_desc>Overflow with Carbon isotopes...</short_desc>
          <delta_ts>2017-10-05 11:49:56 -0600</delta_ts>
          <reporter_accessible>1</reporter_accessible>
          <cclist_accessible>1</cclist_accessible>
          <classification_id>1</classification_id>
          <classification>Unclassified</classification>
          <product>CCSM/CESM CLM</product>
          <component>CLM 5.0</component>
          <version>CESM2.0.x Development</version>
          <rep_platform>All</rep_platform>
          <op_sys>All</op_sys>
          <bug_status>ASSIGNED</bug_status>
          <resolution></resolution>
          
          
          <bug_file_loc></bug_file_loc>
          <status_whiteboard></status_whiteboard>
          <keywords></keywords>
          <priority>P1</priority>
          <bug_severity>major</bug_severity>
          <target_milestone>CLM5</target_milestone>
          
          
          <everconfirmed>1</everconfirmed>
          <reporter name="Erik Kluzek">erik</reporter>
          <assigned_to name="Erik Kluzek">erik</assigned_to>
          <cc>cdkoven</cc>
    
    <cc>dlawren</cc>
    
    <cc>dll</cc>
    
    <cc>oleson</cc>
    
    <cc>rfisher</cc>
    
    <cc>sacks</cc>
          
          <cf_fixedinversion></cf_fixedinversion>

      

      

      

          <comment_sort_order>oldest_to_newest</comment_sort_order>  
          <long_desc isprivate="0" >
    <commentid>8210</commentid>
    <comment_count>0</comment_count>
    <who name="Erik Kluzek">erik</who>
    <bug_when>2017-09-18 00:28:32 -0600</bug_when>
    <thetext>This occurs about 20 days in with clm4_5_16_r255 with SMS_D_Lm9.f10_f10_musgs.I1850Clm50BgcCrop.cheyenne_intel.clm-ciso_monthly

or with a Hist case as well.

44: Negative conc. in ch4tran. c,j,deficit (mol):        3113           1
44:  2.390122000974219E-003
44: Negative conc. in ch4tran. c,j,deficit (mol):        3126           1
44:  2.186088406244086E-003
7:forrtl: error (72): floating overflow
7:Image              PC                Routine            Line        Source
7:cesm.exe           00000000049EF671  Unknown               Unknown  Unknown
7:cesm.exe           00000000049ED7AB  Unknown               Unknown  Unknown
7:cesm.exe           00000000049A0114  Unknown               Unknown  Unknown
7:cesm.exe           000000000499FF26  Unknown               Unknown  Unknown
7:cesm.exe           0000000004925079  Unknown               Unknown  Unknown
7:cesm.exe           000000000493166C  Unknown               Unknown  Unknown
7:libpthread-2.19.s  00002AAAAFAC1870  Unknown               Unknown  Unknown
7:cesm.exe           0000000003119840  cncisofluxmod_mp_        1594  CNCIsoFluxMod.F90
7:cesm.exe           00000000030A7468  cncisofluxmod_mp_         149  CNCIsoFluxMod.F90
7:cesm.exe           0000000002B9C9FD  cndrivermod_mp_cn         531  CNDriverMod.F90
7:cesm.exe           00000000011604E0  cnvegetationfacad         837  CNVegetationFacade.F90
7:cesm.exe           000000000089677F  clm_driver_mp_clm         803  clm_driver.F90
7:cesm.exe           0000000000849921  lnd_comp_mct_mp_l         444  lnd_comp_mct.F90
7:cesm.exe           0000000000469CBE  component_mod_mp_         681  component_mod.F90
7:cesm.exe           000000000043BD99  cesm_comp_mod_mp_        2639  cesm_comp_mod.F90
7:cesm.exe           000000000045285B  MAIN__                     68  cesm_driver.F90</thetext>
  </long_desc><long_desc isprivate="0" >
    <commentid>8211</commentid>
    <comment_count>1</comment_count>
    <who name="Erik Kluzek">erik</who>
    <bug_when>2017-09-18 11:37:12 -0600</bug_when>
    <thetext>The problem is from this line:

        if (ctot_state(i) /= 0._r8 .and. ciso_state(i) /= 0._r8) then
           ciso_flux(i) = ctot_flux(i) * (ciso_state(i)/ctot_state(i)) * frax
        else

ciso_state is set to something like -5e+305 for some reason, and hence dividing by the small value of ctot_state makes it overflow.

And a similar test fails on yellowstone.

SMS_D_Lm13.f10_f10_musgs.I1850Clm50BgcCrop.yellowstone_intel.clm-ciso_monthly

I think this worked in simulations that were done because they weren&apos;t run in DEBUG mode. 

I&apos;m going to leave this problem as an expected fail.</thetext>
  </long_desc><long_desc isprivate="0" >
    <commentid>8212</commentid>
    <comment_count>2</comment_count>
    <who name="Bill Sacks">sacks</who>
    <bug_when>2017-09-18 14:10:17 -0600</bug_when>
    <thetext>From a quick look through the code: It looks like it could be worth determining which of the many fluxes added to / subtracted from cpool in CStateUpdate1 has this huge value.</thetext>
  </long_desc><long_desc isprivate="0" >
    <commentid>8213</commentid>
    <comment_count>3</comment_count>
    <who name="Keith Oleson">oleson</who>
    <bug_when>2017-09-18 17:11:24 -0600</bug_when>
    <thetext>This bug seems quite similar to a bug Charlie and Danica fixed with regard to crop seed C as follows from Danica:

&quot;I&apos;m happy to dive into the details of the bugs when you return. A brief description (you shouldn&apos;t think about it much while you&apos;re traveling): The bugs mostly dealt with the crop seed deficit &amp; the fact that crop seed C wasn&apos;t initialized with isotope values. In the desert regions, the deficit accumulated when crops didn&apos;t grow and the seed C was still getting removed and was subtracted from total veg. C, causing that pool to go negative in crop regions when the crops didn&apos;t grow. The fix is to treat the deficit similar to the excess maintenance respiration pool, and subtract it from the total soil column C rather than veg C. It&apos;s not a perfect solution, but it works and is consistent with some of the other fixes that were previously implemented. The third bug was the one that we found during the CESM meeting (live stem C) that didn&apos;t get incorporated into the tests that we were doing.&quot;

However, I believe we were getting large negative values of ciso_state which I think was associated with totvegc, and the line number in the error here seems to indicate that it is a cpool problem, not a totvegc problem, so this may be a red herring.

I&apos;m not sure exactly what the bug fix was (I&apos;m adding Danica on this bug report), but it seems like we could check to make sure it didn&apos;t get lost or something, just in case it is related to the current problem.

I guess this particular test must be new since clm4_5_16_r252, because this test wasn&apos;t present in my cheyenne testing with smanchanges_n06_clm4_5_16_r252.</thetext>
  </long_desc><long_desc isprivate="0" >
    <commentid>8221</commentid>
    <comment_count>4</comment_count>
    <who name="Erik Kluzek">erik</who>
    <bug_when>2017-09-19 11:21:22 -0600</bug_when>
    <thetext>OK, I did more testing, and found this is a problem in more situations than I thought. Hence, I&apos;m upping it&apos;s priority and importance.

It does show up in runs with DEBUG=FALSE, just with different behavior with the flux_dribbler complaining. My tests were with f10, so I tried f09 and get the same problem. The tests that Keith did were with f09, and I also replicated his test when I first took this over again. That may mean I can go back through and see what update on the branch caused the test to break. It could be an update to a newer version of CLM, or another update that happened.

And yes this is a new test in order to exercise running crop and c-isotopes on at the same time.</thetext>
  </long_desc><long_desc isprivate="0" >
    <commentid>8255</commentid>
    <comment_count>5</comment_count>
    <who name="Erik Kluzek">erik</who>
    <bug_when>2017-10-05 11:49:56 -0600</bug_when>
    <thetext>OK, when I use a properly spunup initial condition file (with isotopes on) these tests work fine.

ERS_D_Lm9.f10_f10_musgs.IHistClm50BgcCrop.cheyenne_intel.clm-ciso_monthly
SMS_D_Lm9.f10_f10_musgs.I1850Clm50BgcCrop.cheyenne_intel.clm-ciso_monthly

So it&apos;s a problem of starting up from a non-isotope case to an isotope case.</thetext>
  </long_desc>
      
      

    </bug>
    <bug>
          <bug_id>2516</bug_id>
          
          <creation_ts>2017-09-27 11:59:43 -0600</creation_ts>
          <short_desc>Bug in CNFireFluxes for m_livestemc_to_litter_fire, m_livestemc_to_deadstemc_fire, m_deadstemc_to_litter_fire, m_livecrootc_to_litter_fire</short_desc>
          <delta_ts>2017-10-03 10:09:17 -0600</delta_ts>
          <reporter_accessible>1</reporter_accessible>
          <cclist_accessible>1</cclist_accessible>
          <classification_id>1</classification_id>
          <classification>Unclassified</classification>
          <product>CCSM/CESM CLM</product>
          <component>CLM 4.5</component>
          <version>CESM2.0.x Development</version>
          <rep_platform>All</rep_platform>
          <op_sys>All</op_sys>
          <bug_status>REOPENED</bug_status>
          <resolution></resolution>
          
          
          <bug_file_loc></bug_file_loc>
          <status_whiteboard></status_whiteboard>
          <keywords></keywords>
          <priority>P3</priority>
          <bug_severity>normal</bug_severity>
          <target_milestone>CLM5</target_milestone>
          
          
          <everconfirmed>1</everconfirmed>
          <reporter name="Erik Kluzek">erik</reporter>
          <assigned_to name="Erik Kluzek">erik</assigned_to>
          <cc>dlawren</cc>
    
    <cc>lifang</cc>
    
    <cc>oleson</cc>
    
    <cc>rfisher</cc>
          
          <cf_fixedinversion>clm4_5_16_r257</cf_fixedinversion>

      

      

      

          <comment_sort_order>oldest_to_newest</comment_sort_order>  
          <long_desc isprivate="0" >
    <commentid>8232</commentid>
    <comment_count>0</comment_count>
    <who name="Erik Kluzek">erik</who>
    <bug_when>2017-09-27 11:59:43 -0600</bug_when>
    <thetext>This goes back to the first versions of CLM4.5 fire. This problem was found by Hui Tang. We don&apos;t believe they cause a large change to the climate, but seem to be more intuitively correct.

Setting of the following arrays in CNFireFluxes had an incorrect term in them:
m_livestemc_to_litter_fire, m_livestemc_to_deadstemc_fire, m_deadstemc_to_litter_fire, m_livecrootc_to_litter_fire

The m_*_fire arrays are all in units of gC/m2/s, and are the fire emissions of Carbon from the given type.

Here&apos;s the change for CNFireBaseMod.F90 in clm4_5_16_256 (the same change also needs to go into CNFireLi2014Mod.F90 as well for clm4_5).

@@ -650,7 +651,7 @@
              fm_other(patch%itype(p))
         m_livestemc_to_litter_fire(p)               =  livestemc(p) * f * &amp;
              (1._r8 - cc_lstem(patch%itype(p))) * &amp;
-             fm_droot(patch%itype(p))    
+             fm_lstem(patch%itype(p))    
         m_livestemc_storage_to_litter_fire(p)       =  livestemc_storage(p) * f * &amp;
              (1._r8 - cc_other(patch%itype(p))) * &amp;
              fm_other(patch%itype(p))
@@ -659,10 +660,10 @@
              fm_other(patch%itype(p))
         m_livestemc_to_deadstemc_fire(p)            =  livestemc(p) * f * &amp;
              (1._r8 - cc_lstem(patch%itype(p))) * &amp;
-             (fm_lstem(patch%itype(p))-fm_droot(patch%itype(p)))
+             (fm_lstem(patch%itype(p))-fm_dstem(patch%itype(p)))
         m_deadstemc_to_litter_fire(p)               =  deadstemc(p) * f * m * &amp;
              (1._r8 - cc_dstem(patch%itype(p))) * &amp;
-             fm_droot(patch%itype(p))    
+             fm_dstem(patch%itype(p))    
         m_deadstemc_storage_to_litter_fire(p)       =  deadstemc_storage(p) * f * &amp;
              (1._r8 - cc_other(patch%itype(p))) * &amp;
              fm_other(patch%itype(p))
@@ -678,7 +679,7 @@
              (1._r8- cc_other(patch%itype(p))) * &amp;
              fm_other(patch%itype(p))
         m_livecrootc_to_litter_fire(p)              =  livecrootc(p)         * f * &amp;
-             fm_droot(patch%itype(p))
+             fm_lroot(patch%itype(p))
         m_livecrootc_storage_to_litter_fire(p)      =  livecrootc_storage(p) * f * &amp;
              (1._r8- cc_other(patch%itype(p))) * &amp;
              fm_other(patch%itype(p))


Note here: f is the fire rate (1/sec), m is the acceleration factor, cc_* terms are combustion completeness factor, and fm_* terms are fire related mortality terms.

So this means

fire emission of transfer of live-stem to litter = live-stem * f * (1 - cc(livestem))*fm(live-stem) (rather than fm(dead-root))

fire emission of transfer of live-stem to deadstem = livestem * f * (1 - cc(live-stem)*(fm(live-stem) - fm(dead-stem)) (rather than fm(deadroot))

fire emission of transfer of dead-stem to litter = deadstem * f * m * (1 - cc(dead-stem))*fm(dead-stem)) (rather than fm(dead-root))

fire emission of transfer of live-root to litter = liveroot * f * fm(live-root) (rather than fm(dead-root))</thetext>
  </long_desc><long_desc isprivate="0" >
    <commentid>8234</commentid>
    <comment_count>1</comment_count>
    <who name="Erik Kluzek">erik</who>
    <bug_when>2017-09-27 14:08:21 -0600</bug_when>
    <thetext>OK, the guiding principle seems to be that when cc_* and fm_* is used in a calculation of fire emission the two should match each other and they should either be the main type, unless it&apos;s (type)_storage or (type)_xfer then it should be &quot;other&quot;.

That principle seems to be born out in the code. With the following exception where the same problem shows up for Nitrogen....

Index: CNFireBaseMod.F90
===================================================================
--- CNFireBaseMod.F90	(revision 86763)
+++ CNFireBaseMod.F90	(working copy)
@@ -716,7 +716,7 @@
              fm_other(patch%itype(p))
         m_livestemn_to_litter_fire(p)              =  livestemn(p) * f * &amp;
              (1._r8 - cc_lstem(patch%itype(p))) * &amp;
-             fm_droot(patch%itype(p))
+             fm_lstem(patch%itype(p))
         m_livestemn_storage_to_litter_fire(p)      =  livestemn_storage(p) * f * &amp;
              (1._r8 - cc_other(patch%itype(p))) * &amp;
              fm_other(patch%itype(p))   
@@ -728,7 +728,7 @@
              (fm_lstem(patch%itype(p))-fm_droot(patch%itype(p)))
         m_deadstemn_to_litter_fire(p)              =  deadstemn(p) * f * m * &amp;
              (1._r8 - cc_dstem(patch%itype(p))) * &amp;
-             fm_droot(patch%itype(p))    
+             fm_dstem(patch%itype(p))    
         m_deadstemn_storage_to_litter_fire(p)      =  deadstemn_storage(p) * f * &amp;
              (1._r8 - cc_other(patch%itype(p))) * &amp;
              fm_other(patch%itype(p))</thetext>
  </long_desc><long_desc isprivate="0" >
    <commentid>8235</commentid>
    <comment_count>2</comment_count>
    <who name="Erik Kluzek">erik</who>
    <bug_when>2017-09-27 15:03:23 -0600</bug_when>
    <thetext>Dave verified that the change in comment 1 should be applied as well. So I&apos;ll go forward with it as well.</thetext>
  </long_desc><long_desc isprivate="0" >
    <commentid>8247</commentid>
    <comment_count>3</comment_count>
    <who name="Erik Kluzek">erik</who>
    <bug_when>2017-10-02 12:45:23 -0600</bug_when>
    <thetext>Fang Li, let us know that this &quot;fix&quot; is incorrect. Hence, we need to revert.

   &quot;Your changes in CNFireBaseMod.F90 for clm4_5_16_r257 are wrong, please change back to clm4_5_16_r256.
    In fire code, fm_droot represents the fraction of whole-plant mortality in post-fire regions, and also used to represent the fraction of plant-tissue mortality for deadstem, croot, and fraction of transport from livestem/livecroot to litter. fm_dstem is useless and can be removed from parameter file.&quot;</thetext>
  </long_desc><long_desc isprivate="0" >
    <commentid>8248</commentid>
    <comment_count>4</comment_count>
    <who name="Erik Kluzek">erik</who>
    <bug_when>2017-10-02 13:04:45 -0600</bug_when>
    <thetext>Note, the code doesn&apos;t define the meaning of the fm_ terms. The params file has them defined as follows (note that fm_dstem has the wrong long_name):

        double fm_droot(pft) ;
                fm_droot:units = &quot;0 to 1&quot; ;
                fm_droot:long_name = &quot;Fire-related mortality factor for dead roots&quot; ;
                fm_droot:_FillValue = -999.99 ;
        double fm_dstem(pft) ;
                fm_dstem:units = &quot;0 to 1&quot; ;
                fm_dstem:long_name = &quot;Fire-related mortality factor for dead roots&quot; ;
                fm_dstem:_FillValue = -999.99 ;
        double fm_leaf(pft) ;
                fm_leaf:units = &quot;0 to 1&quot; ;
                fm_leaf:long_name = &quot;Fire-related mortality factor for leaf&quot; ;
                fm_leaf:_FillValue = -999.99 ;
        double fm_lroot(pft) ;
                fm_lroot:units = &quot;0 to 1&quot; ;
                fm_lroot:long_name = &quot;Fire-related mortality factor for live roots&quot; ;
                fm_lroot:_FillValue = -999.99 ;
        double fm_lstem(pft) ;
                fm_lstem:units = &quot;0 to 1&quot; ;
                fm_lstem:long_name = &quot;Fire-related mortality factor for live stem&quot; ;
                fm_lstem:_FillValue = -999.99 ;
        double fm_other(pft) ;
                fm_other:units = &quot;0 to 1&quot; ;
                fm_other:long_name = &quot;Fire-related mortality factor for other plant&quot; ;
                fm_other:_FillValue = -999.99 ;
        double fm_root(pft) ;
                fm_root:units = &quot;0 to 1&quot; ;
                fm_root:long_name = &quot;Fire-related mortality factor for fine roots&quot; ;
                fm_root:_FillValue = -999.99 ;</thetext>
  </long_desc><long_desc isprivate="0" >
    <commentid>8249</commentid>
    <comment_count>5</comment_count>
    <who name="Erik Kluzek">erik</who>
    <bug_when>2017-10-02 14:05:33 -0600</bug_when>
    <thetext>In terms of values for the arrays on the params file in both CLM45/CLM50:

fm_droot, fm_lroot, and fm_root are all the same

fm_other, fm_lstem are the same

In CLM50:

fm_dstem and fm_droot are the same

In CLM45:

fm_dstem and fm_other are the same
(also note that prog crop PFT&apos;s are set to zero)

So in terms of how they are currently used the dead, live, and fine root terms are identical (so one term for all roots could be used). livestem and other are the same. And then dead-stem is different between CLM45 and CLM50. So you could reduce the parameters to:

fm_root (live, dead or fine roots)
fm_dstem (dead stem)
fm_other (everything else including live-stem)</thetext>
  </long_desc><long_desc isprivate="0" >
    <commentid>8250</commentid>
    <comment_count>6</comment_count>
    <who name="Erik Kluzek">erik</who>
    <bug_when>2017-10-02 14:07:03 -0600</bug_when>
    <thetext>for the cc_* terms there&apos;s fewer, but only three have different values.

there&apos;s: dead-stem, live-stem, leaf and other (and for both CLM45 and CLM50 dead-stem and live-stem are equal).</thetext>
  </long_desc><long_desc isprivate="0" >
    <commentid>8252</commentid>
    <comment_count>7</comment_count>
    <who name="Erik Kluzek">erik</who>
    <bug_when>2017-10-03 10:09:17 -0600</bug_when>
    <thetext>Add Fang to the bug report.</thetext>
  </long_desc>
      
      

    </bug>
    <bug>
          <bug_id>2529</bug_id>
          
          <creation_ts>2017-11-06 13:23:44 -0700</creation_ts>
          <short_desc>SSP case that runs on cheyenne fails on hobart.</short_desc>
          <delta_ts>2017-11-13 13:56:44 -0700</delta_ts>
          <reporter_accessible>1</reporter_accessible>
          <cclist_accessible>1</cclist_accessible>
          <classification_id>1</classification_id>
          <classification>Unclassified</classification>
          <product>CCSM/CESM CLM</product>
          <component>CLM 5.0</component>
          <version>CESM2.0.z Development</version>
          <rep_platform>All</rep_platform>
          <op_sys>All</op_sys>
          <bug_status>ASSIGNED</bug_status>
          <resolution></resolution>
          
          
          <bug_file_loc></bug_file_loc>
          <status_whiteboard></status_whiteboard>
          <keywords></keywords>
          <priority>P3</priority>
          <bug_severity>normal</bug_severity>
          <target_milestone>CLM5</target_milestone>
          
          
          <everconfirmed>1</everconfirmed>
          <reporter name="Erik Kluzek">erik</reporter>
          <assigned_to name="Erik Kluzek">erik</assigned_to>
          <cc>rfisher</cc>
    
    <cc>sacks</cc>
          
          <cf_fixedinversion></cf_fixedinversion>

      

      

      

          <comment_sort_order>oldest_to_newest</comment_sort_order>  
          <long_desc isprivate="0" >
    <commentid>8330</commentid>
    <comment_count>0</comment_count>
    <who name="Erik Kluzek">erik</who>
    <bug_when>2017-11-06 13:23:44 -0700</bug_when>
    <thetext>In clm4_5_16_r262 test fails on hobart, but it ran on cheyenne: SSP_D_Ld10.f19_g17.I1850Clm50Bgc.hobart_intel.clm-rtmColdSSP

the error message doesn&apos;t give any help.</thetext>
  </long_desc><long_desc isprivate="0" >
    <commentid>8349</commentid>
    <comment_count>1</comment_count>
    <who name="Bill Sacks">sacks</who>
    <bug_when>2017-11-13 13:56:44 -0700</bug_when>
    <thetext>I wonder if this is a memory issue. This test uses 96 tasks on hobart, which I think is a lot less than we typically use for f19.</thetext>
  </long_desc>
      
      

    </bug>
    <bug>
          <bug_id>2531</bug_id>
          
          <creation_ts>2017-11-09 13:12:23 -0700</creation_ts>
          <short_desc>FATES doesn&apos;t call SoilBiogeochemCompetitionInit</short_desc>
          <delta_ts>2017-11-09 13:12:23 -0700</delta_ts>
          <reporter_accessible>1</reporter_accessible>
          <cclist_accessible>1</cclist_accessible>
          <classification_id>1</classification_id>
          <classification>Unclassified</classification>
          <product>CCSM/CESM CLM</product>
          <component>CLM 5.0</component>
          <version>CESM2.0.z Development</version>
          <rep_platform>All</rep_platform>
          <op_sys>All</op_sys>
          <bug_status>ASSIGNED</bug_status>
          <resolution></resolution>
          
          
          <bug_file_loc></bug_file_loc>
          <status_whiteboard></status_whiteboard>
          <keywords></keywords>
          <priority>P3</priority>
          <bug_severity>normal</bug_severity>
          <target_milestone>CLM5</target_milestone>
          
          
          <everconfirmed>1</everconfirmed>
          <reporter name="Erik Kluzek">erik</reporter>
          <assigned_to name="Erik Kluzek">erik</assigned_to>
          <cc>dlawren</cc>
    
    <cc>rfisher</cc>
          
          <cf_fixedinversion></cf_fixedinversion>

      

      

      

          <comment_sort_order>oldest_to_newest</comment_sort_order>  
          <long_desc isprivate="0" >
    <commentid>8336</commentid>
    <comment_count>0</comment_count>
    <who name="Erik Kluzek">erik</who>
    <bug_when>2017-11-09 13:12:23 -0700</bug_when>
    <thetext>In look at the code for clm4_5_16_r258 it looks like FATES wouldn&apos;t call SoilBiogeochemCompetitionInit. The main thing that does is to do some settings based on suplnitro. Which might not be used for fates. 

But, it also sets: dt, and bdnr, so it&apos;s possible when running fates this isn&apos;t being done -- and that could be a problem that affects answers.</thetext>
  </long_desc>
      
      

    </bug>
    <bug>
          <bug_id>2532</bug_id>
          
          <creation_ts>2017-11-10 16:03:14 -0700</creation_ts>
          <short_desc>Issue warning in build-namelist if you are trying to run Carbon isotopes for present day (non-transient)</short_desc>
          <delta_ts>2017-11-10 16:03:14 -0700</delta_ts>
          <reporter_accessible>1</reporter_accessible>
          <cclist_accessible>1</cclist_accessible>
          <classification_id>1</classification_id>
          <classification>Unclassified</classification>
          <product>CCSM/CESM CLM</product>
          <component>CLM 5.0</component>
          <version>CESM2.0.z Development</version>
          <rep_platform>All</rep_platform>
          <op_sys>All</op_sys>
          <bug_status>ASSIGNED</bug_status>
          <resolution></resolution>
          
          
          <bug_file_loc></bug_file_loc>
          <status_whiteboard></status_whiteboard>
          <keywords></keywords>
          <priority>P3</priority>
          <bug_severity>normal</bug_severity>
          <target_milestone>CLM5</target_milestone>
          
          
          <everconfirmed>1</everconfirmed>
          <reporter name="Erik Kluzek">erik</reporter>
          <assigned_to name="Erik Kluzek">erik</assigned_to>
          <cc>dlawren</cc>
    
    <cc>rfisher</cc>
          
          <cf_fixedinversion></cf_fixedinversion>

      

      

      

          <comment_sort_order>oldest_to_newest</comment_sort_order>  
          <long_desc isprivate="0" >
    <commentid>8337</commentid>
    <comment_count>0</comment_count>
    <who name="Erik Kluzek">erik</who>
    <bug_when>2017-11-10 16:03:14 -0700</bug_when>
    <thetext>CLM build-namelist should issue a warning and die if you are trying to run for present day fixed conditions and with carbon istopes on (either use_c13 or use_c14). Carbon isotopes should be allowed for either an 1850 spinup case or transient case. With the current warning mechanism in build-namelist the user can continue their case by adding -ignore_warnings to CLM_BLDNML_OPTS.</thetext>
  </long_desc>
      
      

    </bug>
    <bug>
          <bug_id>2533</bug_id>
          
          <creation_ts>2017-11-10 16:15:08 -0700</creation_ts>
          <short_desc>c13/c14 isotope time-series is awkward for 1850 control (convert to streams file)</short_desc>
          <delta_ts>2017-11-17 15:53:01 -0700</delta_ts>
          <reporter_accessible>1</reporter_accessible>
          <cclist_accessible>1</cclist_accessible>
          <classification_id>1</classification_id>
          <classification>Unclassified</classification>
          <product>CCSM/CESM CLM</product>
          <component>CLM 5.0</component>
          <version>CESM2.0.z Development</version>
          <rep_platform>All</rep_platform>
          <op_sys>All</op_sys>
          <bug_status>ASSIGNED</bug_status>
          <resolution></resolution>
          
          
          <bug_file_loc></bug_file_loc>
          <status_whiteboard></status_whiteboard>
          <keywords></keywords>
          <priority>P3</priority>
          <bug_severity>normal</bug_severity>
          <target_milestone>Future</target_milestone>
          
          
          <everconfirmed>1</everconfirmed>
          <reporter name="Erik Kluzek">erik</reporter>
          <assigned_to name="Erik Kluzek">erik</assigned_to>
          <cc>cdkoven</cc>
    
    <cc>dlawren</cc>
    
    <cc>klindsay</cc>
    
    <cc>rfisher</cc>
          
          <cf_fixedinversion></cf_fixedinversion>

      

      

      

          <comment_sort_order>oldest_to_newest</comment_sort_order>  
          <long_desc isprivate="0" >
    <commentid>8338</commentid>
    <comment_count>0</comment_count>
    <who name="Erik Kluzek">erik</who>
    <bug_when>2017-11-10 16:15:08 -0700</bug_when>
    <thetext>Currently if you do a 1850 control, the assumed c13/c14 is for present day (delta of 0). You can get around this by asking for the c13/c14 time-series files, and if your start year is 0001, it&apos;ll use the 1850 value from the file. It&apos;s a little awkward since if you run a control for more than one thousand eight hundred and fifty years, it&apos;ll start running through the time-series file. For future scenarios it&apos;ll use the last value in the file, which is the most reasonable thing to do.

I think the best way around it, is to change the handling of this file from custom code to using the streams mechanism. This will actually shorten the amount of code needed in CLM as well as give more control, options, and flexibility in it&apos;s handling. The control for how the data was handled would be in the namelist for it and more obvious.

I think the sectors can be handled in streams by just representing them as three grid cells. This would also move the description of the data from baked inside the code to an outside grid file that could be changed with new datasets.</thetext>
  </long_desc><long_desc isprivate="0" >
    <commentid>8339</commentid>
    <comment_count>1</comment_count>
    <who name="Erik Kluzek">erik</who>
    <bug_when>2017-11-10 16:16:48 -0700</bug_when>
    <thetext>This also means the default for 1850 and transient cases when use_c13/use_c14 are on should be to also turn on the time-series files for these cases. That&apos;ll do the right thing most of the time.</thetext>
  </long_desc><long_desc isprivate="0" >
    <commentid>8340</commentid>
    <comment_count>2</comment_count>
    <who name="Keith Lindsay">klindsay</who>
    <bug_when>2017-11-13 09:38:34 -0700</bug_when>
    <thetext>Erik,

When I looked at using streams to handle the CMIP6 dataset, it looked to me like the shr code didn&apos;t handle the time units in the dataset.

time:units in the dataset is &quot;years since 1850-01-01 0:0:0.0&quot;, and shr_string_parseCFtunit in shr_string_mod.F90 has the comment
!  Input string is like &quot;days since 0001-06-15 15:20:45.5 -6:00&quot;
!    - recognizes &quot;days&quot;, &quot;hours&quot;, &quot;minutes&quot;, &quot;seconds&quot;
!    - must have at least yyyy-mm-dd, hh:mm:ss.s is optional
!    - expects a &quot;since&quot; in the string
!    - ignores time zone part


Assuming I&apos;m interpreting the above correctly, it seems like one of the following needs to happen:
1) extend shr code to handle this dataset&apos;s time:units
2) change the dataset to have time:units that shr code handles

Option 1) seemed unappealing to me because of the shr code&apos;s support for both no_leap and gregorian calendars. It seemed like it might be complicated to implement new functionality in shr code while not being consistent with the existing shr code.

If you go the route of option 2), I&apos;ll need to modify POP&apos;s code that processes this dataset, assuming that we want to continue having CLM and POP read the same file for this forcing. Please let me know if decide to pursue this path.

Keith</thetext>
  </long_desc><long_desc isprivate="0" >
    <commentid>8341</commentid>
    <comment_count>3</comment_count>
    <who name="Keith Lindsay">klindsay</who>
    <bug_when>2017-11-13 09:59:10 -0700</bug_when>
    <thetext>(In reply to Erik Kluzek from comment #1)
&gt; This also means the default for 1850 and transient cases when
&gt; use_c13/use_c14 are on should be to also turn on the time-series files for
&gt; these cases. That&apos;ll do the right thing most of the time.

It sounds like this will lead to using the 1850 value for these forcings, in spinup runs, and in the 1850 control runs.

The 1850 values (permil) of Delta14C in the CMIP6 dataset in the different latitude bands are
90S-30S: -5.8
30S-30N: -4
30N-90N: -2.3

Is that what we want to be using in our BGC spinups and in the 1850 control runs? I&apos;m used to using 0 permil for PI spinups, though this does create a jump at 1850.

I can see arguments for using 0 or for using the 1850 values.

I definitely think we should use the same value in the spinups as in the 1850 control runs. I also think we should use the same values in CLM and in POP.

Unfortunately, I don&apos;t see a specification for this in the C4MIP GMD paper, Jones et al. 2016.</thetext>
  </long_desc><long_desc isprivate="0" >
    <commentid>8342</commentid>
    <comment_count>4</comment_count>
    <who name="charlie">cdkoven</who>
    <bug_when>2017-11-13 10:11:23 -0700</bug_when>
    <thetext>Agreed with Keith that there are arguments for using either 0 or the PI values during spinup and PI controls.  I suppose I&apos;d vote for using the PI values, even though that&apos;s not what my original code does, in the interest of avoiding artificial discontinuities.</thetext>
  </long_desc><long_desc isprivate="0" >
    <commentid>8343</commentid>
    <comment_count>5</comment_count>
    <who name="Keith Lindsay">klindsay</who>
    <bug_when>2017-11-13 10:18:54 -0700</bug_when>
    <thetext>(In reply to Keith Lindsay from comment #2)

&gt; Option 1) seemed unappealing to me because of the shr code&apos;s support for
&gt; both no_leap and gregorian calendars. It seemed like it might be complicated
&gt; to implement new functionality in shr code while not being consistent with
&gt; the existing shr code.

I meant &quot;... while being consistent ...&quot;.
The not slipped in from a different chain of thought.</thetext>
  </long_desc><long_desc isprivate="0" >
    <commentid>8344</commentid>
    <comment_count>6</comment_count>
    <who name="David Lawrence">dlawren</who>
    <bug_when>2017-11-13 10:29:45 -0700</bug_when>
    <thetext>It makes more sense to me to use 1850 values for spinup and 1850 control. Question: if we were using zero per mil, then can you run with isotopes off during spinup and in the 1850 control? ... and only turn them on for the transient, thereby saving some computer time?

In the end, I think the decision on what to do should come from Charlie and Keith since they have more experience with isotopes.</thetext>
  </long_desc><long_desc isprivate="0" >
    <commentid>8345</commentid>
    <comment_count>7</comment_count>
    <who name="charlie">cdkoven</who>
    <bug_when>2017-11-13 10:34:51 -0700</bug_when>
    <thetext>re Dave&apos;s Question: using zero or the PR value shouldn&apos;t really help either way for either isotope. For 14C, since the spinup problem is equilibration with respect to radioactive decay, you still have to do that (albeit in an accelerated way under AD).  For 13C, the spinup problem there is with respect to isotopic fractionation, so, again, you still have to actually do it.  The atmospheric value just becomes the boundary condition for the system in both cases, and in both cases you need to do the equilibration in AD mode in order to let it propagate rapidly through all the pools.</thetext>
  </long_desc><long_desc isprivate="0" >
    <commentid>8346</commentid>
    <comment_count>8</comment_count>
    <who name="Erik Kluzek">erik</who>
    <bug_when>2017-11-13 11:11:58 -0700</bug_when>
    <thetext>(In reply to Keith Lindsay from comment #2)
&gt; Assuming I&apos;m interpreting the above correctly, it seems like one of the
&gt; following needs to happen:
&gt; 1) extend shr code to handle this dataset&apos;s time:units
&gt; 2) change the dataset to have time:units that shr code handles
&gt; 
&gt; Option 1) seemed unappealing to me because of the shr code&apos;s support for
&gt; both no_leap and gregorian calendars. It seemed like it might be complicated
&gt; to implement new functionality in shr code while not being consistent with
&gt; the existing shr code.
&gt;

I looked into this as well. The meaning is a bit awkward for the Gregorian calendar. And because of this the CF contention warns against using a unit of years. But, it says you define the interval as 365 for no_leap or 365.2425 for Gregorian. So how exact the end result would be depends on the reference date.

It wouldn&apos;t be hard to extend the code in cime/src/share/util/shr_string_mod to handle this. But, because of this issue we probably shouldn&apos;t. I&apos;m bringing it up as an issue to CSEG, we&apos;ll see what feedback they have.

Here&apos;s the caution in the CF convention...

http://cfconventions.org/Data/cf-conventions/cf-conventions-1.7/build/ch04s04.html

&gt; We recommend that the unit year be used with caution. The Udunits 
&gt; package defines a year to be exactly 365.242198781 days (the interval 
&gt; between 2 successive &gt; passages of the sun through vernal equinox). It 
&gt; is not a calendar year. Udunits&gt; &gt; includes the following definitions for 
&gt; years: a common_year is 365 days, a leap_year is 366 days, a Julian_year 
&gt; is 365.25 days, and a Gregorian_year is 365.2425 days.
&gt; 
&gt; For similar reasons the unit month, which is defined in udunits.dat to be 
&gt; exactly year/12, should also be used with caution.</thetext>
  </long_desc><long_desc isprivate="0" >
    <commentid>8351</commentid>
    <comment_count>9</comment_count>
    <who name="Keith Lindsay">klindsay</who>
    <bug_when>2017-11-17 15:53:01 -0700</bug_when>
    <thetext>Regarding using 1850 values or 0 permil for 1850 control runs and spinup, I&apos;ve sought input from Alex Jahn, who developed the C isotopes in POP, and Bette Otto-Bliesner and Esther Brady, as representatives of the paleo and isotope users. Everyone has either no preference or a slight preference for using 1850 values. So counting those three, Charlie and myself, no one has expressed a strong preference for using 0 permil.

So I think we&apos;ve reached a consensus to use the 1850 values.

Note that this is independent of switching to shr code.

I do not plan on changing POP to use shr code, unless the dataset&apos;s time:units is changed. I will change POP to use the 1850 values in 1850 controls and spinup runs. (This is a little quirky for 14C because of the latitude bands in the dataset, but that&apos;s the way it is.)</thetext>
  </long_desc>
      
      

    </bug>

</bugzilla>